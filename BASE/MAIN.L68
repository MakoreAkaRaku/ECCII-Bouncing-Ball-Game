00001870 Starting Address
Assembler used: EASy68K Editor/Assembler v5.15.04
Created On: 04/01/2021 3:32:24

00000000                             1  ; =============================================================================
00000000                             2  ; TITLE    : EXAMPLE GAME (MAIN PROGRAM)
00000000                             3  ; AUTHOR   : ANTONI BURGUERA
00000000                             4  ; HISTORY  : 10-OCT-2020 - CREATION
00000000                             5  ;            11-OCT-2020 - MINOR CHANGES
00000000                             6  ; =============================================================================
00000000                             7  
00001000                             8              ORG     $1000
00001000                             9  
00001000                            10  ; --- CODE INCLUDES -----------------------------------------------------------
00001000                            11  
00001000                            12              INCLUDE "SYSCONST.X68"          ; SYSTEM CONSTANTS
00001000                            13  ; =============================================================================
00001000                            14  ; TITLE    : SYSTEM CONSTANTS
00001000                            15  ; AUTHOR   : ANTONI BURGUERA
00001000                            16  ; HISTORY  : XX-XXX-201X - CREATION
00001000                            17  ;            11-OCT-2020 - MINOR CHANGES
00001000                            18  ; =============================================================================
00001000                            19  
00001000                            20  ; --- TRAP RELATED CONSTANTS --------------------------------------------------
00001000                            21  
00001000  =00000000                 22  KBDTRAP     EQU     0                       ; KEYBOARD UPDATE TRAP
00001000  =00000001                 23  SCRTRAP     EQU     1                       ; SCREEN REFRESH TRAP
00001000                            24  
00001000                            25  ; --- KEY CODES (EASy68K)
00001000                            26  
00001000  =00000020                 27  KBDCHRSP    EQU     $20                     ; SPACE KEY
00001000  =0000004D                 28  KBDCHRMK    EQU     'M'                     ; M KEY
00001000  =00000010                 29  KBDCHRSH    EQU     $10                     ; SHIFT KEY
00001000  =00000050                 30  KBDCHRPK    EQU     'P'                     ; P KEY
00001000  =00000025                 31  KBDCHRLF    EQU     $25                     ; LEFT KEY
00001000  =00000026                 32  KBDCHRUP    EQU     $26                     ; UP KEY
00001000  =00000027                 33  KBDCHRRT    EQU     $27                     ; RIGHT KEY
00001000  =00000028                 34  KBDCHRDN    EQU     $28                     ; DOWN KEY
00001000                            35  
00001000                            36  ; --- KEYBOARD MAPPING --------------------------------------------------------
00001000                            37  
00001000  =00000025                 38  KBDLEFT     EQU     KBDCHRLF                ; LEFT BUTTON
00001000  =00000026                 39  KBDUP       EQU     KBDCHRUP                ; UP BUTTON
00001000  =00000027                 40  KBDRIGHT    EQU     KBDCHRRT                ; RIGHT BUTTON
00001000  =00000028                 41  KBDDOWN     EQU     KBDCHRDN                ; DOWN BUTTON
00001000  =00000020                 42  KBDFIRE1    EQU     KBDCHRSP                ; FIRE 1 BUTTON
00001000  =0000004D                 43  KBDFIRE2    EQU     KBDCHRMK                ; FIRE 2 BUTTON
00001000  =00000010                 44  KBDFIRE3    EQU     KBDCHRSH                ; FIRE 3 BUTTON
00001000  =00000050                 45  KBDPAUSE    EQU     KBDCHRPK                ; PAUSE BUTTON
00001000                            46  
00001000                            47  ; --- KEYBOARD BITFIELD MASKS -------------------------------------------------
00001000                            48  ; CONVENIENCE CONSTANTS TO ACCESS THE FOLLOWING BIT-FIELD.
00001000                            49  ; THIS BIT-FIELD IS USED BY SYSTEM VARS (KBDVAL) AND (KBDEDGE).
00001000                            50  ; +---+---+---+---+---+---+---+---+
00001000                            51  ; | 7 | 6 | 5 | 4 | 3 | 2 | 1 | 0 |
00001000                            52  ; +---+---+---+---+---+---+---+---+
00001000                            53  ;   |   |   |   |   |   |   |   |
00001000                            54  ;   |   |   |   |   |   |   |   +---------- LEFT BUTTON
00001000                            55  ;   |   |   |   |   |   |   +-------------- UP BUTTON
00001000                            56  ;   |   |   |   |   |   +------------------ RIGHT BUTTON
00001000                            57  ;   |   |   |   |   +---------------------- DOWN BUTTON
00001000                            58  ;   |   |   |   +-------------------------- FIRE 1 BUTTON
00001000                            59  ;   |   |   +------------------------------ FIRE 2 BUTTON
00001000                            60  ;   |   +---------------------------------- FIRE 3 BUTTON
00001000                            61  ;   +-------------------------------------- PAUSE BUTTON
00001000                            62  
00001000  =00000001                 63  KBDMSKLF    EQU     %00000001
00001000  =00000002                 64  KBDMSKUP    EQU     %00000010
00001000  =00000004                 65  KBDMSKRT    EQU     %00000100
00001000  =00000008                 66  KBDMSKDN    EQU     %00001000
00001000  =00000010                 67  KBDMSKF1    EQU     %00010000
00001000  =00000020                 68  KBDMSKF2    EQU     %00100000
00001000  =00000040                 69  KBDMSKF3    EQU     %01000000
00001000  =00000080                 70  KBDMSKPS    EQU     %10000000
00001000                            71  
00001000                            72  ; --- KEYBOARD BITFIELD POSITIONS ---------------------------------------------
00001000                            73  
00001000  =00000000                 74  KBDBITLF    EQU     0
00001000  =00000001                 75  KBDBITUP    EQU     1
00001000  =00000002                 76  KBDBITRT    EQU     2
00001000  =00000003                 77  KBDBITDN    EQU     3
00001000  =00000004                 78  KBDBITF1    EQU     4
00001000  =00000005                 79  KBDBITF2    EQU     5
00001000  =00000006                 80  KBDBITF3    EQU     6
00001000  =00000007                 81  KBDBITPS    EQU     7
00001000                            82  
00001000                            83  ; --- SCREEN RELATED CONSTANTS ------------------------------------------------
00001000                            84  
00001000  =00000280                 85  SCRWIDTH    EQU     640                     ; SCREEN WIDTH (PIXELS)
00001000  =000001E0                 86  SCRHEIGH    EQU     480                     ; SCREEN HEIGHT (PIXELS)
00001000  =00000001                 87  SCRIRQ      EQU     1                       ; SCREEN INTERRUPT NUMBER
00001000  =00000014                 88  SCRTIM      EQU     20                      ; SCREEN TIMER (MS)
00001000                            89  
00001000                            90  ; --- DYNAMIC MEMORY CONSTANTS ------------------------------------------------
00001000                            91  
00001000  =00000040                 92  DMMBSIZE    EQU     64                      ; BLOCK SIZE (BYTES). POWER OF TWO
00001000  =00000032                 93  DMMBNUM     EQU     50                      ; NUMBER OF BLOCKS
00001000  =00000000                 94  DMMSYSID    EQU     0                       ; SYSTEM OWNER ID (MUST BE 0)
00001000  =00000000                 95  -------------------- end include --------------------
00001000                            96              INCLUDE "SYSTEM.X68"            ; SYSTEM CODE
00001000                            97  ; =============================================================================
00001000                            98  ; TITLE    : SYSTEM MANAGEMENT (SYSTEM CODE)
00001000                            99  ; AUTHOR   : ANTONI BURGUERA
00001000                           100  ; COMMENTS : IT IS DIVIDED IN THREE BLOCKS:
00001000                           101  ;            - SYS : GENERIC.
00001000                           102  ;            - SCR : SCREEN MANAGEMENT.
00001000                           103  ;            - KBD : KEYBOARD MANAGEMENT.
00001000                           104  ; HISTORY  : XX-XXX-201X - CREATION
00001000                           105  ;            11-OCT-2020 - MINOR CHANGES
00001000                           106  ; =============================================================================
00001000                           107  
00001000                           108  ; -----------------------------------------------------------------------------
00001000                           109  SYSINIT
00001000                           110  ; INITIALIZES THE SYSTEM
00001000                           111  ; INPUT    - NONE
00001000                           112  ; OUTPUT   - NONE
00001000                           113  ; MODIFIES - NONE
00001000                           114  ; -----------------------------------------------------------------------------
00001000  205F                     115              MOVE.L  (A7)+,A0                ; GET RETURN ADDRESS
00001002  4EB9 000010B4            116              JSR     KBDINIT                 ; INIT KEYBOARD
00001008  4EB9 0000101C            117              JSR     SCRINIT                 ; INIT SCREEN
0000100E  4EB9 00001114            118              JSR     DMMINIT                 ; INIT DYNAMIC MEMORY
00001014  027C DFFF                119              ANDI.W  #$DFFF,SR               ; SWITCH TO USER
00001018  2F08                     120              MOVE.L  A0,-(A7)                ; PUT RETURN ADDRESS
0000101A  4E75                     121              RTS
0000101C                           122  
0000101C                           123  ; =============================================================================
0000101C                           124  ; SCREEN MANAGEMENT (SYSTEM CODE)
0000101C                           125  ; =============================================================================
0000101C                           126  
0000101C                           127  ; -----------------------------------------------------------------------------
0000101C                           128  SCRINIT
0000101C                           129  ; INITIALIZES THE SCREEN, SCREEN-RELATED INTERRUPT AND VARS.
0000101C                           130  ; INPUT    - NONE
0000101C                           131  ; OUTPUT   - NONE
0000101C                           132  ; MODIFIES - D0,D1,D2,D3
0000101C                           133  ; -----------------------------------------------------------------------------
0000101C  007C 0700                134              ORI.W   #$0700,SR               ; DISABLE ALL INT
00001020  21FC 0000109A 0084       135              MOVE.L  #SCRUPD,($80+SCRTRAP*4) ; INSTALL TRAP
00001028  223C 028001E0            136              MOVE.L  #SCRWIDTH<<16|SCRHEIGH,D1 ; SET RESOLUTION
0000102E  103C 0021                137              MOVE.B  #33,D0
00001032  4E4F                     138              TRAP    #15
00001034  7201                     139              MOVE.L  #1,D1                   ; SET WINDOWED MODE
00001036  4E4F                     140              TRAP    #15
00001038  323C FF00                141              MOVE.W  #$FF00,D1               ; CLEAR VISIBLE BUFFER
0000103C  103C 000B                142              MOVE.B  #11,D0
00001040  4E4F                     143              TRAP    #15
00001042  123C 0011                144              MOVE.B  #17,D1                  ; ENABLE DOUBLE BUFFER
00001046  103C 005C                145              MOVE.B  #92,D0
0000104A  4E4F                     146              TRAP    #15
0000104C  323C FF00                147              MOVE.W  #$FF00,D1               ; CLEAR HIDDEN BUFFER
00001050  103C 000B                148              MOVE.B  #11,D0
00001054  4E4F                     149              TRAP    #15
00001056  21FC 0000108C 0064       150              MOVE.L  #SCRISR,($60+SCRIRQ*4)  ; SET EXCEPTION VECTOR
0000105E  123C 0005                151              MOVE.B  #5,D1                   ; ENABLE EXCEPTION PROCESSING
00001062  103C 0020                152              MOVE.B  #32,D0
00001066  4E4F                     153              TRAP    #15
00001068  143C 0081                154              MOVE.B  #%10000000|SCRIRQ,D2    ; ENABLE AUTO-IRQ
0000106C  163C 0014                155              MOVE.B  #SCRTIM,D3
00001070  123C 0006                156              MOVE.B  #6,D1
00001074  103C 0020                157              MOVE.B  #32,D0
00001078  4E4F                     158              TRAP    #15
0000107A  4239 000018DA            159              CLR.B   (SCRINTCT)              ; PREPARE INTERRUPT FLAG
00001080  4239 000018DB            160              CLR.B   (SCRCYCCT)              ; PREPARE CYCLE COUNTER
00001086  027C F8FF                161              ANDI.W  #$F8FF,SR               ; ENABLE INTS
0000108A  4E75                     162              RTS
0000108C                           163  
0000108C                           164  ; -----------------------------------------------------------------------------
0000108C                           165  SCRISR
0000108C                           166  ; SCREEN TIMER ISR. INCREASES THE INTERRUPT COUNTER AND UPDATES DOUBLE BUFFER.
0000108C                           167  ; INPUT    - NONE
0000108C                           168  ; OUTPUT   - NONE
0000108C                           169  ; MODIFIES - NONE
0000108C                           170  ; -----------------------------------------------------------------------------
0000108C  5239 000018DA            171              ADDQ.B  #1,(SCRINTCT)           ; UPDATE INT FLAG/COUNTER
00001092  5239 000018DB            172              ADDQ.B  #1,(SCRCYCCT)           ; UPDATE CYCLE COUNTER
00001098  4E73                     173              RTE
0000109A                           174  
0000109A                           175  ; -----------------------------------------------------------------------------
0000109A                           176  SCRUPD
0000109A                           177  ; TRAP SERVICE ROUTINE IN CHARGE OF VISUALIZING CURRENT FRAME AND CLEARING
0000109A                           178  ; BUFFER FOR THE NEXT ONE.
0000109A                           179  ; INPUT    - NONE
0000109A                           180  ; OUTPUT   - NONE
0000109A                           181  ; MODIFIES - NONE
0000109A                           182  ; -----------------------------------------------------------------------------
0000109A  48A7 C000                183              MOVEM.W D0-D1,-(A7)
0000109E  103C 005E                184              MOVE.B  #94,D0                  ; UPDATE DOUBLE BUFFER
000010A2  4E4F                     185              TRAP    #15
000010A4  323C FF00                186              MOVE.W  #$FF00,D1               ; CLEAR HIDDEN BUFFER
000010A8  103C 000B                187              MOVE.B  #11,D0
000010AC  4E4F                     188              TRAP    #15
000010AE  4C9F 0003                189              MOVEM.W (A7)+,D0-D1
000010B2  4E73                     190              RTE
000010B4                           191  
000010B4                           192  ; =============================================================================
000010B4                           193  ; KEYBOARD MANAGEMENT (SYSTEM CODE)
000010B4                           194  ; =============================================================================
000010B4                           195  
000010B4                           196  ; -----------------------------------------------------------------------------
000010B4                           197  KBDINIT
000010B4                           198  ; INITIALIZES THE SYSTEM VARIABLES KBDSYS AND KBDVAL
000010B4                           199  ; INPUT    - NONE
000010B4                           200  ; OUTPUT   - NONE
000010B4                           201  ; MODIFIES - NONE
000010B4                           202  ; -----------------------------------------------------------------------------
000010B4  4239 000018D8            203              CLR.B   (KBDVAL)                ; INIT VARS
000010BA  4239 000018D9            204              CLR.B   (KBDEDGE)
000010C0  21FC 000010CA 0080       205              MOVE.L  #KBDREAD,($80+KBDTRAP*4) ; INSTALL
000010C8  4E75                     206              RTS
000010CA                           207  
000010CA                           208  ; -----------------------------------------------------------------------------
000010CA                           209  KBDREAD
000010CA                           210  ; TRAP SERVICE ROUTINE.
000010CA                           211  ; UPDATES THE SYSTEM VARIABLES KBDEDGE AND KBDVAL ACCORDING TO THE BITFIELD
000010CA                           212  ; DESCRIBED IN SYSCONST. KBDVAL HOLDS THE CURRENT VALUES AND KBDEFGE HOLDS
000010CA                           213  ; RISING EDGES FROM PREVIOUS CALL TO THE CURRENT ONE.
000010CA                           214  ; INPUT    - NONE
000010CA                           215  ; OUTPUT   - (KBDVAL) AND (KBDEDGE)
000010CA                           216  ; MODIFIES - NONE
000010CA                           217  ; -----------------------------------------------------------------------------
000010CA  48E7 F000                218              MOVEM.L D0-D3,-(A7)
000010CE  103C 0013                219              MOVE.B  #19,D0
000010D2  223C 50104D20            220              MOVE.L  #KBDPAUSE<<24+KBDFIRE3<<16+KBDFIRE2<<8+KBDFIRE1,D1
000010D8  4E4F                     221              TRAP    #15
000010DA  6100 002A                222              BSR     .STORE                  ; STORE FIRE1,FIRE2,FIRE3 AND PAUSE
000010DE  223C 28272625            223              MOVE.L  #KBDDOWN<<24+KBDRIGHT<<16+KBDUP<<8+KBDLEFT,D1
000010E4  4E4F                     224              TRAP    #15
000010E6  6100 001E                225              BSR     .STORE                  ; STORE KEY UP,DOWN,LEFT AND RIGTH.
000010EA  1039 000018D8            226              MOVE.B  (KBDVAL),D0             ; COMPUTE EDGE.
000010F0  4600                     227              NOT.B   D0                      ; EDGE=NOT(PREVIOUS) AND CURRENT.
000010F2  C002                     228              AND.B   D2,D0
000010F4  13C2 000018D8            229              MOVE.B  D2,(KBDVAL)             ; STORE VALUES (PRESS AND EDGE)
000010FA  13C0 000018D9            230              MOVE.B  D0,(KBDEDGE)
00001100  4CDF 000F                231              MOVEM.L (A7)+,D0-D3
00001104  4E73                     232              RTE
00001106                           233  
00001106  363C 0003                234  .STORE      MOVE.W  #3,D3                   ; TRANSLATES THE 8-BIT ENCODING
0000110A  E189                     235  .LOOP       LSL.L   #8,D1                   ; OF TRAP #15 TASK 19 INTO A 1-BIT
0000110C  E312                     236              ROXL.B  #1,D2                   ; PER KEYPRESS ENCODING
0000110E  51CB FFFA                237              DBRA.W  D3,.LOOP
00001112  4E75                     238              RTS
00001114                           239  
00001114                           240  ; =============================================================================
00001114                           241  ; DYNAMIC MEMORY MANAGEMENT (SYSTEM CODE)
00001114                           242  ; DYNAMIC MEMORY IS A SET OF DMMBNUM SLOTS OF DMMBSIZE BYTES EACH ONE.
00001114                           243  ; DMMBSIZE MUST BE POWER OF TWO. A SLOT HAS:
00001114                           244  ; - HEADER - 1 WORD. SPECIFIES THE OWNER (0 MEANS OWNED BY SYSTEM)
00001114                           245  ; - DATA   - DMMBSIZE - 2 BYTES. MAY CONTAIN VARS AND ANY KIND OF DATA RELATED
00001114                           246  ;            THE THE OWNER. IF OWNER==0, DATA IS MEANINGLESS.
00001114                           247  ; =============================================================================
00001114                           248  
00001114                           249  ; -----------------------------------------------------------------------------
00001114                           250  DMMINIT
00001114                           251  ; INITIALIZES THE DYNAMIC MEMORY TO ALL OWNED BY SYSTEM.
00001114                           252  ; INPUT    - NONE
00001114                           253  ; OUTPUT   - NONE
00001114                           254  ; MODIFIES - NONE
00001114                           255  ; -----------------------------------------------------------------------------
00001114  48E7 8080                256              MOVEM.L D0/A0,-(A7)
00001118  41F9 00001900            257              LEA     DMMDATA,A0
0000111E  303C 0031                258              MOVE.W  #DMMBNUM-1,D0
00001122  30BC 0000                259  .LOOP       MOVE.W  #DMMSYSID,(A0)
00001126  D1FC 00000040            260              ADD.L   #DMMBSIZE,A0
0000112C  51C8 FFF4                261              DBRA.W  D0,.LOOP
00001130  4CDF 0101                262              MOVEM.L (A7)+,D0/A0
00001134  4E75                     263              RTS
00001136                           264  
00001136                           265  ; -----------------------------------------------------------------------------
00001136                           266  DMMFIRST
00001136                           267  ; SEARCHES THE FIRST MEMORY SLOT NOT OWNED BY SYSTEM AND OUTPUTS A POINTER
00001136                           268  ; TO THE CORRESPONDING DATA (SLOT ADDRESS+2)
00001136                           269  ; INPUT    - NONE
00001136                           270  ; OUTPUT   - A0   : POINTER TO THE DATA OR 0 IF NOT FOUND
00001136                           271  ; MODIFIES - NONE (ASIDE OF OUTPUT)
00001136                           272  ; -----------------------------------------------------------------------------
00001136  41F9 00001900            273              LEA     DMMDATA,A0
0000113C  4A58                     274  DMMFRLOP    TST.W   (A0)+
0000113E  6600 0016                275              BNE     DMMFRFND
00001142  D1FC 0000003E            276              ADD.L   #DMMBSIZE-2,A0
00001148  B1FC 0000257F            277  DMMFRCOM    CMP.L   #DMMDATA+DMMBSIZE*DMMBNUM-1,A0
0000114E  6DEC                     278              BLT     DMMFRLOP
00001150  207C 00000000            279              MOVE.L  #0,A0
00001156  4E75                     280  DMMFRFND    RTS
00001158                           281  
00001158                           282  ; -----------------------------------------------------------------------------
00001158                           283  DMMNEXT
00001158                           284  ; SEARCHES THE NEXT MEMORY SLOT NOT OWNED BY SYSTEM AND OUTPUTS A POINTER
00001158                           285  ; TO THE CORRESPONDING DATA (SLOT ADDRESS+2)
00001158                           286  ; INPUT    - A0   : POINTER WITHIN THE CURRENT SLOT
00001158                           287  ; OUTPUT   - A0   : POINTER TO THE DATA OR 0 IF NOT FOUND
00001158                           288  ; MODIFIES - NONE (ASIDE OF OUTPUT)
00001158                           289  ; -----------------------------------------------------------------------------
00001158  2F00                     290              MOVE.L  D0,-(A7)
0000115A  2008                     291              MOVE.L  A0,D0
0000115C  C0BC FFFFFFC0            292              AND.L   #-DMMBSIZE,D0           ; TAKE ADVANTAGE OF ALIGNMENT
00001162  0680 00000040            293              ADD.L   #DMMBSIZE,D0
00001168  2040                     294              MOVE.L  D0,A0
0000116A  201F                     295              MOVE.L  (A7)+,D0
0000116C  60DA                     296              BRA     DMMFRCOM
0000116E                           297  
0000116E                           298  ; -----------------------------------------------------------------------------
0000116E                           299  DMMFRSTO
0000116E                           300  ; SEARCHES THE FIRST MEMORY SLOT WITH THE SPECIFIED ID AND OUTPUTS A POINTER
0000116E                           301  ; TO THE CORRESPONDING DATA (SLOT ADDRESS+2)
0000116E                           302  ; INPUT    - D0.W : ID TO SEARCH
0000116E                           303  ; OUTPUT   - A0   : POINTER TO THE DATA OR 0 IF NOT FOUND
0000116E                           304  ; MODIFIES - NONE (ASIDE OF OUTPUT)
0000116E                           305  ; -----------------------------------------------------------------------------
0000116E  41F9 00001900            306              LEA     DMMDATA,A0
00001174  B058                     307  DMMFLOOP    CMP.W   (A0)+,D0
00001176  6700 0016                308              BEQ     DMMFFND
0000117A  D1FC 0000003E            309              ADD.L   #DMMBSIZE-2,A0
00001180  B1FC 0000257F            310  DMMFCOM     CMP.L   #DMMDATA+DMMBSIZE*DMMBNUM-1,A0
00001186  6DEC                     311              BLT     DMMFLOOP
00001188  207C 00000000            312              MOVE.L  #0,A0
0000118E  4E75                     313  DMMFFND     RTS
00001190                           314  
00001190                           315  ; -----------------------------------------------------------------------------
00001190                           316  DMMNEXTO
00001190                           317  ; SEARCHES THE NEXT MEMORY SLOT WITH THE SPECIFIED ID AND OUTPUTS A POINTER
00001190                           318  ; TO THE CORRESPONDING DATA (SLOT ADDRESS+2)
00001190                           319  ; INPUT    - D0.W : ID TO SEARCH
00001190                           320  ;            A0   : POINTER WITHIN THE CURRENT SLOT
00001190                           321  ; OUTPUT   - A0   : POINTER TO THE DATA OR 0 IF NOT FOUND
00001190                           322  ; MODIFIES - NONE (ASIDE OF OUTPUT)
00001190                           323  ; -----------------------------------------------------------------------------
00001190  2F00                     324              MOVE.L  D0,-(A7)
00001192  2008                     325              MOVE.L  A0,D0
00001194  C0BC FFFFFFC0            326              AND.L   #-DMMBSIZE,D0           ; TAKE ADVANTAGE OF ALIGNMENT
0000119A  0680 00000040            327              ADD.L   #DMMBSIZE,D0
000011A0  2040                     328              MOVE.L  D0,A0
000011A2  201F                     329              MOVE.L  (A7)+,D0
000011A4  60DA                     330              BRA     DMMFCOM
000011A6                           331  
000011A6                           332  ; -----------------------------------------------------------------------------
000011A6                           333  DMMALLOC
000011A6                           334  ; SEARCHES THE FIRST FREE (SYS OWNED) SLOT, ASSIGNS TO THE SPECIFIED OWNER
000011A6                           335  ; AND RETURNS A POINTER TO THE CORRESPONDING DATA (SLOT ADDRESS + 2)
000011A6                           336  ; INPUT    - D0.W : ID TO ASSIGN
000011A6                           337  ; OUTPUT   - A0   : POINTER TO THE DATA OR 0 IF NOT FREE SPACE
000011A6                           338  ; MODIFIES - NONE (ASIDE OF OUTPUT)
000011A6                           339  ; -----------------------------------------------------------------------------
000011A6  3F00                     340              MOVE.W  D0,-(A7)
000011A8  4240                     341              CLR.W   D0
000011AA  4EB8 116E                342              JSR     DMMFRSTO
000011AE  301F                     343              MOVE.W  (A7)+,D0
000011B0  B1FC 00000000            344              CMP.L   #0,A0
000011B6  6700 0006                345              BEQ     .END
000011BA  3140 FFFE                346              MOVE.W  D0,-2(A0)
000011BE  4E75                     347  .END        RTS
000011C0                           348  
000011C0                           349  ; -----------------------------------------------------------------------------
000011C0                           350  DMMFREE
000011C0                           351  ; FREES THE SLOT TO WHICH THE PROVIDED POINTER BELONGS BY SETTING ITS OWNED TO
000011C0                           352  ; SYSTEM (0)
000011C0                           353  ; INPUT    - A0   : POINTER BELONGING TO THE SLOT TO FREE
000011C0                           354  ; OUTPUT   - NONE
000011C0                           355  ; MODIFIES - NONE
000011C0                           356  ; -----------------------------------------------------------------------------
000011C0  48E7 8080                357              MOVEM.L D0/A0,-(A7)
000011C4  2008                     358              MOVE.L  A0,D0
000011C6  C0BC FFFFFFC0            359              AND.L   #-DMMBSIZE,D0           ; TAKE ADVANTAGE OF ALIGNMENT
000011CC  2040                     360              MOVE.L  D0,A0
000011CE  4250                     361              CLR.W   (A0)
000011D0  4CDF 0101                362              MOVEM.L (A7)+,D0/A0
000011D4  4E75                     363              RTS
000011D4  4E75                     364  -------------------- end include --------------------
000011D6                           365              INCLUDE "CONST.X68"             ; GAME CONSTANTS
000011D6                           366  ; =============================================================================
000011D6                           367  ; TITLE    : PAD MANAGEMENT
000011D6                           368  ; AUTHOR   : FAUSTI RODRIGUEZ
000011D6                           369  ; COMMENTS :
000011D6                           370  ; HISTORY  :
000011D6                           371  ; =============================================================================
000011D6                           372  
000011D6                           373  ; --- PAD RELATED CONSTANTS ---------------------------------------------------
000011D6                           374  
000011D6                           375  ;PADWIDTH    EQU     90                      ; PAD WIDTH
000011D6                           376  ;PADHEIGH    EQU     78                      ; PAD HEIGHT
000011D6                           377  ;PADPCOL     EQU     $00FF0000               ; PEN COLOR
000011D6                           378  ;PADFCOL     EQU     $00770000               ; FILL COLOR
000011D6                           379  ;PADSPEED    EQU     8                       ; PAD SPEED
000011D6                           380  
000011D6  =0000004B                381  PADWIDTH    EQU     75   ;75                   ;PAD WIDTH
000011D6  =00000050                382  PADHEIGH    EQU     80 ;80                      ;PAD HEIGHT
000011D6                           383  
000011D6  =000000FF                384  PADPCOL     EQU     $000000FF               ;PEN COLOR
000011D6  =000000FF                385  PADFCOL     EQU     $000000FF               ;FILL COLOR
000011D6  =00000000                386  PAD2PCO     EQU     $00000000               ;PEN COLOR MAROON
000011D6  =003785D3                387  PAD2FCO     EQU     $003785D3               ;FILL COLOR MAROON
000011D6                           388                        ;F7B472
000011D6                           389  
000011D6  =003785D3                390  PAD3PCO     EQU     $003785D3               ;PEN COLOR MAROON
000011D6  =003888D7                391  PAD3FCO     EQU     $003888D7               ;FILL COLOR MAROON 
000011D6                           392                        ;D38537
000011D6                           393                        ;D78838
000011D6                           394  
000011D6  =003A8CDE                395  PAD4PCO     EQU     $003A8CDE               ;PEN COLOR MAROON
000011D6  =003C90E3                396  PAD4FCO     EQU     $003C90E3               ;FILL COLOR MAROON
000011D6                           397                        ;DE8C3A
000011D6                           398                        ;E3903C
000011D6                           399  
000011D6  =00000000                400  PAD5PCO     EQU     $00000000               ;PEN COLOR MAROON 3D93E7
000011D6  =00000000                401  PAD5FCO     EQU     $00000000              ;FILL COLOR MAROON 3F97ED
000011D6                           402                         ;E7933D 
000011D6                           403                         ;ED973F
000011D6                           404  
000011D6                           405  
000011D6                           406  
000011D6                           407                                               ;PADY        EQU     SCRHEIGH-PADHEIGH-PADHEIGH/2 ;PAD Y CORDINATE
000011D6                           408  
000011D6  =00000008                409  PADSPEED    EQU     8                       ;PAD SPEED MOVEMENT
000011D6                           410  
000011D6                           411  ; --- BALL RELATED CONSTANTS --------------------------------------------------
000011D6                           412  
000011D6  =00000001                413  BALID       EQU     1                       ; BALL IDENTIFIER
000011D6  =0000A5FF                414  BALPCOL     EQU     $0000A5FF               ; PEN COLOR
000011D6  =0000A5FF                415  BALFCOL     EQU     $0000A5FF               ; FILL COLOR
000011D6                           416  
000011D6                           417  
000011D6                           418  
000011D6                           419  
000011D6                           420  
000011D6                           421  
000011D6                           422  
000011D6                           423  
000011D6                           424  -------------------- end include --------------------
000011D6                           425              INCLUDE "PAD.X68"               ; PAD CODE
000011D6                           426   
000011D6                           427  ;-----------------------------------------------------------
000011D6                           428  PADINIT
000011D6                           429  ; INITIALIZE THE PAD. 
000011D6                           430  ; INPUT    - NONE
000011D6                           431  ; OUTPUT   - NONE
000011D6                           432  ; MODIFIES - NONE
000011D6                           433  ;-----------------------------------------------------------
000011D6  33FC 0140 00002580       434              MOVE.W #SCRWIDTH/2,(PADX)              ;CENTRE PANTALLA
000011DE  33FC 00F0 00002582       435              MOVE.W #SCRHEIGH/2,(PADY)
000011E6  4E75                     436              RTS
000011E8                           437  
000011E8                           438  
000011E8                           439  
000011E8                           440  ;-----------------------------------------------------------
000011E8                           441  PADUPD
000011E8                           442  ; INITIALIZE THE PAD.SI PITJEN DRETA, MOU DRETA, SI PITJEN
000011E8                           443  ; ESQUERRE ESQUERRA....
000011E8                           444  ; INPUT    - NONE
000011E8                           445  ; OUTPUT   - NONE
000011E8                           446  ; MODIFIES - NONE
000011E8                           447  ;-----------------------------------------------------------
000011E8  0839 0000 000018D8       448              BTST.B  #KBDBITLF,(KBDVAL)      ; LEFT KEY PRESSED?
000011F0  6600 0028                449              BNE     .MOVELEF                ; YES: MOVE LEFT
000011F4  0839 0002 000018D8       450              BTST.B  #KBDBITRT,(KBDVAL)      ; RIGHT KEY PRESSED?
000011FC  6600 0032                451              BNE     .MOVERIG                ; YES: MOVE LEFT
00001200  0839 0001 000018D8       452              BTST.B  #KBDBITUP,(KBDVAL)      ; UP KEY PRESSED?
00001208  6600 003C                453              BNE     .MOVEUP                 ; YES: MOVE UP
0000120C  0839 0003 000018D8       454              BTST.B  #KBDBITDN,(KBDVAL)      ; DOWN KEY PRESSED?
00001214  6600 0046                455              BNE     .MOVEDO
00001218  4E75                     456              RTS
0000121A                           457              
0000121A  0C79 0025 00002580       458  .MOVELEF    CMP.W   #PADWIDTH/2,(PADX)      ; BELOW LEFT BOUNDARY?
00001222  6E00 0004                459              BGT     .DOL                    ; NO: MOVE
00001226  4E75                     460              RTS                             ; YES: END
00001228  5179 00002580            461  .DOL        SUB.W   #PADSPEED,(PADX)        ; MOVE LEFT
0000122E  4E75                     462              RTS
00001230                           463              
00001230  0C79 025A 00002580       464  .MOVERIG    CMP.W   #SCRWIDTH-1-PADWIDTH/2,(PADX) ; HIGHER THAN RIGHT BOUNDARY?
00001238  6D00 0004                465              BLT     .DOR                    ; NO: MOVE
0000123C  4E75                     466              RTS                             ; YES: END
0000123E  5079 00002580            467  .DOR        ADD.W   #PADSPEED,(PADX)        ; MOVE RIGHT
00001244  4E75                     468              RTS
00001246                           469         
00001246  0C79 0005 00002582       470  .MOVEUP     CMP.W   #SCRHEIGH+5-SCRHEIGH,(PADY)   ; HIGHER THAN UP BOUNDARY?
0000124E  6E00 0004                471              BGT     .DOU
00001252  4E75                     472              RTS
00001254  5179 00002582            473  .DOU        SUB.W   #PADSPEED,(PADY)        ; MOVE UP
0000125A  4E75                     474              RTS
0000125C                           475              
0000125C  0C79 01E0 00002582       476  .MOVEDO     CMP.W   #SCRHEIGH,(PADY)
00001264  6D00 0004                477              BLT     .DDN
00001268  4E75                     478              RTS
0000126A  5079 00002582            479  .DDN        ADD.W   #PADSPEED,(PADY)        ;MOVE DOWN
00001270  4E75                     480              RTS
00001272                           481              
00001272                           482  ;-----------------------------------------------------------
00001272                           483  PADMOU
00001272                           484  ; PAD MOUSE. CONTROL PAD WITH THE MOUSE. TRAP #15, TASK 61
00001272                           485  ; INPUT    - NONE
00001272                           486  ; OUTPUT   - NONE
00001272                           487  ; MODIFIES - NONE
00001272                           488  ;-----------------------------------------------------------
00001272  48E7 E000                489             MOVEM.L D0-D2,-(A7)
00001276  4201                     490             CLR.B    D1
00001278  303C 003D                491             MOVE.W   #61,D0
0000127C  4E4F                     492             TRAP     #15
0000127E  33C1 00002580            493             MOVE.W   D1, (PADX)
00001284  E089                     494             LSR.L    #8,D1
00001286  E089                     495             LSR.L    #8,D1                   
00001288  33C1 00002582            496             MOVE.W   D1,(PADY)
0000128E  4CDF 0007                497             MOVEM.L (A7)+,D0-D2
00001292  4E75                     498             RTS
00001294                           499  
00001294                           500  
00001294                           501  ;-----------------------------------------------------------
00001294                           502  PADPLOT
00001294                           503  ; INITIALIZE THE PAD. DRAW PAD.
00001294                           504  ; INPUT    - NONE
00001294                           505  ; OUTPUT   - NONE
00001294                           506  ; MODIFIES - NONE
00001294                           507  ;-----------------------------------------------------------
00001294  48E7 F800                508              MOVEM.L D0-D4,-(A7)
00001298                           509              
00001298                           510              ;DRAW RECTANGLE 5 //ELIPSE
00001298  103C 0050                511              MOVE.B #80,D0                   ;SET COLOR TASK
0000129C  223C 003A8CDE            512              MOVE.L #PAD4PCO,D1              ;PEN COLOR
000012A2  4E4F                     513              TRAP #15                        ;SET PEN COLOR
000012A4  5200                     514              ADDQ.B #1,D0                    ;SET FILL COLOR TASK
000012A6  223C 003C90E3            515              MOVE.L #PAD4FCO,D1              ;FILL COLOR
000012AC  4E4F                     516              TRAP #15                        ;SET FILL COLOR
000012AE                           517              
000012AE  3239 00002580            518              MOVE.W (PADX),D1                ;D1:=XCENTER
000012B4  3439 00002582            519              MOVE.W (PADY),D2                ;D2:=YCENTER
000012BA  3601                     520              MOVE.W D1,D3                    ;D3:=XCENTER
000012BC  3802                     521              MOVE.W D2,D4                    ;D4:=YCENTER
000012BE  0441 000B                522              SUB.W  #PADWIDTH/2-28+5-3,D1      ;D1:=XLEFT
000012C2  0442 0023                523              SUB.W  #PADHEIGH/2-5,D2         ;D2:=YTOP
000012C6  5C43                     524              ADD.W  #PADWIDTH/2-28-3,D3        ;D3:=XRIGHT
000012C8  0644 0064                525              ADD.W  #PADHEIGH/2+50+10,D4     ;D4:=YBOTTOM
000012CC  103C 0058                526              MOVE.B #88,D0
000012D0  4E4F                     527              TRAP #15                        ;DRAW RECTANGLE
000012D2                           528              
000012D2                           529              ;DRAW RECTANGLE 5 //ELIPSE
000012D2  103C 0050                530              MOVE.B #80,D0                   ;SET COLOR TASK
000012D6  223C 003A8CDE            531              MOVE.L #PAD4PCO,D1              ;PEN COLOR
000012DC  4E4F                     532              TRAP #15                        ;SET PEN COLOR
000012DE  5200                     533              ADDQ.B #1,D0                    ;SET FILL COLOR TASK
000012E0  223C 003C90E3            534              MOVE.L #PAD4FCO,D1              ;FILL COLOR
000012E6  4E4F                     535              TRAP #15                        ;SET FILL COLOR
000012E8                           536              
000012E8  3239 00002580            537              MOVE.W (PADX),D1                ;D1:=XCENTER
000012EE  3439 00002582            538              MOVE.W (PADY),D2                ;D2:=YCENTER
000012F4  3601                     539              MOVE.W D1,D3                    ;D3:=XCENTER
000012F6  3802                     540              MOVE.W D2,D4                    ;D4:=YCENTER
000012F8  5D41                     541              SUB.W  #PADWIDTH/2-28-3,D1        ;D1:=XLEFT
000012FA  0442 0023                542              SUB.W  #PADHEIGH/2-5,D2         ;D2:=YTOP
000012FE  0643 000B                543              ADD.W  #PADWIDTH/2-28+5-3,D3      ;D3:=XRIGHT
00001302  0644 0064                544              ADD.W  #PADHEIGH/2+50+10,D4     ;D4:=YBOTTOM
00001306  103C 0058                545              MOVE.B #88,D0
0000130A  4E4F                     546              TRAP #15                        ;DRAW RECTANGLE
0000130C                           547                          
0000130C                           548              ;DRAW RECTANGLE 3
0000130C  103C 0050                549              MOVE.B #80,D0                   ;SET COLOR TASK
00001310  223C 003785D3            550              MOVE.L #PAD3PCO,D1              ;PEN COLOR
00001316  4E4F                     551              TRAP #15                        ;SET PEN COLOR
00001318  5200                     552              ADDQ.B #1,D0                    ;SET FILL COLOR TASK
0000131A  223C 003888D7            553              MOVE.L #PAD3FCO,D1              ;FILL COLOR
00001320  4E4F                     554              TRAP #15                        ;SET FILL COLOR
00001322                           555              
00001322  3239 00002580            556              MOVE.W (PADX),D1                ;D1:=XCENTER
00001328  3439 00002582            557              MOVE.W (PADY),D2                ;D2:=YCENTER
0000132E  3601                     558              MOVE.W D1,D3                    ;D3:=XCENTER
00001330  3802                     559              MOVE.W D2,D4                    ;D4:=YCENTER
00001332  5941                     560              SUB.W  #PADWIDTH/2-28-5,D1        ;D1:=XLEFT
00001334  0442 0023                561              SUB.W  #PADHEIGH/2-5,D2           ;D2:=YTOP
00001338  5843                     562              ADD.W  #PADWIDTH/2-28-5,D3        ;D3:=XRIGHT
0000133A  0644 0064                563              ADD.W  #PADHEIGH/2+50+10,D4        ;D4:=YBOTTOM
0000133E  103C 0057                564              MOVE.B #87,D0
00001342  4E4F                     565              TRAP #15                        ;DRAW RECTANGLE
00001344                           566              
00001344                           567              ;DRAW RECTANGLE 4 //ELIPSE
00001344  103C 0050                568              MOVE.B #80,D0                   ;SET COLOR TASK
00001348  223C 003A8CDE            569              MOVE.L #PAD4PCO,D1              ;PEN COLOR
0000134E  4E4F                     570              TRAP #15                        ;SET PEN COLOR
00001350  5200                     571              ADDQ.B #1,D0                    ;SET FILL COLOR TASK
00001352  223C 003C90E3            572              MOVE.L #PAD4FCO,D1              ;FILL COLOR
00001358  4E4F                     573              TRAP #15                        ;SET FILL COLOR
0000135A                           574              
0000135A  3239 00002580            575              MOVE.W (PADX),D1                ;D1:=XCENTER
00001360  3439 00002582            576              MOVE.W (PADY),D2                ;D2:=YCENTER
00001366  3601                     577              MOVE.W D1,D3                    ;D3:=XCENTER
00001368  3802                     578              MOVE.W D2,D4                    ;D4:=YCENTER
0000136A  5B41                     579              SUB.W  #PADWIDTH/2-28-4,D1        ;D1:=XLEFT
0000136C  0442 0023                580              SUB.W  #PADHEIGH/2-5,D2           ;D2:=YTOP
00001370  5A43                     581              ADD.W  #PADWIDTH/2-28-4,D3        ;D3:=XRIGHT
00001372  0644 0053                582              ADD.W  #PADHEIGH/2+50-7,D4        ;D4:=YBOTTOM
00001376  103C 0058                583              MOVE.B #88,D0
0000137A  4E4F                     584              TRAP #15                        ;DRAW RECTANGLE
0000137C                           585              
0000137C                           586              ;DRAW RECTANGLE 5 //ELIPSE
0000137C  103C 0050                587              MOVE.B #80,D0                   ;SET COLOR TASK
00001380  7200                     588              MOVE.L #PAD5PCO,D1              ;PEN COLOR
00001382  4E4F                     589              TRAP #15                        ;SET PEN COLOR
00001384  5200                     590              ADDQ.B #1,D0                    ;SET FILL COLOR TASK
00001386  7200                     591              MOVE.L #PAD5FCO,D1              ;FILL COLOR
00001388  4E4F                     592              TRAP #15                        ;SET FILL COLOR
0000138A                           593              
0000138A  3239 00002580            594              MOVE.W (PADX),D1                ;D1:=XCENTER
00001390  3439 00002582            595              MOVE.W (PADY),D2                ;D2:=YCENTER
00001396  3601                     596              MOVE.W D1,D3                    ;D3:=XCENTER
00001398  3802                     597              MOVE.W D2,D4                    ;D4:=YCENTER
0000139A  5741                     598              SUB.W  #PADWIDTH/2-28-6,D1        ;D1:=XLEFT
0000139C  0442 0023                599              SUB.W  #PADHEIGH/2-5,D2           ;D2:=YTOP
000013A0  5643                     600              ADD.W  #PADWIDTH/2-28-6,D3        ;D3:=XRIGHT
000013A2  0644 0050                601              ADD.W  #PADHEIGH/2+50-10,D4        ;D4:=YBOTTOM
000013A6  103C 0058                602              MOVE.B #88,D0
000013AA  4E4F                     603              TRAP #15                        ;DRAW RECTANGLE
000013AC                           604  
000013AC                           605              ;DRAW ELIPSE 2  
000013AC  103C 0050                606              MOVE.B #80,D0                   ;SET COLOR TASK
000013B0  7200                     607              MOVE.L #PAD2PCO,D1              ;PEN COLOR
000013B2  4E4F                     608              TRAP   #15                      ;SET PEN COLOR
000013B4                           609              
000013B4  5200                     610              ADDQ.B #1,D0                    ;SET FILL TASK
000013B6  223C 003785D3            611              MOVE.L #PAD2FCO,D1              ;FILL COLOR
000013BC  4E4F                     612              TRAP   #15                      ;SET FILL COLOR
000013BE                           613             
000013BE                           614              
000013BE  3239 00002580            615              MOVE.W (PADX),D1                ;D1:=XCENTER
000013C4  3439 00002582            616              MOVE.W (PADY),D2                ;D2:=YCENTER
000013CA  3601                     617              MOVE.W D1,D3                    ;D3:=XCENTER
000013CC  3802                     618              MOVE.W D2,D4                    ;D4:=YCENTER
000013CE  0441 0029                619              SUB.W  #PADWIDTH/2+4,D1          ;D1:=XLEFT
000013D2  0442 002D                620              SUB.W  #PADHEIGH/2+5,D2          ;D2:=YTOP
000013D6  0643 0025                621              ADD.W  #PADWIDTH/2,D3          ;D3:=XRIGHT
000013DA  0644 0028                622              ADD.W  #PADHEIGH/2,D4        ;D4:=YBOTTOM
000013DE  103C 0058                623              MOVE.B #88,D0
000013E2  4E4F                     624              TRAP #15
000013E4                           625  
000013E4                           626   
000013E4                           627              ;DRAW ELIPSE 1
000013E4  103C 0050                628              MOVE.B #80,D0                   ;SET COLOR TASK
000013E8  223C 000000FF            629              MOVE.L #PADPCOL,D1              ;PEN COLOR  
000013EE  4E4F                     630              TRAP   #15                      ;SET PEN COLOR
000013F0                           631              
000013F0  5200                     632              ADDQ.B #1,D0                    ;SET FILL TASK
000013F2  223C 000000FF            633              MOVE.L #PADFCOL,D1              ;FILL COLOR
000013F8  4E4F                     634              TRAP   #15                      ;SET FILL COLOR
000013FA                           635              
000013FA                           636       
000013FA  3239 00002580            637              MOVE.W (PADX),D1                ;D1:=XCENTER
00001400  3439 00002582            638              MOVE.W (PADY),D2                ;D2:=YCENTER
00001406                           639  
00001406  3601                     640              MOVE.W D1,D3                    ;D3:=XCENTER
00001408  3802                     641              MOVE.W D2,D4                    ;D4:=YCENTER
0000140A  0441 0025                642              SUB.W  #PADWIDTH/2,D1           ;D1:=XLEFT
0000140E  0442 002D                643              SUB.W  #PADHEIGH/2+5,D2           ;D2:=YTOP
00001412  0643 0025                644              ADD.W  #PADWIDTH/2,D3           ;D3:=XRIGHT
00001416  0644 0028                645              ADD.W  #PADHEIGH/2,D4           ;D4:=YBOTTOM
0000141A  103C 0058                646              MOVE.B #88,D0
0000141E  4E4F                     647              TRAP   #15
00001420                           648                
00001420  4CDF 001F                649              MOVEM.L (A7)+, D0-D4
00001424  4E75                     650              RTS
00001426                           651  
00001426                           652  
00001426                           653  
00001426                           654  
00001426                           655  
00001426                           656  
00001426                           657  
00001426                           658  
00001426                           659  
00001426                           660  
00001426                           661  -------------------- end include --------------------
00001426                           662              INCLUDE "AGENTLST.X68"          ; AGENT LIST MANAGEMENT
00001426                           663  ; =============================================================================
00001426                           664  ; TITLE    : AGENT LIST
00001426                           665  ; AUTHOR   : ANTONI BURGUERA
00001426                           666  ; COMMENTS : EACH AGENT HAS A DATA BLOCK FROM DMM AS FOLLOWS:
00001426                           667  ;              +0 - LONG : UPDATE SUBROUTINE POINTER
00001426                           668  ;              +4 - LONG : PLOT SUBROUTINE POINTER
00001426                           669  ;              +8:END    : DATA (AGENT SPECIFIC)
00001426                           670  ; HISTORY  : XX-XXX-201X - CREATION
00001426                           671  ;            11-OCT-2020 - MINOR CHANGES
00001426                           672  ; =============================================================================
00001426                           673  
00001426                           674  ; -----------------------------------------------------------------------------
00001426                           675  AGLADD
00001426                           676  ; CREATES A NEW AGENT
00001426                           677  ; INPUT    - A1 - POINTER TO AGENT INIT FUNCTION
00001426                           678  ;            A2 - POINTER TO AGENT UPDATE FUNCTION
00001426                           679  ;            A3 - POINTER TO AGENT PLOT FUNCTION
00001426                           680  ;            D0 - AGENT TYPE (USED AS OWNED BY DMM)
00001426                           681  ;            D1 - AGENT INITIALIZATION PARAMETER 1
00001426                           682  ;            D2 - AGENT INITIALIZATION PARAMETER 2
00001426                           683  ;            D3 - AGENT INITIALIZATION PARAMETER 3
00001426                           684  ; OUTPUT   - NONE
00001426                           685  ; MODIFIES - NONE
00001426                           686  ; -----------------------------------------------------------------------------
00001426  2F08                     687              MOVE.L  A0,-(A7)
00001428  4EB8 11A6                688              JSR     DMMALLOC
0000142C  B1FC 00000000            689              CMP.L   #0,A0
00001432  6700 0008                690              BEQ     .END
00001436  20CA                     691              MOVE.L  A2,(A0)+
00001438  20CB                     692              MOVE.L  A3,(A0)+
0000143A  4E91                     693              JSR     (A1)
0000143C  205F                     694  .END        MOVE.L  (A7)+,A0
0000143E  4E75                     695              RTS
00001440                           696  
00001440                           697  ; -----------------------------------------------------------------------------
00001440                           698  AGLUPD
00001440                           699  ; UPDATES THE AGENT LIST. PRIOR TO CALLING THE UPDATE FUNCTIONS, A0 IS SET
00001440                           700  ; TO THE DATA BLOCK OF THE CORRESPONDING SLOT.
00001440                           701  ; INPUT    - NONE
00001440                           702  ; OUTPUT   - NONE
00001440                           703  ; MODIFIES - NONE
00001440                           704  ; -----------------------------------------------------------------------------
00001440  48E7 00C0                705              MOVEM.L A0-A1,-(A7)
00001444  4EB8 1136                706              JSR     DMMFIRST
00001448  B1FC 00000000            707  .LOOP       CMP.L   #0,A0
0000144E  6700 000E                708              BEQ     .END
00001452  2250                     709              MOVE.L  (A0),A1
00001454  5088                     710              ADD.L   #8,A0
00001456  4E91                     711              JSR     (A1)
00001458  4EB8 1158                712              JSR     DMMNEXT
0000145C  60EA                     713              BRA     .LOOP
0000145E  4CDF 0300                714  .END        MOVEM.L (A7)+,A0-A1
00001462  4E75                     715              RTS
00001464                           716  
00001464                           717  ; -----------------------------------------------------------------------------
00001464                           718  AGLPLOT
00001464                           719  ; PLOTS THE AGENT LIST. PRIOR TO CALLING THE UPDATE FUNCTIONS, A0 IS SET
00001464                           720  ; TO THE DATA BLOCK OF THE CORRESPONDING SLOT.
00001464                           721  ; INPUT    - NONE
00001464                           722  ; OUTPUT   - NONE
00001464                           723  ; MODIFIES - NONE
00001464                           724  ; -----------------------------------------------------------------------------
00001464  48E7 00C0                725              MOVEM.L A0-A1,-(A7)
00001468  4EB8 1136                726              JSR     DMMFIRST
0000146C  B1FC 00000000            727  .LOOP       CMP.L   #0,A0
00001472  6700 0010                728              BEQ     .END
00001476  2268 0004                729              MOVE.L  4(A0),A1
0000147A  5088                     730              ADD.L   #8,A0
0000147C  4E91                     731              JSR     (A1)
0000147E  4EB8 1158                732              JSR     DMMNEXT
00001482  60E8                     733              BRA     .LOOP
00001484  4CDF 0300                734  .END        MOVEM.L (A7)+,A0-A1
00001488  4E75                     735              RTS
0000148A                           736  
0000148A                           737  ; -----------------------------------------------------------------------------
0000148A  =000011C0                738  AGLKILL     EQU     DMMFREE
0000148A                           739  ; KILLS THE AGENT BY RELEASING ITS MEMORY
0000148A                           740  ; INPUT    - A0 POINTER WITHIN THE AGENT MEMORY
0000148A                           741  ; OUTPUT   - NONE
0000148A                           742  ; MODIFIES - NONE
0000148A                           743  ; NOTE     - IT IS JUST A WRAPPER FOR DMMFREE
0000148A                           744  ; -----------------------------------------------------------------------------
0000148A                           745  -------------------- end include --------------------
0000148A                           746              INCLUDE "BALL.X68"              ; BALL MANAGEMENT
0000148A                           747  ; =============================================================================
0000148A                           748  ; TITLE    : BALL MANAGEMENT (AGENT)
0000148A                           749  ; AUTHOR   : ANTONI BURGUERA
0000148A                           750  ; COMMENTS : BALL AGENT LOCAL VARIABLES:
0000148A                           751  ;             (A0) : XCENTER - WORD
0000148A                           752  ;            2(A0) : YCENTER - WORD
0000148A                           753  ;            4(A0) : XSPEED  - WORD
0000148A                           754  ;            6(A0) : YSPEED  - WORD
0000148A                           755  ;            8(A0) : BALRAD  - WORD
0000148A                           756  ;            10(A0): ZSPEED  - WORD
0000148A                           757  ;            12(A0): DACCELZ - WORD
0000148A                           758  ;            14(A0): TIMER   - WORD
0000148A                           759  ; HISTORY  : 12-10-2020 - CREATION
0000148A                           760  ; =============================================================================
0000148A                           761  
0000148A                           762  ; -----------------------------------------------------------------------------
0000148A                           763  BALINIT
0000148A                           764  ; INITIALIZE A BALL
0000148A                           765  ; INPUT    - NONE
0000148A                           766  ; OUTPUT   - NONE 
0000148A                           767  ; MODIFIES - NONE
0000148A                           768  ; -----------------------------------------------------------------------------
0000148A  48E7 8040                769              MOVEM.L D0/A1,-(A7)             ; STACK REGISTERS
0000148E                           770              
0000148E  303C 0140                771              MOVE.W   #SCRWIDTH/2,D0      
00001492  3080                     772              MOVE.W  D0,(A0)                 ; XBALL=D0
00001494                           773  
00001494  303C 00F0                774              MOVE.W   #SCRHEIGH/2,D0      
00001498  3140 0002                775              MOVE.W  D0,2(A0)                ; YBALL=D0
0000149C                           776              
0000149C  303C 0000                777              MOVE.W   #0,D0      
000014A0  3140 0004                778              MOVE.W  D0,4(A0)                ; SPEEDX=D0
000014A4                           779                                
000014A4  303C 0000                780              MOVE.W   #0,D0     
000014A8  3140 0006                781              MOVE.W  D0,6(A0)                ; SPEEDY=D0
000014AC                           782              
000014AC  303C 0050                783              MOVE.W   #80,D0                 
000014B0  3140 0008                784              MOVE.W  D0,8(A0)                ; BALRAD=D0
000014B4                           785              
000014B4  303C 0000                786              MOVE.W   #0,D0                  
000014B8  3140 000A                787              MOVE.W  D0,10(A0)               ; SPEEDZ=D0  
000014BC                           788  
000014BC  303C FFFF                789              MOVE.W  #-1,D0
000014C0  3140 000C                790              MOVE.W  D0,12(A0)               ; DACCELERATEZ=D0
000014C4                           791              
000014C4  303C 0000                792              MOVE.W #0,D0
000014C8  3140 000E                793              MOVE.W D0,14(A0)                ; Timer
000014CC                           794              
000014CC  4CDF 0201                795              MOVEM.L (A7)+,D0/A1
000014D0  4E75                     796              RTS
000014D2                           797  ; -----------------------------------------------------------------------------
000014D2                           798  BALUPD
000014D2                           799  ; UPDATE A BALL
000014D2                           800  ; INPUT    - NONE
000014D2                           801  ; OUTPUT   - NONE 
000014D2                           802  ; MODIFIES - NONE
000014D2                           803  ; -----------------------------------------------------------------------------
000014D2  48A7 FE60                804              MOVEM.W  D0/D1/D2/D3/D4/D5/D6/A1/A2 ,-(A7)                ; STACK REGISTERS
000014D6                           805              
000014D6  3028 000E                806              MOVE.W 14(A0),D0
000014DA  B07C 0001                807              CMP #1,D0
000014DE  6600 000E                808              BNE .NOTIME                     ; DONT UPDATE?CONSTANTLT ALTERNATE YES/NO
000014E2                           809              
000014E2  303C 0000                810              MOVE.W #0,D0
000014E6  3140 000E                811              MOVE.W D0,14(A0) 
000014EA  6000 000C                812              BRA .TIME
000014EE                           813  .NOTIME     
000014EE  5240                     814              ADDQ.W #1,D0
000014F0  3140 000E                815              MOVE.W D0,14(A0)
000014F4  6000 003E                816              BRA .ENDU   
000014F8                           817  .TIME         
000014F8                           818              
000014F8  0C68 0014 0008           819              CMP #20,8(A0)                   ; Crear constante de minima dimension de la bola
000014FE  6C00 0008                820              BGE .NREBOUND                   ; YES? REBOUND IF:
00001502  4EB9 0000153A            821              JSR BALRBND                     ; REBOUND 
00001508                           822  .NREBOUND   
00001508  3010                     823              MOVE.W (A0),D0
0000150A  D068 0004                824              ADD.W 4(A0),D0
0000150E  3080                     825              MOVE.W D0,(A0)
00001510                           826              
00001510  3028 0002                827              MOVE.W 2(A0),D0
00001514  D068 0006                828              ADD.W 6(A0),D0
00001518  3140 0002                829              MOVE.W D0,2(A0)
0000151C                           830              
0000151C  3028 000A                831              MOVE.W  10(A0),D0
00001520  D068 000C                832              ADD.W   12(A0),D0
00001524  3140 000A                833              MOVE.W  D0,10(A0)
00001528                           834              
00001528  3028 0008                835              MOVE.W 8(A0),D0
0000152C  D068 000A                836              ADD.W 10(A0),D0
00001530  3140 0008                837              MOVE.W D0,8(A0)
00001534                           838  .ENDU       
00001534  4C9F 067F                839              MOVEM.W  (A7)+,D0/D1/D2/D3/D4/D5/D6/A1/A2
00001538                           840              
00001538  4E75                     841              RTS
0000153A                           842  
0000153A                           843  ; -----------------------------------------------------------------------------
0000153A                           844  BALRBND     
0000153A                           845  ; REBOUND A BALL
0000153A                           846  ; INPUT    - NONE
0000153A                           847  ; OUTPUT   - NONE 
0000153A                           848  ; MODIFIES - NONE
0000153A                           849  ; -----------------------------------------------------------------------------
0000153A  43F9 0000168A            850              LEA .WIDV,A1                    ; V_WIDTH
00001540  45F9 00001682            851              LEA .HEIV,A2                    ; V_HEIGHT
00001546  3A3C 0006                852              MOVE.W #6,D5                    ; HEIGHT
0000154A  363C 0002                853              MOVE.W #2,D3                    ; VARIABLE BUCLE LOOP1
0000154E                           854  .LOOPRBN1           
0000154E  343C 0002                855              MOVE.W #2,D2                    ; VARIABLE BUCLE LOOP2
00001552  5545                     856              SUBQ.W #2,D5                    
00001554  383C 0006                857              MOVE.W #6,D4                    ; WIDTH 
00001558                           858  .LOOPRBN2            
00001558  5445                     859              ADDQ.W #2,D5
0000155A                           860              
0000155A  3010                     861              MOVE.W (A0),D0                  
0000155C  3239 00002580            862              MOVE.W (PADX),D1
00001562  D272 4000                863              ADD.W (A2,D4),D1
00001566  B240                     864              CMP D0,D1                       ;INTRO X LEFT?
00001568                           865              ;BGT .NEXT4
00001568  6D00 0044                866              BLT .NEXT4
0000156C                           867              
0000156C  5544                     868              SUBQ.W #2,D4                    ;OPOS. SITE WIDTH
0000156E                           869              
0000156E  3010                     870              MOVE.W (A0),D0                  
00001570  3239 00002580            871              MOVE.W (PADX),D1
00001576  D272 4000                872              ADD.W (A2,D4),D1
0000157A  B240                     873              CMP D0,D1                       ;INTRO X RIGTH?
0000157C                           874              ;BLT .NEXT32
0000157C  6E00 0032                875              BGT .NEXT32
00001580                           876              
00001580  3028 0002                877              MOVE.W 2(A0),D0                 
00001584  3239 00002582            878              MOVE.W (PADY),D1
0000158A  D271 5000                879              ADD.W (A1,D5),D1
0000158E  B240                     880              CMP D0,D1                       ;INTRO Y UP?
00001590                           881              ;BGT .NEXT32
00001590  6D00 001E                882              BLT .NEXT32
00001594                           883              
00001594  5545                     884              SUBQ.W #2,D5                    ;OPOS. SITE HEIGTH
00001596                           885              
00001596  3028 0002                886              MOVE.W 2(A0),D0                 
0000159A  3239 00002582            887              MOVE.W (PADY),D1
000015A0  D271 5000                888              ADD.W (A1,D5),D1
000015A4  B240                     889              CMP D0,D1                       ;INTRO X DOWN?
000015A6                           890              ;BLT .NEXT1
000015A6  6E00 000A                891              BGT .NEXT1
000015AA                           892              
000015AA  6000 0012                893              BRA .NNEXT
000015AE                           894  .NEXT4  
000015AE  5544                     895              SUBQ.W #2,D4          
000015B0                           896  .NEXT32       
000015B0  5545                     897              SUBQ.W #2,D5                                
000015B2                           898  .NEXT1            
000015B2  51CA FFA4                899              DBRA D2,.LOOPRBN2
000015B6  51CB FF96                900              DBRA D3,.LOOPRBN1
000015BA  6000 007E                901              BRA .ILEGAL      
000015BE                           902              ;--------------------
000015BE                           903  .NNEXT        
000015BE  3C3C 0001                904              MOVE.W #1,D6
000015C2  BC43                     905              CMP D3,D6
000015C4  6600 0040                906              BNE .NOTMID                     
000015C8  BC42                     907              CMP D2,D6
000015CA  6600 003A                908              BNE .NOTMID
000015CE                           909              
000015CE                           910              ;OTRO METODO SACA A1 Y A2 Y D3
000015CE  48A7 C000                911              MOVEM.W D0/D1,-(A7)
000015D2  4EB9 00001752            912              JSR RNDGET                      ;D0.L =RND(0,255) TO GET RANDOM Y & X
000015D8  43F9 00001662            913              LEA .VELMXR,A1
000015DE  45F9 00001672            914              LEA .VELMYR,A2
000015E4  323C FFFF                915              MOVE.W #-1,D1
000015E8  363C 0007                916              MOVE.W #7,D3
000015EC                           917  .LOOPRNXY   
000015EC  0641 0020                918              ADD.W #32,D1
000015F0  B041                     919              CMP D1,D0
000015F2  6300 0006                920              BLS .FINALRXY
000015F6  51CB FFF4                921              DBRA D3,.LOOPRNXY
000015FA                           922  .FINALRXY   
000015FA  C6FC 0002                923              MULU.W #2,D3
000015FE  4C9F 0003                924              MOVEM.W (A7)+,D0/D1
00001602                           925              ;FIN DEL NUEVO METODO SACA A1 Y A2 Y D3
00001602  6000 0018                926              BRA .YESMID
00001606                           927  .NOTMID      
00001606  43F9 0000163E            928              LEA .VELX,A1
0000160C  45F9 00001650            929              LEA .VELY,A2                    
00001612  C6FC 0003                930              MULU.W #3,D3
00001616  D642                     931              ADD.W D2,D3
00001618  C6FC 0002                932              MULU.W #2,D3                      
0000161C                           933              ;MOVE.W (A1,D3),4(A0)
0000161C                           934              ;MOVE.W (A2,D3),6(A0)
0000161C                           935  .YESMID 
0000161C  3031 3000                936              MOVE.W (A1,D3),D0
00001620  D168 0004                937              ADD.W D0,4(A0)
00001624                           938              
00001624  3032 3000                939              MOVE.W (A2,D3),D0
00001628  D168 0006                940              ADD.W D0,6(A0)
0000162C                           941              
0000162C  3028 000A                942              MOVE.W 10(A0),D0                
00001630  4640                     943              NOT D0
00001632  5440                     944              ADDQ.W #2,D0
00001634  3140 000A                945              MOVE.W D0,10(A0) 
00001638                           946              
00001638  4E75                     947              RTS
0000163A                           948  .ILEGAL
0000163A  FFFF FFFF                949              SIMHALT 
0000163E= FFFE 0000 0002           950  .VELX       DC.W    -2,0,2                  ;VELOCITAT X
00001644= FFFD 0000 0003           951              DC.W    -3,0,3
0000164A= FFFE 0000 0002           952              DC.W    -2,0,2
00001650= FFFE FFFD FFFE           953  .VELY       DC.W    -2,-3,-2                ;VELOCITAT Y
00001656= 0000 0000 0000           954              DC.W    0,0,0
0000165C= 0002 0003 0002           955              DC.W    2,3,2
00001662= FFFF 0000 0001           956  .VELMXR     DC.W    -1,0,1                  ;VELOCITAT X MIDDLE RANDOM
00001668= FFFE 0002                957              DC.W    -2,2
0000166C= FFFF 0000 0001           958              DC.W    -1,0,1
00001672= FFFF FFFE FFFF           959  .VELMYR     DC.W    -1,-2,-1                ;VELOCITAT Y MIDDLE RANDOM
00001678= 0000 0000                960              DC.W    0,0
0000167C= 0001 0002 0001           961              DC.W    1,2,1                   
00001682= FFD8 FFF3                962  .HEIV:      DC.W    -PADHEIGH/2,-PADHEIGH/6
00001686= 000D 0028                963              DC.W    PADHEIGH/6,PADHEIGH/2
0000168A= FFDB FFF4                964  .WIDV:      DC.W    -PADWIDTH/2,-PADWIDTH/6
0000168E= 000C 0025                965              DC.W    PADWIDTH/6,PADWIDTH/2   
00001692                           966  ; -----------------------------------------------------------------------------
00001692                           967  BALPLOT
00001692                           968  ; PLOT A BALL
00001692                           969  ; INPUT    - NONE
00001692                           970  ; OUTPUT   - NONE 
00001692                           971  ; MODIFIES - NONE
00001692                           972  ; -----------------------------------------------------------------------------
00001692  48E7 F800                973              MOVEM.L D0-D4,-(A7)             ; STACK REGISTERS
00001696  103C 0050                974              MOVE.B  #80,D0                  ; SET PEN COLOR TASK
0000169A  223C 0000A5FF            975              MOVE.L  #BALPCOL,D1             ; PEN COLOR
000016A0  4E4F                     976              TRAP    #15                     ; SET PEN COLOR
000016A2  5200                     977              ADDQ.B  #1,D0                   ; SET FILL COLOR TASK
000016A4  223C 0000A5FF            978              MOVE.L  #BALFCOL,D1             ; FILL COLOR
000016AA  4E4F                     979              TRAP    #15                     ; SET FILL COLOR
000016AC                           980              
000016AC  3210                     981              MOVE.W  (A0),D1                 ; D1:=XCENTER
000016AE  3428 0002                982              MOVE.W  2(A0),D2                ; D2:=YCENTER
000016B2  3601                     983              MOVE.W  D1,D3                   ; D3:=XCENTER
000016B4  3802                     984              MOVE.W  D2,D4                   ; D4:=YCENTER
000016B6                           985              
000016B6  9268 0008                986              SUB.W   8(A0),D1              ; D1:=XLEFT
000016BA  9468 0008                987              SUB.W   8(A0),D2              ; D2:=YTOP
000016BE  D668 0008                988              ADD.W   8(A0),D3              ; D3:=XRIGTH
000016C2  D868 0008                989              ADD.W   8(A0),D4              ; D4:=YBOTTOM
000016C6  103C 0058                990              MOVE.B  #88,D0                  ; DRAW ELLIPSE/CIRCLE TASK
000016CA  4E4F                     991              TRAP    #15                     ; DO IT
000016CC  4CDF 001F                992              MOVEM.L (A7)+,D0-D4
000016D0  4E75                     993              RTS
000016D2                           994              
000016D2                           995  
000016D2                           996  
000016D2                           997            
000016D2                           998              
000016D2                           999  
000016D2                          1000  
000016D2                          1001  
000016D2                          1002  
000016D2                          1003  
000016D2                          1004  
000016D2                          1005  
000016D2                          1006  
000016D2                          1007  
000016D2                          1008  
000016D2                          1009  
000016D2                          1010  
000016D2                          1011  
000016D2                          1012  
000016D2                          1013  -------------------- end include --------------------
000016D2                          1014              INCLUDE "FONS.X68"              ; BACKGROUND 
000016D2  =00000006               1015  SQUARESH    EQU     6                       ; NUMBER OF BITS TO SHIFT
000016D2  =00000040               1016  SQUARESZ    EQU     1<<SQUARESH             ; SQUARE SIZE
000016D2                          1017  
000016D2                          1018  ; -----------------------------------------------------------------------------
000016D2                          1019  FONSPLOT
000016D2                          1020  ; Initializes the graphic output to windowed and SCRWIDTHxSCRHEIGH and installs
000016D2                          1021  ; TRAP #0. Then, it draws a grid, each square being SQUARESZxSQUARESZ pixels
000016D2                          1022  ; by drawing squares using DRSQUARE.
000016D2                          1023  ; -----------------------------------------------------------------------------
000016D2  48E7 E0E0               1024              MOVEM.L D0-D2/A0/A1/A2,-(A7)
000016D6  7201                    1025              MOVE.L  #1,D1
000016D8  103C 0021               1026              MOVE.B  #33,D0
000016DC  4E4F                    1027              TRAP    #15                     ; ENSURE WINDOWED MODE
000016DE  223C 028001E0           1028              MOVE.L  #SCRWIDTH<<16|SCRHEIGH,D1
000016E4  4E4F                    1029              TRAP    #15                     ; SET RESOLUTION TO 640X480
000016E6  21FC 00001712 0080      1030              MOVE.L  #DRSQUARE,($80)         ; INSTALL TRAP #0
000016EE                          1031  
000016EE  4240                    1032              CLR.W   D0                      ; INITIAL COORDINATES
000016F0  343C 0006               1033              MOVE.W  #SCRHEIGH/SQUARESZ-1,D2 ; ROW COUNTER
000016F4  323C 0009               1034  .LOOP       MOVE.W  #SCRWIDTH/SQUARESZ-1,D1 ; COLUMN COUNTER
000016F8  4E40                    1035              TRAP    #0
000016FA  5240                    1036              ADDQ.W  #1,D0                   ; NEXT X
000016FC  51C9 FFF6               1037              DBRA.W  D1,.LOOP
00001700  C07C FF00               1038              AND.W   #$FF00,D0               ; RESET X
00001704  0640 0100               1039              ADD.W   #$0100,D0               ; NEXT Y
00001708  51CA FFEA               1040              DBRA.W  D2,.LOOP
0000170C  4CDF 0707               1041              MOVEM.L (A7)+,A2/A1/A0/D0-D2
00001710  4E75                    1042              RTS
00001712                          1043  
00001712                          1044  ; -----------------------------------------------------------------------------
00001712                          1045  DRSQUARE
00001712                          1046  ; Draws a square of SQUARESZxSQUARESZ pixels, top-left coordinates being
00001712                          1047  ; X*SQUARESZ,Y*SQUARESZ
00001712                          1048  ; Input    - D0.W: 8-MSB X, 8-LSB Y (top-left coordinate is X*SQUARESZ,
00001712                          1049  ;            Y*SQUARESZ)
00001712                          1050  ; Output   - None
00001712                          1051  ; Modifies - Nothing
00001712                          1052  ; -----------------------------------------------------------------------------
00001712  48E7 FC00               1053              MOVEM.L D0-D5,-(A7)             ; STORE REGISTERS
00001716  3A00                    1054              MOVE.W  D0,D5                   ; COPY D0
00001718  103C 0050               1055              MOVE.B  #80,D0                  ; TRAP CODE TO DEFINE PEN COLOR
0000171C  223C 00FFFFFF           1056              MOVE.L  #$00FFFFFF,D1           ; COLOR=WHITE
00001722  4E4F                    1057              TRAP    #15                     ; SET PEN COLOR
00001724  3205                    1058              MOVE.W  D5,D1
00001726  C27C 00FF               1059              AND.W   #$00FF,D1               ; ISOLATE XINI (JUST MASK IT)
0000172A  ED49                    1060              LSL.W   #SQUARESH,D1            ; TIMES 32
0000172C  3405                    1061              MOVE.W  D5,D2
0000172E  E04A                    1062              LSR.W   #8,D2                   ; PREPARA YINI (SHIFT RIGHT)
00001730  ED4A                    1063              LSL.W   #SQUARESH,D2            ; TIMES 32
00001732  3601                    1064              MOVE.W  D1,D3                   ; COPY XINI TO XEND
00001734  3802                    1065              MOVE.W  D2,D4                   ; COPY YINI TO YEND
00001736  0643 0040               1066              ADD.W   #SQUARESZ,D3            ; ADD SQUARESZ TO BUILD XEND
0000173A  0644 0040               1067              ADD.W   #SQUARESZ,D4            ; ADD SQUARESZ TO BUILD YEND
0000173E  103C 0057               1068              MOVE.B  #87,D0                  ; TRAP CODE TO DRAW RECTANGLE
00001742  4E4F                    1069              TRAP    #15                     ; DRAW IT
00001744  4CDF 003F               1070              MOVEM.L (A7)+,D0-D5             ; RESTORE REGISTERS
00001748  4E73                    1071              RTE
0000174A                          1072  
0000174A                          1073  -------------------- end include --------------------
0000174A                          1074              INCLUDE "RANDOM.X68"            ; RANDOM NUMBER GENERATOR
0000174A                          1075  ; =============================================================================
0000174A                          1076  ; TITLE    : PSEUDO-RANDOM NUMBER GENERATOR
0000174A                          1077  ; AUTHOR   : ANTONI BURGUERA
0000174A                          1078  ; COMMENTS : VERY LAZY AND STUPID "ALGORITHM" IMPLEMENTED.
0000174A                          1079  ; HISTORY  : XX-XXX-201X - CREATION
0000174A                          1080  ;            11-OCT-2020 - MINOR CHANGES
0000174A                          1081  ; =============================================================================
0000174A                          1082  
0000174A                          1083  ; -----------------------------------------------------------------------------
0000174A                          1084  RNDINIT
0000174A                          1085  ; INITIALIZES RANDOM NUMBER GENERATOR
0000174A                          1086  ; INPUT    - NONE
0000174A                          1087  ; OUTPUT   - NONE
0000174A                          1088  ; MODIFIES - NONE
0000174A                          1089  ; -----------------------------------------------------------------------------
0000174A  4239 00002586           1090              CLR.B   (RNDINDEX)
00001750  4E75                    1091              RTS
00001752                          1092  ; -----------------------------------------------------------------------------
00001752                          1093  RNDGET
00001752                          1094  ; PROVIDES A PSEUDO-RANDOM BYTE
00001752                          1095  ; INPUT    - NONE
00001752                          1096  ; OUTPUT   - D0.L RANDOM VALUE (ONLY BYTE)
00001752                          1097  ; MODIFIES - NONE (ASIDE OF OUTPUT)
00001752                          1098  ; -----------------------------------------------------------------------------
00001752  2F08                    1099              MOVE.L  A0,-(A7)
00001754  41F9 00001770           1100              LEA     .RANDVEC,A0
0000175A  4280                    1101              CLR.L   D0
0000175C  1039 00002586           1102              MOVE.B  (RNDINDEX),D0
00001762  1030 0800               1103              MOVE.B  (A0,D0.L),D0
00001766  5239 00002586           1104              ADDQ.B  #1,(RNDINDEX)
0000176C  205F                    1105              MOVE.L  (A7)+,A0
0000176E  4E75                    1106              RTS
00001770                          1107  
00001770= A2 EE 9A 0C F5 24 ...   1108  .RANDVEC    DC.B    162, 238, 154, 12 , 245, 36 , 32 , 103
00001778= 2A A3 51 26 E0 AC ...   1109              DC.B    42 , 163, 81 , 38 , 224, 172, 19 , 69
00001780= 75 51 CA FD 33 EB ...   1110              DC.B    117, 81 , 202, 253, 51 , 235, 108, 154
00001788= 60 CC E7 B8 9A EB ...   1111              DC.B    96 , 204, 231, 184, 154, 235, 34 , 203
00001790= 1D 76 B5 95 B0 89 ...   1112              DC.B    29 , 118, 181, 149, 176, 137, 62 , 108
00001798= 39 15 48 C9 6E CA ...   1113              DC.B    57 , 21 , 72 , 201, 110, 202, 159, 41
000017A0= 43 E7 E2 7C 37 25 ...   1114              DC.B    67 , 231, 226, 124, 55 , 37 , 84 , 62
000017A8= E9 94 CE E9 E4 52 ...   1115              DC.B    233, 148, 206, 233, 228, 82 , 243, 78
000017B0= 37 6D 9A 84 A2 28 ...   1116              DC.B    55 , 109, 154, 132, 162, 40 , 30 , 39
000017B8= 19 E2 C6 77 80 D4 ...   1117              DC.B    25 , 226, 198, 119, 128, 212, 232, 225
000017C0= 0A 5A 32 67 33 C2 ...   1118              DC.B    10 , 90 , 50 , 103, 51 , 194, 222, 40
000017C8= 59 80 DC 0E 57 FC ...   1119              DC.B    89 , 128, 220, 14 , 87 , 252, 243, 252
000017D0= 8A AB BC F7 07 4D ...   1120              DC.B    138, 171, 188, 247, 7  , 77 , 29 , 234
000017D8= EF D5 77 6E 1E BB ...   1121              DC.B    239, 213, 119, 110, 30 , 187, 131, 23
000017E0= D6 E0 2A 8F BD 28 ...   1122              DC.B    214, 224, 42 , 143, 189, 40 , 212, 130
000017E8= 13 4F 66 EC 0A 64 ...   1123              DC.B    19 , 79 , 102, 236, 10 , 100, 122, 188
000017F0= 56 52 9A 16 9B 90 ...   1124              DC.B    86 , 82 , 154, 22 , 155, 144, 7  , 199
000017F8= 06 8A A4 F7 01 DA ...   1125              DC.B    6  , 138, 164, 247, 1  , 218, 166, 82
00001800= F2 E7 77 28 B1 76 ...   1126              DC.B    242, 231, 119, 40 , 177, 118, 220, 102
00001808= A4 42 E3 81 B1 67 ...   1127              DC.B    164, 66 , 227, 129, 177, 103, 165, 108
00001810= BF CE FA 16 BF 38 ...   1128              DC.B    191, 206, 250, 22 , 191, 56 , 30 , 161
00001818= D1 8B 50 0C 5F 49 ...   1129              DC.B    209, 139, 80 , 12 , 95 , 73 , 168, 56
00001820= DE 4C 14 A2 40 DC ...   1130              DC.B    222, 76 , 20 , 162, 64 , 220, 93 , 12
00001828= B6 9B 0A 38 5D AB ...   1131              DC.B    182, 155, 10 , 56 , 93 , 171, 89 , 6
00001830= E2 1B DD 75 15 82 ...   1132              DC.B    226, 27 , 221, 117, 21 , 130, 101, 18
00001838= 8A 26 51 30 9F 47 ...   1133              DC.B    138, 38 , 81 , 48 , 159, 71 , 57 , 21
00001840= 1E 8A BB 71 C6 6E ...   1134              DC.B    30 , 138, 187, 113, 198, 110, 185, 152
00001848= 9F 47 E5 34 94 27 ...   1135              DC.B    159, 71 , 229, 52 , 148, 39 , 77 , 6
00001850= 7D 06 D6 BA 30 0F ...   1136              DC.B    125, 6  , 214, 186, 48 , 15 , 212, 22
00001858= EC 7F 7E 03 CF 2D ...   1137              DC.B    236, 127, 126, 3  , 207, 45 , 193, 2
00001860= 94 5B 23 F2 8B CD ...   1138              DC.B    148, 91 , 35 , 242, 139, 205, 248, 237
00001868= 74 33 EC B9 0F D5 ...   1139              DC.B    116, 51 , 236, 185, 15 , 213, 221, 6
00001868= 74 33 EC B9 0F D5 ...   1140  -------------------- end include --------------------
00001870                          1141              
00001870                          1142  ; --- INITIALIZE --------------------------------------------------------------
00001870                          1143  
00001870  4EB8 1000               1144  START       JSR     SYSINIT                 ; INITIALIZE SYSTEM-RELATED STUFF
00001874                          1145  
00001874                          1146              ; TO DO : ADD YOUR GAME INITIALIZATION HERE
00001874                          1147              
00001874                          1148              ;JSR    FONSPLOT
00001874                          1149              
00001874  4EB8 11D6               1150              JSR     PADINIT
00001878                          1151              
00001878  303C 0001               1152              MOVE.W  #BALID,D0
0000187C  43F8 148A               1153              LEA     BALINIT,A1
00001880  45F8 14D2               1154              LEA     BALUPD,A2
00001884  47F8 1692               1155              LEA     BALPLOT,A3
00001888  4EB8 1426               1156              JSR     AGLADD
0000188C                          1157  
0000188C                          1158  ; --- UPDATE ------------------------------------------------------------------
0000188C                          1159  
0000188C  4E40                    1160  .LOOP       TRAP    #KBDTRAP                ; READ KEYBOARD
0000188E                          1161  
0000188E                          1162              ; TO DO : ADD YOUR GAME UPDATE HERE
0000188E                          1163              
0000188E                          1164              ;JSR     PADUPDKB
0000188E  4EB8 1272               1165              JSR     PADMOU
00001892                          1166              
00001892                          1167              ; ___Update_Ball___ 
00001892  0839 0007 000018D8      1168              BTST.B  #KBDBITPS,(KBDVAL)      ; "P" PAUSE KEY PRESSED?    
0000189A  6600 0012               1169              BNE     .ANOTHER                           ; 1=PAUSE, 0=NOPAUSE   
0000189E  0839 0000 00002584      1170              BTST.B  #0,(PAUSE)
000018A6  6700 000E               1171              BEQ     .YESUPD
000018AA  6000 000E               1172              BRA     .WINT                   
000018AE                          1173  .ANOTHER    
000018AE  13FC 0000 00002584      1174              MOVE.B #0,(PAUSE)                  
000018B6                          1175  .YESUPD      
000018B6  4EB8 1440               1176              JSR     AGLUPD      
000018BA                          1177              ; ___Finish_Update_Ball___
000018BA                          1178              
000018BA                          1179              ; --- WAIT SYNCH --------------------------------------------------------------
000018BA                          1180  
000018BA  4A39 000018DA           1181  .WINT       TST.B   (SCRINTCT)              ; WAIT FOR INTERRUPT
000018C0  67F8                    1182              BEQ     .WINT
000018C2  4239 000018DA           1183              CLR.B   (SCRINTCT)
000018C8                          1184  
000018C8                          1185  ; --- PLOT --------------------------------------------------------------------
000018C8                          1186  
000018C8                          1187              ; TO DO : ADD YOUR GAME PLOT HERE
000018C8                          1188              ;JSR    FONSPLOT
000018C8  4EB8 1294               1189              JSR     PADPLOT
000018CC  4EB8 1464               1190              JSR     AGLPLOT
000018D0                          1191              
000018D0  4E41                    1192              TRAP    #SCRTRAP                ; SHOW GRAPHICS
000018D2  60B8                    1193              BRA     .LOOP                   ; MAIN LOOP
000018D4  FFFF FFFF               1194              SIMHALT
000018D8                          1195  
000018D8                          1196  ; --- VARIABLES ---------------------------------------------------------------
000018D8                          1197  
000018D8                          1198              INCLUDE "SYSVAR.X68"
000018D8                          1199  ; =============================================================================
000018D8                          1200  ; TITLE    : SYSTEM VARIABLES
000018D8                          1201  ; AUTHOR   : ANTONI BURGUERA
000018D8                          1202  ; COMMENTS : NOTE THAT ALL THESE VARS ARE USED TO SHARE DATA FROM SYSTEM TO
000018D8                          1203  ;            USER. THUS THEY MUST NOT BE IN PROTECTED MEMORY.
000018D8                          1204  ;            NOTE THAT USING DMMDATA IN SUCH WAY IS A BAD IDEA, AS USER
000018D8                          1205  ;            APPLICATIONS CAN ALSO FREE OR CHANGE OWNERSHIP. NONETHELESS, FOR
000018D8                          1206  ;            THE SAKE OF THIS EXAMPLE THIS IS GOOD ENOUGH.
000018D8                          1207  ; HISTORY  : XX-XXX-201X - CREATION
000018D8                          1208  ;            11-OCT-2020 - MINOR CHANGES
000018D8                          1209  ; =============================================================================
000018D8                          1210  
000018D8                          1211  ; --- KEYBOARD RELATED VARIABLES ----------------------------------------------
000018D8                          1212  
000018D8                          1213  KBDVAL      DS.B    1                       ; KEY PRESSED=1
000018D9                          1214  KBDEDGE     DS.B    1                       ; KEY CHANGED=1
000018DA                          1215  
000018DA                          1216              DS.W    0
000018DA                          1217  
000018DA                          1218  ; --- SCREEN RELATED VARIABLES ------------------------------------------------
000018DA                          1219  
000018DA                          1220  SCRINTCT    DS.B    1                       ; INTERRUPT COUNTER/FLAG
000018DB                          1221  SCRCYCCT    DS.B    1                       ; CYCLE COUNTER
000018DC                          1222              DS.W    0
000018DC                          1223  
000018DC                          1224  ; --- DYNAMIC MEMORY VARIABLES ------------------------------------------------
000018DC                          1225  
00001900                          1226              ORG     (*+DMMBSIZE-1)&-DMMBSIZE ; ALIGN TO DMMBSIZE
00001900                          1227  DMMDATA     DS.B    DMMBSIZE*DMMBNUM        ; DYNAMIC MEMORY ALLOCATION SPACE
00002580                          1228              DS.W    0                       ; JUST IN CASE (SIZE IS POW OF TWO)
00002580                          1229  -------------------- end include --------------------
00002580                          1230              INCLUDE "VAR.X68"
00002580                          1231  ; =============================================================================
00002580                          1232  ; TITLE    : GAME VARIABLES
00002580                          1233  ; AUTHOR   : ANTONI BURGUERA
00002580                          1234  ; HISTORY  : 12-OCTOBER-2020 - CREATION
00002580                          1235  ; =============================================================================
00002580                          1236  
00002580                          1237  ; --- PAD RELATED VARIABLES ---------------------------------------------------
00002580                          1238  
00002580                          1239  PADX        DS.W    1                       ; PAD X COORDINATE (XCENTER)
00002582                          1240  PADY        DS.W    1                       ; PAD Y COORDINATE (YCENTER)
00002584                          1241  
00002584                          1242  ; --- GAME RELATED VARIABLES --------------------------------------------------
00002584                          1243  
00002584                          1244  PAUSE       DS.B    1                       ; X0/X1 PAUSE GAME
00002586                          1245              DS.W    0
00002586                          1246  ; --- RANDOM NUMBER GENERATOR VARIABLES ---------------------------------------
00002586                          1247  
00002586                          1248  RNDINDEX    DS.B    1                       ; RANDOM INDEX
00002588                          1249              DS.W    0
00002588                          1250  
00002588                          1251  
00002588                          1252  -------------------- end include --------------------
00002588                          1253              END    START

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
AGLADD              1426
AGLADD:END          143C
AGLKILL             11C0
AGLPLOT             1464
AGLPLOT:END         1484
AGLPLOT:LOOP        146C
AGLUPD              1440
AGLUPD:END          145E
AGLUPD:LOOP         1448
BALFCOL             A5FF
BALID               1
BALINIT             148A
BALPCOL             A5FF
BALPLOT             1692
BALRBND             153A
BALRBND:FINALRXY    15FA
BALRBND:HEIV        1682
BALRBND:ILEGAL      163A
BALRBND:LOOPRBN1    154E
BALRBND:LOOPRBN2    1558
BALRBND:LOOPRNXY    15EC
BALRBND:NEXT1       15B2
BALRBND:NEXT32      15B0
BALRBND:NEXT4       15AE
BALRBND:NNEXT       15BE
BALRBND:NOTMID      1606
BALRBND:VELMXR      1662
BALRBND:VELMYR      1672
BALRBND:VELX        163E
BALRBND:VELY        1650
BALRBND:WIDV        168A
BALRBND:YESMID      161C
BALUPD              14D2
BALUPD:ENDU         1534
BALUPD:NOTIME       14EE
BALUPD:NREBOUND     1508
BALUPD:TIME         14F8
DMMALLOC            11A6
DMMALLOC:END        11BE
DMMBNUM             32
DMMBSIZE            40
DMMDATA             1900
DMMFCOM             1180
DMMFFND             118E
DMMFIRST            1136
DMMFLOOP            1174
DMMFRCOM            1148
DMMFREE             11C0
DMMFRFND            1156
DMMFRLOP            113C
DMMFRSTO            116E
DMMINIT             1114
DMMINIT:LOOP        1122
DMMNEXT             1158
DMMNEXTO            1190
DMMSYSID            0
DRSQUARE            1712
FONSPLOT            16D2
FONSPLOT:LOOP       16F4
KBDBITDN            3
KBDBITF1            4
KBDBITF2            5
KBDBITF3            6
KBDBITLF            0
KBDBITPS            7
KBDBITRT            2
KBDBITUP            1
KBDCHRDN            28
KBDCHRLF            25
KBDCHRMK            4D
KBDCHRPK            50
KBDCHRRT            27
KBDCHRSH            10
KBDCHRSP            20
KBDCHRUP            26
KBDDOWN             28
KBDEDGE             18D9
KBDFIRE1            20
KBDFIRE2            4D
KBDFIRE3            10
KBDINIT             10B4
KBDLEFT             25
KBDMSKDN            8
KBDMSKF1            10
KBDMSKF2            20
KBDMSKF3            40
KBDMSKLF            1
KBDMSKPS            80
KBDMSKRT            4
KBDMSKUP            2
KBDPAUSE            50
KBDREAD             10CA
KBDREAD:LOOP        110A
KBDREAD:STORE       1106
KBDRIGHT            27
KBDTRAP             0
KBDUP               26
KBDVAL              18D8
PAD2FCO             3785D3
PAD2PCO             0
PAD3FCO             3888D7
PAD3PCO             3785D3
PAD4FCO             3C90E3
PAD4PCO             3A8CDE
PAD5FCO             0
PAD5PCO             0
PADFCOL             FF
PADHEIGH            50
PADINIT             11D6
PADMOU              1272
PADPCOL             FF
PADPLOT             1294
PADSPEED            8
PADUPD              11E8
PADUPD:DDN          126A
PADUPD:DOL          1228
PADUPD:DOR          123E
PADUPD:DOU          1254
PADUPD:MOVEDO       125C
PADUPD:MOVELEF      121A
PADUPD:MOVERIG      1230
PADUPD:MOVEUP       1246
PADWIDTH            4B
PADX                2580
PADY                2582
PAUSE               2584
RNDGET              1752
RNDGET:RANDVEC      1770
RNDINDEX            2586
RNDINIT             174A
SCRCYCCT            18DB
SCRHEIGH            1E0
SCRINIT             101C
SCRINTCT            18DA
SCRIRQ              1
SCRISR              108C
SCRTIM              14
SCRTRAP             1
SCRUPD              109A
SCRWIDTH            280
SQUARESH            6
SQUARESZ            40
START               1870
START:ANOTHER       18AE
START:LOOP          188C
START:WINT          18BA
START:YESUPD        18B6
SYSINIT             1000
