000016E2 Starting Address
Assembler used: EASy68K Editor/Assembler v5.15.04
Created On: 02/01/2021 12:05:22

00000000                             1  ; =============================================================================
00000000                             2  ; TITLE    : EXAMPLE GAME (MAIN PROGRAM)
00000000                             3  ; AUTHOR   : ANTONI BURGUERA
00000000                             4  ; HISTORY  : 10-OCT-2020 - CREATION
00000000                             5  ;            11-OCT-2020 - MINOR CHANGES
00000000                             6  ; =============================================================================
00000000                             7  
00001000                             8              ORG     $1000
00001000                             9  
00001000                            10  ; --- CODE INCLUDES -----------------------------------------------------------
00001000                            11  
00001000                            12              INCLUDE "SYSCONST.X68"          ; SYSTEM CONSTANTS
00001000                            13  ; =============================================================================
00001000                            14  ; TITLE    : SYSTEM CONSTANTS
00001000                            15  ; AUTHOR   : ANTONI BURGUERA
00001000                            16  ; HISTORY  : XX-XXX-201X - CREATION
00001000                            17  ;            11-OCT-2020 - MINOR CHANGES
00001000                            18  ; =============================================================================
00001000                            19  
00001000                            20  ; --- TRAP RELATED CONSTANTS --------------------------------------------------
00001000                            21  
00001000  =00000000                 22  KBDTRAP     EQU     0                       ; KEYBOARD UPDATE TRAP
00001000  =00000001                 23  SCRTRAP     EQU     1                       ; SCREEN REFRESH TRAP
00001000                            24  
00001000                            25  ; --- KEY CODES (EASy68K)
00001000                            26  
00001000  =00000020                 27  KBDCHRSP    EQU     $20                     ; SPACE KEY
00001000  =0000004D                 28  KBDCHRMK    EQU     'M'                     ; M KEY
00001000  =00000010                 29  KBDCHRSH    EQU     $10                     ; SHIFT KEY
00001000  =00000050                 30  KBDCHRPK    EQU     'P'                     ; P KEY
00001000  =00000025                 31  KBDCHRLF    EQU     $25                     ; LEFT KEY
00001000  =00000026                 32  KBDCHRUP    EQU     $26                     ; UP KEY
00001000  =00000027                 33  KBDCHRRT    EQU     $27                     ; RIGHT KEY
00001000  =00000028                 34  KBDCHRDN    EQU     $28                     ; DOWN KEY
00001000                            35  
00001000                            36  ; --- KEYBOARD MAPPING --------------------------------------------------------
00001000                            37  
00001000  =00000025                 38  KBDLEFT     EQU     KBDCHRLF                ; LEFT BUTTON
00001000  =00000026                 39  KBDUP       EQU     KBDCHRUP                ; UP BUTTON
00001000  =00000027                 40  KBDRIGHT    EQU     KBDCHRRT                ; RIGHT BUTTON
00001000  =00000028                 41  KBDDOWN     EQU     KBDCHRDN                ; DOWN BUTTON
00001000  =00000020                 42  KBDFIRE1    EQU     KBDCHRSP                ; FIRE 1 BUTTON
00001000  =0000004D                 43  KBDFIRE2    EQU     KBDCHRMK                ; FIRE 2 BUTTON
00001000  =00000010                 44  KBDFIRE3    EQU     KBDCHRSH                ; FIRE 3 BUTTON
00001000  =00000050                 45  KBDPAUSE    EQU     KBDCHRPK                ; PAUSE BUTTON
00001000                            46  
00001000                            47  ; --- KEYBOARD BITFIELD MASKS -------------------------------------------------
00001000                            48  ; CONVENIENCE CONSTANTS TO ACCESS THE FOLLOWING BIT-FIELD.
00001000                            49  ; THIS BIT-FIELD IS USED BY SYSTEM VARS (KBDVAL) AND (KBDEDGE).
00001000                            50  ; +---+---+---+---+---+---+---+---+
00001000                            51  ; | 7 | 6 | 5 | 4 | 3 | 2 | 1 | 0 |
00001000                            52  ; +---+---+---+---+---+---+---+---+
00001000                            53  ;   |   |   |   |   |   |   |   |
00001000                            54  ;   |   |   |   |   |   |   |   +---------- LEFT BUTTON
00001000                            55  ;   |   |   |   |   |   |   +-------------- UP BUTTON
00001000                            56  ;   |   |   |   |   |   +------------------ RIGHT BUTTON
00001000                            57  ;   |   |   |   |   +---------------------- DOWN BUTTON
00001000                            58  ;   |   |   |   +-------------------------- FIRE 1 BUTTON
00001000                            59  ;   |   |   +------------------------------ FIRE 2 BUTTON
00001000                            60  ;   |   +---------------------------------- FIRE 3 BUTTON
00001000                            61  ;   +-------------------------------------- PAUSE BUTTON
00001000                            62  
00001000  =00000001                 63  KBDMSKLF    EQU     %00000001
00001000  =00000002                 64  KBDMSKUP    EQU     %00000010
00001000  =00000004                 65  KBDMSKRT    EQU     %00000100
00001000  =00000008                 66  KBDMSKDN    EQU     %00001000
00001000  =00000010                 67  KBDMSKF1    EQU     %00010000
00001000  =00000020                 68  KBDMSKF2    EQU     %00100000
00001000  =00000040                 69  KBDMSKF3    EQU     %01000000
00001000  =00000080                 70  KBDMSKPS    EQU     %10000000
00001000                            71  
00001000                            72  ; --- KEYBOARD BITFIELD POSITIONS ---------------------------------------------
00001000                            73  
00001000  =00000000                 74  KBDBITLF    EQU     0
00001000  =00000001                 75  KBDBITUP    EQU     1
00001000  =00000002                 76  KBDBITRT    EQU     2
00001000  =00000003                 77  KBDBITDN    EQU     3
00001000  =00000004                 78  KBDBITF1    EQU     4
00001000  =00000005                 79  KBDBITF2    EQU     5
00001000  =00000006                 80  KBDBITF3    EQU     6
00001000  =00000007                 81  KBDBITPS    EQU     7
00001000                            82  
00001000                            83  ; --- SCREEN RELATED CONSTANTS ------------------------------------------------
00001000                            84  
00001000  =00000280                 85  SCRWIDTH    EQU     640                     ; SCREEN WIDTH (PIXELS)
00001000  =000001E0                 86  SCRHEIGH    EQU     480                     ; SCREEN HEIGHT (PIXELS)
00001000  =00000001                 87  SCRIRQ      EQU     1                       ; SCREEN INTERRUPT NUMBER
00001000  =00000014                 88  SCRTIM      EQU     20                      ; SCREEN TIMER (MS)
00001000                            89  
00001000                            90  ; --- DYNAMIC MEMORY CONSTANTS ------------------------------------------------
00001000                            91  
00001000  =00000040                 92  DMMBSIZE    EQU     64                      ; BLOCK SIZE (BYTES). POWER OF TWO
00001000  =00000032                 93  DMMBNUM     EQU     50                      ; NUMBER OF BLOCKS
00001000  =00000000                 94  DMMSYSID    EQU     0                       ; SYSTEM OWNER ID (MUST BE 0)
00001000  =00000000                 95  -------------------- end include --------------------
00001000                            96              INCLUDE "SYSTEM.X68"            ; SYSTEM CODE
00001000                            97  ; =============================================================================
00001000                            98  ; TITLE    : SYSTEM MANAGEMENT (SYSTEM CODE)
00001000                            99  ; AUTHOR   : ANTONI BURGUERA
00001000                           100  ; COMMENTS : IT IS DIVIDED IN THREE BLOCKS:
00001000                           101  ;            - SYS : GENERIC.
00001000                           102  ;            - SCR : SCREEN MANAGEMENT.
00001000                           103  ;            - KBD : KEYBOARD MANAGEMENT.
00001000                           104  ; HISTORY  : XX-XXX-201X - CREATION
00001000                           105  ;            11-OCT-2020 - MINOR CHANGES
00001000                           106  ; =============================================================================
00001000                           107  
00001000                           108  ; -----------------------------------------------------------------------------
00001000                           109  SYSINIT
00001000                           110  ; INITIALIZES THE SYSTEM
00001000                           111  ; INPUT    - NONE
00001000                           112  ; OUTPUT   - NONE
00001000                           113  ; MODIFIES - NONE
00001000                           114  ; -----------------------------------------------------------------------------
00001000  205F                     115              MOVE.L  (A7)+,A0                ; GET RETURN ADDRESS
00001002  4EB9 000010B4            116              JSR     KBDINIT                 ; INIT KEYBOARD
00001008  4EB9 0000101C            117              JSR     SCRINIT                 ; INIT SCREEN
0000100E  4EB9 00001114            118              JSR     DMMINIT                 ; INIT DYNAMIC MEMORY
00001014  027C DFFF                119              ANDI.W  #$DFFF,SR               ; SWITCH TO USER
00001018  2F08                     120              MOVE.L  A0,-(A7)                ; PUT RETURN ADDRESS
0000101A  4E75                     121              RTS
0000101C                           122  
0000101C                           123  ; =============================================================================
0000101C                           124  ; SCREEN MANAGEMENT (SYSTEM CODE)
0000101C                           125  ; =============================================================================
0000101C                           126  
0000101C                           127  ; -----------------------------------------------------------------------------
0000101C                           128  SCRINIT
0000101C                           129  ; INITIALIZES THE SCREEN, SCREEN-RELATED INTERRUPT AND VARS.
0000101C                           130  ; INPUT    - NONE
0000101C                           131  ; OUTPUT   - NONE
0000101C                           132  ; MODIFIES - D0,D1,D2,D3
0000101C                           133  ; -----------------------------------------------------------------------------
0000101C  007C 0700                134              ORI.W   #$0700,SR               ; DISABLE ALL INT
00001020  21FC 0000109A 0084       135              MOVE.L  #SCRUPD,($80+SCRTRAP*4) ; INSTALL TRAP
00001028  223C 028001E0            136              MOVE.L  #SCRWIDTH<<16|SCRHEIGH,D1 ; SET RESOLUTION
0000102E  103C 0021                137              MOVE.B  #33,D0
00001032  4E4F                     138              TRAP    #15
00001034  7201                     139              MOVE.L  #1,D1                   ; SET WINDOWED MODE
00001036  4E4F                     140              TRAP    #15
00001038  323C FF00                141              MOVE.W  #$FF00,D1               ; CLEAR VISIBLE BUFFER
0000103C  103C 000B                142              MOVE.B  #11,D0
00001040  4E4F                     143              TRAP    #15
00001042  123C 0011                144              MOVE.B  #17,D1                  ; ENABLE DOUBLE BUFFER
00001046  103C 005C                145              MOVE.B  #92,D0
0000104A  4E4F                     146              TRAP    #15
0000104C  323C FF00                147              MOVE.W  #$FF00,D1               ; CLEAR HIDDEN BUFFER
00001050  103C 000B                148              MOVE.B  #11,D0
00001054  4E4F                     149              TRAP    #15
00001056  21FC 0000108C 0064       150              MOVE.L  #SCRISR,($60+SCRIRQ*4)  ; SET EXCEPTION VECTOR
0000105E  123C 0005                151              MOVE.B  #5,D1                   ; ENABLE EXCEPTION PROCESSING
00001062  103C 0020                152              MOVE.B  #32,D0
00001066  4E4F                     153              TRAP    #15
00001068  143C 0081                154              MOVE.B  #%10000000|SCRIRQ,D2    ; ENABLE AUTO-IRQ
0000106C  163C 0014                155              MOVE.B  #SCRTIM,D3
00001070  123C 0006                156              MOVE.B  #6,D1
00001074  103C 0020                157              MOVE.B  #32,D0
00001078  4E4F                     158              TRAP    #15
0000107A  4239 0000174C            159              CLR.B   (SCRINTCT)              ; PREPARE INTERRUPT FLAG
00001080  4239 0000174D            160              CLR.B   (SCRCYCCT)              ; PREPARE CYCLE COUNTER
00001086  027C F8FF                161              ANDI.W  #$F8FF,SR               ; ENABLE INTS
0000108A  4E75                     162              RTS
0000108C                           163  
0000108C                           164  ; -----------------------------------------------------------------------------
0000108C                           165  SCRISR
0000108C                           166  ; SCREEN TIMER ISR. INCREASES THE INTERRUPT COUNTER AND UPDATES DOUBLE BUFFER.
0000108C                           167  ; INPUT    - NONE
0000108C                           168  ; OUTPUT   - NONE
0000108C                           169  ; MODIFIES - NONE
0000108C                           170  ; -----------------------------------------------------------------------------
0000108C  5239 0000174C            171              ADDQ.B  #1,(SCRINTCT)           ; UPDATE INT FLAG/COUNTER
00001092  5239 0000174D            172              ADDQ.B  #1,(SCRCYCCT)           ; UPDATE CYCLE COUNTER
00001098  4E73                     173              RTE
0000109A                           174  
0000109A                           175  ; -----------------------------------------------------------------------------
0000109A                           176  SCRUPD
0000109A                           177  ; TRAP SERVICE ROUTINE IN CHARGE OF VISUALIZING CURRENT FRAME AND CLEARING
0000109A                           178  ; BUFFER FOR THE NEXT ONE.
0000109A                           179  ; INPUT    - NONE
0000109A                           180  ; OUTPUT   - NONE
0000109A                           181  ; MODIFIES - NONE
0000109A                           182  ; -----------------------------------------------------------------------------
0000109A  48A7 C000                183              MOVEM.W D0-D1,-(A7)
0000109E  103C 005E                184              MOVE.B  #94,D0                  ; UPDATE DOUBLE BUFFER
000010A2  4E4F                     185              TRAP    #15
000010A4  323C FF00                186              MOVE.W  #$FF00,D1               ; CLEAR HIDDEN BUFFER
000010A8  103C 000B                187              MOVE.B  #11,D0
000010AC  4E4F                     188              TRAP    #15
000010AE  4C9F 0003                189              MOVEM.W (A7)+,D0-D1
000010B2  4E73                     190              RTE
000010B4                           191  
000010B4                           192  ; =============================================================================
000010B4                           193  ; KEYBOARD MANAGEMENT (SYSTEM CODE)
000010B4                           194  ; =============================================================================
000010B4                           195  
000010B4                           196  ; -----------------------------------------------------------------------------
000010B4                           197  KBDINIT
000010B4                           198  ; INITIALIZES THE SYSTEM VARIABLES KBDSYS AND KBDVAL
000010B4                           199  ; INPUT    - NONE
000010B4                           200  ; OUTPUT   - NONE
000010B4                           201  ; MODIFIES - NONE
000010B4                           202  ; -----------------------------------------------------------------------------
000010B4  4239 0000174A            203              CLR.B   (KBDVAL)                ; INIT VARS
000010BA  4239 0000174B            204              CLR.B   (KBDEDGE)
000010C0  21FC 000010CA 0080       205              MOVE.L  #KBDREAD,($80+KBDTRAP*4) ; INSTALL
000010C8  4E75                     206              RTS
000010CA                           207  
000010CA                           208  ; -----------------------------------------------------------------------------
000010CA                           209  KBDREAD
000010CA                           210  ; TRAP SERVICE ROUTINE.
000010CA                           211  ; UPDATES THE SYSTEM VARIABLES KBDEDGE AND KBDVAL ACCORDING TO THE BITFIELD
000010CA                           212  ; DESCRIBED IN SYSCONST. KBDVAL HOLDS THE CURRENT VALUES AND KBDEFGE HOLDS
000010CA                           213  ; RISING EDGES FROM PREVIOUS CALL TO THE CURRENT ONE.
000010CA                           214  ; INPUT    - NONE
000010CA                           215  ; OUTPUT   - (KBDVAL) AND (KBDEDGE)
000010CA                           216  ; MODIFIES - NONE
000010CA                           217  ; -----------------------------------------------------------------------------
000010CA  48E7 F000                218              MOVEM.L D0-D3,-(A7)
000010CE  103C 0013                219              MOVE.B  #19,D0
000010D2  223C 50104D20            220              MOVE.L  #KBDPAUSE<<24+KBDFIRE3<<16+KBDFIRE2<<8+KBDFIRE1,D1
000010D8  4E4F                     221              TRAP    #15
000010DA  6100 002A                222              BSR     .STORE                  ; STORE FIRE1,FIRE2,FIRE3 AND PAUSE
000010DE  223C 28272625            223              MOVE.L  #KBDDOWN<<24+KBDRIGHT<<16+KBDUP<<8+KBDLEFT,D1
000010E4  4E4F                     224              TRAP    #15
000010E6  6100 001E                225              BSR     .STORE                  ; STORE KEY UP,DOWN,LEFT AND RIGTH.
000010EA  1039 0000174A            226              MOVE.B  (KBDVAL),D0             ; COMPUTE EDGE.
000010F0  4600                     227              NOT.B   D0                      ; EDGE=NOT(PREVIOUS) AND CURRENT.
000010F2  C002                     228              AND.B   D2,D0
000010F4  13C2 0000174A            229              MOVE.B  D2,(KBDVAL)             ; STORE VALUES (PRESS AND EDGE)
000010FA  13C0 0000174B            230              MOVE.B  D0,(KBDEDGE)
00001100  4CDF 000F                231              MOVEM.L (A7)+,D0-D3
00001104  4E73                     232              RTE
00001106                           233  
00001106  363C 0003                234  .STORE      MOVE.W  #3,D3                   ; TRANSLATES THE 8-BIT ENCODING
0000110A  E189                     235  .LOOP       LSL.L   #8,D1                   ; OF TRAP #15 TASK 19 INTO A 1-BIT
0000110C  E312                     236              ROXL.B  #1,D2                   ; PER KEYPRESS ENCODING
0000110E  51CB FFFA                237              DBRA.W  D3,.LOOP
00001112  4E75                     238              RTS
00001114                           239  
00001114                           240  ; =============================================================================
00001114                           241  ; DYNAMIC MEMORY MANAGEMENT (SYSTEM CODE)
00001114                           242  ; DYNAMIC MEMORY IS A SET OF DMMBNUM SLOTS OF DMMBSIZE BYTES EACH ONE.
00001114                           243  ; DMMBSIZE MUST BE POWER OF TWO. A SLOT HAS:
00001114                           244  ; - HEADER - 1 WORD. SPECIFIES THE OWNER (0 MEANS OWNED BY SYSTEM)
00001114                           245  ; - DATA   - DMMBSIZE - 2 BYTES. MAY CONTAIN VARS AND ANY KIND OF DATA RELATED
00001114                           246  ;            THE THE OWNER. IF OWNER==0, DATA IS MEANINGLESS.
00001114                           247  ; =============================================================================
00001114                           248  
00001114                           249  ; -----------------------------------------------------------------------------
00001114                           250  DMMINIT
00001114                           251  ; INITIALIZES THE DYNAMIC MEMORY TO ALL OWNED BY SYSTEM.
00001114                           252  ; INPUT    - NONE
00001114                           253  ; OUTPUT   - NONE
00001114                           254  ; MODIFIES - NONE
00001114                           255  ; -----------------------------------------------------------------------------
00001114  48E7 8080                256              MOVEM.L D0/A0,-(A7)
00001118  41F9 00001780            257              LEA     DMMDATA,A0
0000111E  303C 0031                258              MOVE.W  #DMMBNUM-1,D0
00001122  30BC 0000                259  .LOOP       MOVE.W  #DMMSYSID,(A0)
00001126  D1FC 00000040            260              ADD.L   #DMMBSIZE,A0
0000112C  51C8 FFF4                261              DBRA.W  D0,.LOOP
00001130  4CDF 0101                262              MOVEM.L (A7)+,D0/A0
00001134  4E75                     263              RTS
00001136                           264  
00001136                           265  ; -----------------------------------------------------------------------------
00001136                           266  DMMFIRST
00001136                           267  ; SEARCHES THE FIRST MEMORY SLOT NOT OWNED BY SYSTEM AND OUTPUTS A POINTER
00001136                           268  ; TO THE CORRESPONDING DATA (SLOT ADDRESS+2)
00001136                           269  ; INPUT    - NONE
00001136                           270  ; OUTPUT   - A0   : POINTER TO THE DATA OR 0 IF NOT FOUND
00001136                           271  ; MODIFIES - NONE (ASIDE OF OUTPUT)
00001136                           272  ; -----------------------------------------------------------------------------
00001136  41F9 00001780            273              LEA     DMMDATA,A0
0000113C  4A58                     274  DMMFRLOP    TST.W   (A0)+
0000113E  6600 0016                275              BNE     DMMFRFND
00001142  D1FC 0000003E            276              ADD.L   #DMMBSIZE-2,A0
00001148  B1FC 000023FF            277  DMMFRCOM    CMP.L   #DMMDATA+DMMBSIZE*DMMBNUM-1,A0
0000114E  6DEC                     278              BLT     DMMFRLOP
00001150  207C 00000000            279              MOVE.L  #0,A0
00001156  4E75                     280  DMMFRFND    RTS
00001158                           281  
00001158                           282  ; -----------------------------------------------------------------------------
00001158                           283  DMMNEXT
00001158                           284  ; SEARCHES THE NEXT MEMORY SLOT NOT OWNED BY SYSTEM AND OUTPUTS A POINTER
00001158                           285  ; TO THE CORRESPONDING DATA (SLOT ADDRESS+2)
00001158                           286  ; INPUT    - A0   : POINTER WITHIN THE CURRENT SLOT
00001158                           287  ; OUTPUT   - A0   : POINTER TO THE DATA OR 0 IF NOT FOUND
00001158                           288  ; MODIFIES - NONE (ASIDE OF OUTPUT)
00001158                           289  ; -----------------------------------------------------------------------------
00001158  2F00                     290              MOVE.L  D0,-(A7)
0000115A  2008                     291              MOVE.L  A0,D0
0000115C  C0BC FFFFFFC0            292              AND.L   #-DMMBSIZE,D0           ; TAKE ADVANTAGE OF ALIGNMENT
00001162  0680 00000040            293              ADD.L   #DMMBSIZE,D0
00001168  2040                     294              MOVE.L  D0,A0
0000116A  201F                     295              MOVE.L  (A7)+,D0
0000116C  60DA                     296              BRA     DMMFRCOM
0000116E                           297  
0000116E                           298  ; -----------------------------------------------------------------------------
0000116E                           299  DMMFRSTO
0000116E                           300  ; SEARCHES THE FIRST MEMORY SLOT WITH THE SPECIFIED ID AND OUTPUTS A POINTER
0000116E                           301  ; TO THE CORRESPONDING DATA (SLOT ADDRESS+2)
0000116E                           302  ; INPUT    - D0.W : ID TO SEARCH
0000116E                           303  ; OUTPUT   - A0   : POINTER TO THE DATA OR 0 IF NOT FOUND
0000116E                           304  ; MODIFIES - NONE (ASIDE OF OUTPUT)
0000116E                           305  ; -----------------------------------------------------------------------------
0000116E  41F9 00001780            306              LEA     DMMDATA,A0
00001174  B058                     307  DMMFLOOP    CMP.W   (A0)+,D0
00001176  6700 0016                308              BEQ     DMMFFND
0000117A  D1FC 0000003E            309              ADD.L   #DMMBSIZE-2,A0
00001180  B1FC 000023FF            310  DMMFCOM     CMP.L   #DMMDATA+DMMBSIZE*DMMBNUM-1,A0
00001186  6DEC                     311              BLT     DMMFLOOP
00001188  207C 00000000            312              MOVE.L  #0,A0
0000118E  4E75                     313  DMMFFND     RTS
00001190                           314  
00001190                           315  ; -----------------------------------------------------------------------------
00001190                           316  DMMNEXTO
00001190                           317  ; SEARCHES THE NEXT MEMORY SLOT WITH THE SPECIFIED ID AND OUTPUTS A POINTER
00001190                           318  ; TO THE CORRESPONDING DATA (SLOT ADDRESS+2)
00001190                           319  ; INPUT    - D0.W : ID TO SEARCH
00001190                           320  ;            A0   : POINTER WITHIN THE CURRENT SLOT
00001190                           321  ; OUTPUT   - A0   : POINTER TO THE DATA OR 0 IF NOT FOUND
00001190                           322  ; MODIFIES - NONE (ASIDE OF OUTPUT)
00001190                           323  ; -----------------------------------------------------------------------------
00001190  2F00                     324              MOVE.L  D0,-(A7)
00001192  2008                     325              MOVE.L  A0,D0
00001194  C0BC FFFFFFC0            326              AND.L   #-DMMBSIZE,D0           ; TAKE ADVANTAGE OF ALIGNMENT
0000119A  0680 00000040            327              ADD.L   #DMMBSIZE,D0
000011A0  2040                     328              MOVE.L  D0,A0
000011A2  201F                     329              MOVE.L  (A7)+,D0
000011A4  60DA                     330              BRA     DMMFCOM
000011A6                           331  
000011A6                           332  ; -----------------------------------------------------------------------------
000011A6                           333  DMMALLOC
000011A6                           334  ; SEARCHES THE FIRST FREE (SYS OWNED) SLOT, ASSIGNS TO THE SPECIFIED OWNER
000011A6                           335  ; AND RETURNS A POINTER TO THE CORRESPONDING DATA (SLOT ADDRESS + 2)
000011A6                           336  ; INPUT    - D0.W : ID TO ASSIGN
000011A6                           337  ; OUTPUT   - A0   : POINTER TO THE DATA OR 0 IF NOT FREE SPACE
000011A6                           338  ; MODIFIES - NONE (ASIDE OF OUTPUT)
000011A6                           339  ; -----------------------------------------------------------------------------
000011A6  3F00                     340              MOVE.W  D0,-(A7)
000011A8  4240                     341              CLR.W   D0
000011AA  4EB8 116E                342              JSR     DMMFRSTO
000011AE  301F                     343              MOVE.W  (A7)+,D0
000011B0  B1FC 00000000            344              CMP.L   #0,A0
000011B6  6700 0006                345              BEQ     .END
000011BA  3140 FFFE                346              MOVE.W  D0,-2(A0)
000011BE  4E75                     347  .END        RTS
000011C0                           348  
000011C0                           349  ; -----------------------------------------------------------------------------
000011C0                           350  DMMFREE
000011C0                           351  ; FREES THE SLOT TO WHICH THE PROVIDED POINTER BELONGS BY SETTING ITS OWNED TO
000011C0                           352  ; SYSTEM (0)
000011C0                           353  ; INPUT    - A0   : POINTER BELONGING TO THE SLOT TO FREE
000011C0                           354  ; OUTPUT   - NONE
000011C0                           355  ; MODIFIES - NONE
000011C0                           356  ; -----------------------------------------------------------------------------
000011C0  48E7 8080                357              MOVEM.L D0/A0,-(A7)
000011C4  2008                     358              MOVE.L  A0,D0
000011C6  C0BC FFFFFFC0            359              AND.L   #-DMMBSIZE,D0           ; TAKE ADVANTAGE OF ALIGNMENT
000011CC  2040                     360              MOVE.L  D0,A0
000011CE  4250                     361              CLR.W   (A0)
000011D0  4CDF 0101                362              MOVEM.L (A7)+,D0/A0
000011D4  4E75                     363              RTS
000011D4  4E75                     364  -------------------- end include --------------------
000011D6                           365              INCLUDE "CONST.X68"             ; GAME CONSTANTS
000011D6                           366  ; =============================================================================
000011D6                           367  ; TITLE    : PAD MANAGEMENT
000011D6                           368  ; AUTHOR   : FAUSTI RODRIGUEZ
000011D6                           369  ; COMMENTS :
000011D6                           370  ; HISTORY  :
000011D6                           371  ; =============================================================================
000011D6                           372  
000011D6                           373  ; --- PAD RELATED CONSTANTS ---------------------------------------------------
000011D6                           374  
000011D6                           375  ;PADWIDTH    EQU     90                      ; PAD WIDTH
000011D6                           376  ;PADHEIGH    EQU     78                      ; PAD HEIGHT
000011D6                           377  ;PADPCOL     EQU     $00FF0000               ; PEN COLOR
000011D6                           378  ;PADFCOL     EQU     $00770000               ; FILL COLOR
000011D6                           379  ;PADSPEED    EQU     8                       ; PAD SPEED
000011D6                           380  
000011D6  =0000004B                381  PADWIDTH    EQU     75   ;75                   ;PAD WIDTH
000011D6  =00000050                382  PADHEIGH    EQU     80 ;80                      ;PAD HEIGHT
000011D6                           383  
000011D6  =000000FF                384  PADPCOL     EQU     $000000FF               ;PEN COLOR
000011D6  =000000FF                385  PADFCOL     EQU     $000000FF               ;FILL COLOR
000011D6  =00000000                386  PAD2PCO     EQU     $00000000               ;PEN COLOR MAROON
000011D6  =003785D3                387  PAD2FCO     EQU     $003785D3               ;FILL COLOR MAROON
000011D6                           388                        ;F7B472
000011D6                           389  
000011D6  =003785D3                390  PAD3PCO     EQU     $003785D3               ;PEN COLOR MAROON
000011D6  =003888D7                391  PAD3FCO     EQU     $003888D7               ;FILL COLOR MAROON 
000011D6                           392                        ;D38537
000011D6                           393                        ;D78838
000011D6                           394  
000011D6  =003A8CDE                395  PAD4PCO     EQU     $003A8CDE               ;PEN COLOR MAROON
000011D6  =003C90E3                396  PAD4FCO     EQU     $003C90E3               ;FILL COLOR MAROON
000011D6                           397                        ;DE8C3A
000011D6                           398                        ;E3903C
000011D6                           399  
000011D6  =00000000                400  PAD5PCO     EQU     $00000000               ;PEN COLOR MAROON 3D93E7
000011D6  =00000000                401  PAD5FCO     EQU     $00000000              ;FILL COLOR MAROON 3F97ED
000011D6                           402                         ;E7933D 
000011D6                           403                         ;ED973F
000011D6                           404  
000011D6                           405  
000011D6                           406  
000011D6                           407                                               ;PADY        EQU     SCRHEIGH-PADHEIGH-PADHEIGH/2 ;PAD Y CORDINATE
000011D6                           408  
000011D6  =00000008                409  PADSPEED    EQU     8                       ;PAD SPEED MOVEMENT
000011D6                           410  
000011D6                           411  ; --- BALL RELATED CONSTANTS --------------------------------------------------
000011D6                           412  
000011D6  =00000001                413  BALID       EQU     1                       ; BALL IDENTIFIER
000011D6  =0000FF00                414  BALPCOL     EQU     $0000FF00               ; PEN COLOR
000011D6  =00007700                415  BALFCOL     EQU     $00007700               ; FILL COLOR
000011D6                           416  
000011D6                           417  
000011D6                           418  
000011D6                           419  
000011D6                           420  
000011D6                           421  
000011D6                           422  
000011D6                           423  -------------------- end include --------------------
000011D6                           424              INCLUDE "PAD.X68"               ; PAD CODE
000011D6                           425   
000011D6                           426  ;-----------------------------------------------------------
000011D6                           427  PADINIT
000011D6                           428  ; INITIALIZE THE PAD. 
000011D6                           429  ; INPUT    - NONE
000011D6                           430  ; OUTPUT   - NONE
000011D6                           431  ; MODIFIES - NONE
000011D6                           432  ;-----------------------------------------------------------
000011D6  33FC 0140 00002400       433              MOVE.W #SCRWIDTH/2,(PADX)              ;CENTRE PANTALLA
000011DE  33FC 00F0 00002402       434              MOVE.W #SCRHEIGH/2,(PADY)
000011E6  4E75                     435              RTS
000011E8                           436  
000011E8                           437  
000011E8                           438  
000011E8                           439  ;-----------------------------------------------------------
000011E8                           440  PADUPD
000011E8                           441  ; INITIALIZE THE PAD.SI PITJEN DRETA, MOU DRETA, SI PITJEN
000011E8                           442  ; ESQUERRE ESQUERRA....
000011E8                           443  ; INPUT    - NONE
000011E8                           444  ; OUTPUT   - NONE
000011E8                           445  ; MODIFIES - NONE
000011E8                           446  ;-----------------------------------------------------------
000011E8  0839 0000 0000174A       447              BTST.B  #KBDBITLF,(KBDVAL)      ; LEFT KEY PRESSED?
000011F0  6600 0028                448              BNE     .MOVELEF                ; YES: MOVE LEFT
000011F4  0839 0002 0000174A       449              BTST.B  #KBDBITRT,(KBDVAL)      ; RIGHT KEY PRESSED?
000011FC  6600 0032                450              BNE     .MOVERIG                ; YES: MOVE LEFT
00001200  0839 0001 0000174A       451              BTST.B  #KBDBITUP,(KBDVAL)      ; UP KEY PRESSED?
00001208  6600 003C                452              BNE     .MOVEUP                 ; YES: MOVE UP
0000120C  0839 0003 0000174A       453              BTST.B  #KBDBITDN,(KBDVAL)      ; DOWN KEY PRESSED?
00001214  6600 0046                454              BNE     .MOVEDO
00001218  4E75                     455              RTS
0000121A                           456              
0000121A  0C79 0025 00002400       457  .MOVELEF    CMP.W   #PADWIDTH/2,(PADX)      ; BELOW LEFT BOUNDARY?
00001222  6E00 0004                458              BGT     .DOL                    ; NO: MOVE
00001226  4E75                     459              RTS                             ; YES: END
00001228  5179 00002400            460  .DOL        SUB.W   #PADSPEED,(PADX)        ; MOVE LEFT
0000122E  4E75                     461              RTS
00001230                           462              
00001230  0C79 025A 00002400       463  .MOVERIG    CMP.W   #SCRWIDTH-1-PADWIDTH/2,(PADX) ; HIGHER THAN RIGHT BOUNDARY?
00001238  6D00 0004                464              BLT     .DOR                    ; NO: MOVE
0000123C  4E75                     465              RTS                             ; YES: END
0000123E  5079 00002400            466  .DOR        ADD.W   #PADSPEED,(PADX)        ; MOVE RIGHT
00001244  4E75                     467              RTS
00001246                           468         
00001246  0C79 0005 00002402       469  .MOVEUP     CMP.W   #SCRHEIGH+5-SCRHEIGH,(PADY)   ; HIGHER THAN UP BOUNDARY?
0000124E  6E00 0004                470              BGT     .DOU
00001252  4E75                     471              RTS
00001254  5179 00002402            472  .DOU        SUB.W   #PADSPEED,(PADY)        ; MOVE UP
0000125A  4E75                     473              RTS
0000125C                           474              
0000125C  0C79 01E0 00002402       475  .MOVEDO     CMP.W   #SCRHEIGH,(PADY)
00001264  6D00 0004                476              BLT     .DDN
00001268  4E75                     477              RTS
0000126A  5079 00002402            478  .DDN        ADD.W   #PADSPEED,(PADY)        ;MOVE DOWN
00001270  4E75                     479              RTS
00001272                           480              
00001272                           481  ;-----------------------------------------------------------
00001272                           482  PADMOU
00001272                           483  ; PAD MOUSE. CONTROL PAD WITH THE MOUSE. TRAP #15, TASK 61
00001272                           484  ; INPUT    - NONE
00001272                           485  ; OUTPUT   - NONE
00001272                           486  ; MODIFIES - NONE
00001272                           487  ;-----------------------------------------------------------
00001272  48E7 E000                488             MOVEM.L D0-D2,-(A7)
00001276  4201                     489             CLR.B    D1
00001278  303C 003D                490             MOVE.W   #61,D0
0000127C  4E4F                     491             TRAP     #15
0000127E  33C1 00002400            492             MOVE.W   D1, (PADX)
00001284  E089                     493             LSR.L    #8,D1
00001286  E089                     494             LSR.L    #8,D1                   
00001288  33C1 00002402            495             MOVE.W   D1,(PADY)
0000128E  4CDF 0007                496             MOVEM.L (A7)+,D0-D2
00001292  4E75                     497             RTS
00001294                           498  
00001294                           499  
00001294                           500  ;-----------------------------------------------------------
00001294                           501  PADPLOT
00001294                           502  ; INITIALIZE THE PAD. DRAW PAD.
00001294                           503  ; INPUT    - NONE
00001294                           504  ; OUTPUT   - NONE
00001294                           505  ; MODIFIES - NONE
00001294                           506  ;-----------------------------------------------------------
00001294  48E7 F800                507              MOVEM.L D0-D4,-(A7)
00001298                           508              
00001298                           509              ;DRAW RECTANGLE 5 //ELIPSE
00001298  103C 0050                510              MOVE.B #80,D0                   ;SET COLOR TASK
0000129C  223C 003A8CDE            511              MOVE.L #PAD4PCO,D1              ;PEN COLOR
000012A2  4E4F                     512              TRAP #15                        ;SET PEN COLOR
000012A4  5200                     513              ADDQ.B #1,D0                    ;SET FILL COLOR TASK
000012A6  223C 003C90E3            514              MOVE.L #PAD4FCO,D1              ;FILL COLOR
000012AC  4E4F                     515              TRAP #15                        ;SET FILL COLOR
000012AE                           516              
000012AE  3239 00002400            517              MOVE.W (PADX),D1                ;D1:=XCENTER
000012B4  3439 00002402            518              MOVE.W (PADY),D2                ;D2:=YCENTER
000012BA  3601                     519              MOVE.W D1,D3                    ;D3:=XCENTER
000012BC  3802                     520              MOVE.W D2,D4                    ;D4:=YCENTER
000012BE  0441 000B                521              SUB.W  #PADWIDTH/2-28+5-3,D1      ;D1:=XLEFT
000012C2  0442 0023                522              SUB.W  #PADHEIGH/2-5,D2         ;D2:=YTOP
000012C6  5C43                     523              ADD.W  #PADWIDTH/2-28-3,D3        ;D3:=XRIGHT
000012C8  0644 0064                524              ADD.W  #PADHEIGH/2+50+10,D4     ;D4:=YBOTTOM
000012CC  103C 0058                525              MOVE.B #88,D0
000012D0  4E4F                     526              TRAP #15                        ;DRAW RECTANGLE
000012D2                           527              
000012D2                           528              ;DRAW RECTANGLE 5 //ELIPSE
000012D2  103C 0050                529              MOVE.B #80,D0                   ;SET COLOR TASK
000012D6  223C 003A8CDE            530              MOVE.L #PAD4PCO,D1              ;PEN COLOR
000012DC  4E4F                     531              TRAP #15                        ;SET PEN COLOR
000012DE  5200                     532              ADDQ.B #1,D0                    ;SET FILL COLOR TASK
000012E0  223C 003C90E3            533              MOVE.L #PAD4FCO,D1              ;FILL COLOR
000012E6  4E4F                     534              TRAP #15                        ;SET FILL COLOR
000012E8                           535              
000012E8  3239 00002400            536              MOVE.W (PADX),D1                ;D1:=XCENTER
000012EE  3439 00002402            537              MOVE.W (PADY),D2                ;D2:=YCENTER
000012F4  3601                     538              MOVE.W D1,D3                    ;D3:=XCENTER
000012F6  3802                     539              MOVE.W D2,D4                    ;D4:=YCENTER
000012F8  5D41                     540              SUB.W  #PADWIDTH/2-28-3,D1        ;D1:=XLEFT
000012FA  0442 0023                541              SUB.W  #PADHEIGH/2-5,D2         ;D2:=YTOP
000012FE  0643 000B                542              ADD.W  #PADWIDTH/2-28+5-3,D3      ;D3:=XRIGHT
00001302  0644 0064                543              ADD.W  #PADHEIGH/2+50+10,D4     ;D4:=YBOTTOM
00001306  103C 0058                544              MOVE.B #88,D0
0000130A  4E4F                     545              TRAP #15                        ;DRAW RECTANGLE
0000130C                           546                          
0000130C                           547              ;DRAW RECTANGLE 3
0000130C  103C 0050                548              MOVE.B #80,D0                   ;SET COLOR TASK
00001310  223C 003785D3            549              MOVE.L #PAD3PCO,D1              ;PEN COLOR
00001316  4E4F                     550              TRAP #15                        ;SET PEN COLOR
00001318  5200                     551              ADDQ.B #1,D0                    ;SET FILL COLOR TASK
0000131A  223C 003888D7            552              MOVE.L #PAD3FCO,D1              ;FILL COLOR
00001320  4E4F                     553              TRAP #15                        ;SET FILL COLOR
00001322                           554              
00001322  3239 00002400            555              MOVE.W (PADX),D1                ;D1:=XCENTER
00001328  3439 00002402            556              MOVE.W (PADY),D2                ;D2:=YCENTER
0000132E  3601                     557              MOVE.W D1,D3                    ;D3:=XCENTER
00001330  3802                     558              MOVE.W D2,D4                    ;D4:=YCENTER
00001332  5941                     559              SUB.W  #PADWIDTH/2-28-5,D1        ;D1:=XLEFT
00001334  0442 0023                560              SUB.W  #PADHEIGH/2-5,D2           ;D2:=YTOP
00001338  5843                     561              ADD.W  #PADWIDTH/2-28-5,D3        ;D3:=XRIGHT
0000133A  0644 0064                562              ADD.W  #PADHEIGH/2+50+10,D4        ;D4:=YBOTTOM
0000133E  103C 0057                563              MOVE.B #87,D0
00001342  4E4F                     564              TRAP #15                        ;DRAW RECTANGLE
00001344                           565              
00001344                           566              ;DRAW RECTANGLE 4 //ELIPSE
00001344  103C 0050                567              MOVE.B #80,D0                   ;SET COLOR TASK
00001348  223C 003A8CDE            568              MOVE.L #PAD4PCO,D1              ;PEN COLOR
0000134E  4E4F                     569              TRAP #15                        ;SET PEN COLOR
00001350  5200                     570              ADDQ.B #1,D0                    ;SET FILL COLOR TASK
00001352  223C 003C90E3            571              MOVE.L #PAD4FCO,D1              ;FILL COLOR
00001358  4E4F                     572              TRAP #15                        ;SET FILL COLOR
0000135A                           573              
0000135A  3239 00002400            574              MOVE.W (PADX),D1                ;D1:=XCENTER
00001360  3439 00002402            575              MOVE.W (PADY),D2                ;D2:=YCENTER
00001366  3601                     576              MOVE.W D1,D3                    ;D3:=XCENTER
00001368  3802                     577              MOVE.W D2,D4                    ;D4:=YCENTER
0000136A  5B41                     578              SUB.W  #PADWIDTH/2-28-4,D1        ;D1:=XLEFT
0000136C  0442 0023                579              SUB.W  #PADHEIGH/2-5,D2           ;D2:=YTOP
00001370  5A43                     580              ADD.W  #PADWIDTH/2-28-4,D3        ;D3:=XRIGHT
00001372  0644 0053                581              ADD.W  #PADHEIGH/2+50-7,D4        ;D4:=YBOTTOM
00001376  103C 0058                582              MOVE.B #88,D0
0000137A  4E4F                     583              TRAP #15                        ;DRAW RECTANGLE
0000137C                           584              
0000137C                           585              ;DRAW RECTANGLE 5 //ELIPSE
0000137C  103C 0050                586              MOVE.B #80,D0                   ;SET COLOR TASK
00001380  7200                     587              MOVE.L #PAD5PCO,D1              ;PEN COLOR
00001382  4E4F                     588              TRAP #15                        ;SET PEN COLOR
00001384  5200                     589              ADDQ.B #1,D0                    ;SET FILL COLOR TASK
00001386  7200                     590              MOVE.L #PAD5FCO,D1              ;FILL COLOR
00001388  4E4F                     591              TRAP #15                        ;SET FILL COLOR
0000138A                           592              
0000138A  3239 00002400            593              MOVE.W (PADX),D1                ;D1:=XCENTER
00001390  3439 00002402            594              MOVE.W (PADY),D2                ;D2:=YCENTER
00001396  3601                     595              MOVE.W D1,D3                    ;D3:=XCENTER
00001398  3802                     596              MOVE.W D2,D4                    ;D4:=YCENTER
0000139A  5741                     597              SUB.W  #PADWIDTH/2-28-6,D1        ;D1:=XLEFT
0000139C  0442 0023                598              SUB.W  #PADHEIGH/2-5,D2           ;D2:=YTOP
000013A0  5643                     599              ADD.W  #PADWIDTH/2-28-6,D3        ;D3:=XRIGHT
000013A2  0644 0050                600              ADD.W  #PADHEIGH/2+50-10,D4        ;D4:=YBOTTOM
000013A6  103C 0058                601              MOVE.B #88,D0
000013AA  4E4F                     602              TRAP #15                        ;DRAW RECTANGLE
000013AC                           603  
000013AC                           604              ;DRAW ELIPSE 2  
000013AC  103C 0050                605              MOVE.B #80,D0                   ;SET COLOR TASK
000013B0  7200                     606              MOVE.L #PAD2PCO,D1              ;PEN COLOR
000013B2  4E4F                     607              TRAP   #15                      ;SET PEN COLOR
000013B4                           608              
000013B4  5200                     609              ADDQ.B #1,D0                    ;SET FILL TASK
000013B6  223C 003785D3            610              MOVE.L #PAD2FCO,D1              ;FILL COLOR
000013BC  4E4F                     611              TRAP   #15                      ;SET FILL COLOR
000013BE                           612             
000013BE                           613              
000013BE  3239 00002400            614              MOVE.W (PADX),D1                ;D1:=XCENTER
000013C4  3439 00002402            615              MOVE.W (PADY),D2                ;D2:=YCENTER
000013CA  3601                     616              MOVE.W D1,D3                    ;D3:=XCENTER
000013CC  3802                     617              MOVE.W D2,D4                    ;D4:=YCENTER
000013CE  0441 0029                618              SUB.W  #PADWIDTH/2+4,D1          ;D1:=XLEFT
000013D2  0442 002D                619              SUB.W  #PADHEIGH/2+5,D2          ;D2:=YTOP
000013D6  0643 0025                620              ADD.W  #PADWIDTH/2,D3          ;D3:=XRIGHT
000013DA  0644 0028                621              ADD.W  #PADHEIGH/2,D4        ;D4:=YBOTTOM
000013DE  103C 0058                622              MOVE.B #88,D0
000013E2  4E4F                     623              TRAP #15
000013E4                           624  
000013E4                           625   
000013E4                           626              ;DRAW ELIPSE 1
000013E4  103C 0050                627              MOVE.B #80,D0                   ;SET COLOR TASK
000013E8  223C 000000FF            628              MOVE.L #PADPCOL,D1              ;PEN COLOR  
000013EE  4E4F                     629              TRAP   #15                      ;SET PEN COLOR
000013F0                           630              
000013F0  5200                     631              ADDQ.B #1,D0                    ;SET FILL TASK
000013F2  223C 000000FF            632              MOVE.L #PADFCOL,D1              ;FILL COLOR
000013F8  4E4F                     633              TRAP   #15                      ;SET FILL COLOR
000013FA                           634              
000013FA                           635       
000013FA  3239 00002400            636              MOVE.W (PADX),D1                ;D1:=XCENTER
00001400  3439 00002402            637              MOVE.W (PADY),D2                ;D2:=YCENTER
00001406                           638  
00001406  3601                     639              MOVE.W D1,D3                    ;D3:=XCENTER
00001408  3802                     640              MOVE.W D2,D4                    ;D4:=YCENTER
0000140A  0441 0025                641              SUB.W  #PADWIDTH/2,D1           ;D1:=XLEFT
0000140E  0442 002D                642              SUB.W  #PADHEIGH/2+5,D2           ;D2:=YTOP
00001412  0643 0025                643              ADD.W  #PADWIDTH/2,D3           ;D3:=XRIGHT
00001416  0644 0028                644              ADD.W  #PADHEIGH/2,D4           ;D4:=YBOTTOM
0000141A  103C 0058                645              MOVE.B #88,D0
0000141E  4E4F                     646              TRAP   #15
00001420                           647                
00001420  4CDF 001F                648              MOVEM.L (A7)+, D0-D4
00001424  4E75                     649              RTS
00001426                           650  
00001426                           651  
00001426                           652  
00001426                           653  
00001426                           654  
00001426                           655  
00001426                           656  
00001426                           657  
00001426                           658  
00001426                           659  
00001426                           660  -------------------- end include --------------------
00001426                           661              INCLUDE "AGENTLST.X68"          ; AGENT LIST MANAGEMENT
00001426                           662  ; =============================================================================
00001426                           663  ; TITLE    : AGENT LIST
00001426                           664  ; AUTHOR   : ANTONI BURGUERA
00001426                           665  ; COMMENTS : EACH AGENT HAS A DATA BLOCK FROM DMM AS FOLLOWS:
00001426                           666  ;              +0 - LONG : UPDATE SUBROUTINE POINTER
00001426                           667  ;              +4 - LONG : PLOT SUBROUTINE POINTER
00001426                           668  ;              +8:END    : DATA (AGENT SPECIFIC)
00001426                           669  ; HISTORY  : XX-XXX-201X - CREATION
00001426                           670  ;            11-OCT-2020 - MINOR CHANGES
00001426                           671  ; =============================================================================
00001426                           672  
00001426                           673  ; -----------------------------------------------------------------------------
00001426                           674  AGLADD
00001426                           675  ; CREATES A NEW AGENT
00001426                           676  ; INPUT    - A1 - POINTER TO AGENT INIT FUNCTION
00001426                           677  ;            A2 - POINTER TO AGENT UPDATE FUNCTION
00001426                           678  ;            A3 - POINTER TO AGENT PLOT FUNCTION
00001426                           679  ;            D0 - AGENT TYPE (USED AS OWNED BY DMM)
00001426                           680  ;            D1 - AGENT INITIALIZATION PARAMETER 1
00001426                           681  ;            D2 - AGENT INITIALIZATION PARAMETER 2
00001426                           682  ;            D3 - AGENT INITIALIZATION PARAMETER 3
00001426                           683  ; OUTPUT   - NONE
00001426                           684  ; MODIFIES - NONE
00001426                           685  ; -----------------------------------------------------------------------------
00001426  2F08                     686              MOVE.L  A0,-(A7)
00001428  4EB8 11A6                687              JSR     DMMALLOC
0000142C  B1FC 00000000            688              CMP.L   #0,A0
00001432  6700 0008                689              BEQ     .END
00001436  20CA                     690              MOVE.L  A2,(A0)+
00001438  20CB                     691              MOVE.L  A3,(A0)+
0000143A  4E91                     692              JSR     (A1)
0000143C  205F                     693  .END        MOVE.L  (A7)+,A0
0000143E  4E75                     694              RTS
00001440                           695  
00001440                           696  ; -----------------------------------------------------------------------------
00001440                           697  AGLUPD
00001440                           698  ; UPDATES THE AGENT LIST. PRIOR TO CALLING THE UPDATE FUNCTIONS, A0 IS SET
00001440                           699  ; TO THE DATA BLOCK OF THE CORRESPONDING SLOT.
00001440                           700  ; INPUT    - NONE
00001440                           701  ; OUTPUT   - NONE
00001440                           702  ; MODIFIES - NONE
00001440                           703  ; -----------------------------------------------------------------------------
00001440  48E7 00C0                704              MOVEM.L A0-A1,-(A7)
00001444  4EB8 1136                705              JSR     DMMFIRST
00001448  B1FC 00000000            706  .LOOP       CMP.L   #0,A0
0000144E  6700 000E                707              BEQ     .END
00001452  2250                     708              MOVE.L  (A0),A1
00001454  5088                     709              ADD.L   #8,A0
00001456  4E91                     710              JSR     (A1)
00001458  4EB8 1158                711              JSR     DMMNEXT
0000145C  60EA                     712              BRA     .LOOP
0000145E  4CDF 0300                713  .END        MOVEM.L (A7)+,A0-A1
00001462  4E75                     714              RTS
00001464                           715  
00001464                           716  ; -----------------------------------------------------------------------------
00001464                           717  AGLPLOT
00001464                           718  ; PLOTS THE AGENT LIST. PRIOR TO CALLING THE UPDATE FUNCTIONS, A0 IS SET
00001464                           719  ; TO THE DATA BLOCK OF THE CORRESPONDING SLOT.
00001464                           720  ; INPUT    - NONE
00001464                           721  ; OUTPUT   - NONE
00001464                           722  ; MODIFIES - NONE
00001464                           723  ; -----------------------------------------------------------------------------
00001464  48E7 00C0                724              MOVEM.L A0-A1,-(A7)
00001468  4EB8 1136                725              JSR     DMMFIRST
0000146C  B1FC 00000000            726  .LOOP       CMP.L   #0,A0
00001472  6700 0010                727              BEQ     .END
00001476  2268 0004                728              MOVE.L  4(A0),A1
0000147A  5088                     729              ADD.L   #8,A0
0000147C  4E91                     730              JSR     (A1)
0000147E  4EB8 1158                731              JSR     DMMNEXT
00001482  60E8                     732              BRA     .LOOP
00001484  4CDF 0300                733  .END        MOVEM.L (A7)+,A0-A1
00001488  4E75                     734              RTS
0000148A                           735  
0000148A                           736  ; -----------------------------------------------------------------------------
0000148A  =000011C0                737  AGLKILL     EQU     DMMFREE
0000148A                           738  ; KILLS THE AGENT BY RELEASING ITS MEMORY
0000148A                           739  ; INPUT    - A0 POINTER WITHIN THE AGENT MEMORY
0000148A                           740  ; OUTPUT   - NONE
0000148A                           741  ; MODIFIES - NONE
0000148A                           742  ; NOTE     - IT IS JUST A WRAPPER FOR DMMFREE
0000148A                           743  ; -----------------------------------------------------------------------------
0000148A                           744  -------------------- end include --------------------
0000148A                           745              INCLUDE "BALL.X68"              ; BALL MANAGEMENT
0000148A                           746  ; =============================================================================
0000148A                           747  ; TITLE    : BALL MANAGEMENT (AGENT)
0000148A                           748  ; AUTHOR   : ANTONI BURGUERA
0000148A                           749  ; COMMENTS : BALL AGENT LOCAL VARIABLES:
0000148A                           750  ;             (A0) : XCENTER - WORD
0000148A                           751  ;            2(A0) : YCENTER - WORD
0000148A                           752  ;            4(A0) : XSPEED  - WORD
0000148A                           753  ;            6(A0) : YSPEED  - WORD
0000148A                           754  ;            8(A0) : BALRAD  - WORD
0000148A                           755  ;            10(A0): ZSPEED  - WORD
0000148A                           756  ;            12(A0): DACCELZ - WORD
0000148A                           757  ;            14(A0): TIMER   - WORD
0000148A                           758  ; HISTORY  : 12-10-2020 - CREATION
0000148A                           759  ; =============================================================================
0000148A                           760  
0000148A                           761  ; -----------------------------------------------------------------------------
0000148A                           762  BALINIT
0000148A                           763  ; INITIALIZE A BALL
0000148A                           764  ; INPUT    - NONE
0000148A                           765  ; OUTPUT   - NONE 
0000148A                           766  ; MODIFIES - NONE
0000148A                           767  ; -----------------------------------------------------------------------------
0000148A  48E7 8040                768              MOVEM.L D0/A1,-(A7)             ; STACK REGISTERS
0000148E                           769              
0000148E  303C 0140                770              MOVE.W   #SCRWIDTH/2,D0      
00001492  3080                     771              MOVE.W  D0,(A0)                 ; XBALL=D0
00001494                           772  
00001494  303C 00F0                773              MOVE.W   #SCRHEIGH/2,D0      
00001498  3140 0002                774              MOVE.W  D0,2(A0)                ; YBALL=D0
0000149C                           775              
0000149C  303C 0000                776              MOVE.W   #0,D0      
000014A0  3140 0004                777              MOVE.W  D0,4(A0)                ; SPEEDX=D0
000014A4                           778                                
000014A4  303C 0000                779              MOVE.W   #0,D0     
000014A8  3140 0006                780              MOVE.W  D0,6(A0)                ; SPEEDY=D0
000014AC                           781              
000014AC  303C 0050                782              MOVE.W   #80,D0                 
000014B0  3140 0008                783              MOVE.W  D0,8(A0)                ; BALRAD=D0
000014B4                           784              
000014B4  303C 0000                785              MOVE.W   #0,D0                  
000014B8  3140 000A                786              MOVE.W  D0,10(A0)               ; SPEEDZ=D0  
000014BC                           787  
000014BC  303C FFFF                788              MOVE.W  #-1,D0
000014C0  3140 000C                789              MOVE.W  D0,12(A0)               ; DACCELERATEZ=D0
000014C4                           790              
000014C4  303C 0000                791              MOVE.W #0,D0
000014C8  3140 000E                792              MOVE.W D0,14(A0)                ; Timer
000014CC                           793              
000014CC  4CDF 0201                794              MOVEM.L (A7)+,D0/A1
000014D0  4E75                     795              RTS
000014D2                           796  ; -----------------------------------------------------------------------------
000014D2                           797  BALUPD
000014D2                           798  ; UPDATE A BALL
000014D2                           799  ; INPUT    - NONE
000014D2                           800  ; OUTPUT   - NONE 
000014D2                           801  ; MODIFIES - NONE
000014D2                           802  ; -----------------------------------------------------------------------------
000014D2  48A7 FC60                803              MOVEM.W  D0/D1/D2/D3/D4/D5/A1/A2 ,-(A7)                ; STACK REGISTERS
000014D6                           804              
000014D6  3028 000E                805              MOVE.W 14(A0),D0
000014DA  B07C 0001                806              CMP #1,D0
000014DE  6600 000E                807              BNE .NOTIME                     ; DONT UPDATE?CONSTANTLT ALTERNATE YES/NO
000014E2                           808              
000014E2  303C 0000                809              MOVE.W #0,D0
000014E6  3140 000E                810              MOVE.W D0,14(A0) 
000014EA  6000 000C                811              BRA .TIME
000014EE                           812  .NOTIME     
000014EE  5240                     813              ADDQ.W #1,D0
000014F0  3140 000E                814              MOVE.W D0,14(A0)
000014F4  6000 003E                815              BRA .ENDU   
000014F8                           816  .TIME         
000014F8                           817              
000014F8  0C68 0014 0008           818              CMP #20,8(A0)                   ; Crear constante de minima dimension de la bola
000014FE  6C00 0008                819              BGE .NREBOUND                   ; YES? REBOUND IF:
00001502  4EB9 0000153A            820              JSR BALRBND                     ; REBOUND 
00001508                           821  .NREBOUND   
00001508  3010                     822              MOVE.W (A0),D0
0000150A  D068 0004                823              ADD.W 4(A0),D0
0000150E  3080                     824              MOVE.W D0,(A0)
00001510                           825              
00001510  3028 0002                826              MOVE.W 2(A0),D0
00001514  D068 0006                827              ADD.W 6(A0),D0
00001518  3140 0002                828              MOVE.W D0,2(A0)
0000151C                           829              
0000151C  3028 000A                830              MOVE.W  10(A0),D0
00001520  D068 000C                831              ADD.W   12(A0),D0
00001524  3140 000A                832              MOVE.W  D0,10(A0)
00001528                           833              
00001528  3028 0008                834              MOVE.W 8(A0),D0
0000152C  D068 000A                835              ADD.W 10(A0),D0
00001530  3140 0008                836              MOVE.W D0,8(A0)
00001534                           837  .ENDU       
00001534  4C9F 063F                838              MOVEM.W  (A7)+,D0/D1/D2/D3/D4/D5/A1/A2
00001538                           839              
00001538  4E75                     840              RTS
0000153A                           841  
0000153A                           842  ; -----------------------------------------------------------------------------
0000153A                           843  BALRBND     
0000153A                           844  ; REBOUND A BALL
0000153A                           845  ; INPUT    - NONE
0000153A                           846  ; OUTPUT   - NONE 
0000153A                           847  ; MODIFIES - NONE
0000153A                           848  ; -----------------------------------------------------------------------------
0000153A  43F9 00001622            849              LEA .WIDV,A1                    ; V_WIDTH
00001540  45F9 0000161A            850              LEA .HEIV,A2                    ; V_HEIGHT
00001546  3A3C 0006                851              MOVE.W #6,D5                    ; HEIGHT
0000154A  363C 0002                852              MOVE.W #2,D3                    ; VARIABLE BUCLE LOOP1
0000154E                           853  .LOOPRBN1           
0000154E  343C 0002                854              MOVE.W #2,D2                    ; VARIABLE BUCLE LOOP2
00001552  5545                     855              SUBQ.W #2,D5                    
00001554  383C 0006                856              MOVE.W #6,D4                    ; WIDTH 
00001558                           857  .LOOPRBN2            
00001558  5445                     858              ADDQ.W #2,D5
0000155A                           859              
0000155A  3010                     860              MOVE.W (A0),D0                  
0000155C  3239 00002400            861              MOVE.W (PADX),D1
00001562  D272 4000                862              ADD.W (A2,D4),D1
00001566  B240                     863              CMP D0,D1                       ;INTRO X LEFT?
00001568                           864              ;BGT .NEXT4
00001568  6D00 0044                865              BLT .NEXT4
0000156C                           866              
0000156C  5544                     867              SUBQ.W #2,D4                    ;OPOS. SITE WIDTH
0000156E                           868              
0000156E  3010                     869              MOVE.W (A0),D0                  
00001570  3239 00002400            870              MOVE.W (PADX),D1
00001576  D272 4000                871              ADD.W (A2,D4),D1
0000157A  B240                     872              CMP D0,D1                       ;INTRO X RIGTH?
0000157C                           873              ;BLT .NEXT32
0000157C  6E00 0032                874              BGT .NEXT32
00001580                           875              
00001580  3028 0002                876              MOVE.W 2(A0),D0                 
00001584  3239 00002402            877              MOVE.W (PADY),D1
0000158A  D271 5000                878              ADD.W (A1,D5),D1
0000158E  B240                     879              CMP D0,D1                       ;INTRO Y UP?
00001590                           880              ;BGT .NEXT32
00001590  6D00 001E                881              BLT .NEXT32
00001594                           882              
00001594  5545                     883              SUBQ.W #2,D5                    ;OPOS. SITE HEIGTH
00001596                           884              
00001596  3028 0002                885              MOVE.W 2(A0),D0                 
0000159A  3239 00002402            886              MOVE.W (PADY),D1
000015A0  D271 5000                887              ADD.W (A1,D5),D1
000015A4  B240                     888              CMP D0,D1                       ;INTRO X DOWN?
000015A6                           889              ;BLT .NEXT1
000015A6  6E00 000A                890              BGT .NEXT1
000015AA                           891              
000015AA  6000 0012                892              BRA .NNEXT
000015AE                           893  .NEXT4  
000015AE  5544                     894              SUBQ.W #2,D4          
000015B0                           895  .NEXT32       
000015B0  5545                     896              SUBQ.W #2,D5                                
000015B2                           897  .NEXT1            
000015B2  51CA FFA4                898              DBRA D2,.LOOPRBN2
000015B6  51CB FF96                899              DBRA D3,.LOOPRBN1
000015BA  6000 0036                900              BRA .ILEGAL      
000015BE                           901              ;--------------------
000015BE                           902  .NNEXT        
000015BE  43F9 000015F6            903              LEA .VELX,A1
000015C4  45F9 00001608            904              LEA .VELY,A2
000015CA  C6FC 0003                905              MULU.W #3,D3
000015CE  D642                     906              ADD.W D2,D3
000015D0  C6FC 0002                907              MULU.W #2,D3                    
000015D4                           908              
000015D4                           909              ;MOVE.W (A1,D3),4(A0)
000015D4                           910              ;MOVE.W (A2,D3),6(A0)
000015D4  3031 3000                911              MOVE.W (A1,D3),D0
000015D8  D168 0004                912              ADD.W D0,4(A0)
000015DC                           913              
000015DC  3032 3000                914              MOVE.W (A2,D3),D0
000015E0  D168 0006                915              ADD.W D0,6(A0)
000015E4                           916              
000015E4  3028 000A                917              MOVE.W 10(A0),D0                
000015E8  4640                     918              NOT D0
000015EA  5440                     919              ADDQ.W #2,D0
000015EC  3140 000A                920              MOVE.W D0,10(A0) 
000015F0                           921              
000015F0  4E75                     922              RTS
000015F2                           923  .ILEGAL
000015F2  FFFF FFFF                924              SIMHALT 
000015F6= FFFE 0000 0002           925  .VELX       DC.W    -2,0,2
000015FC= FFFD 0000 0003           926              DC.W    -3,0,3
00001602= FFFE 0000 0002           927              DC.W    -2,0,2
00001608= FFFE FFFD FFFE           928  .VELY       DC.W    -2,-3,-2
0000160E= 0000 0000 0000           929              DC.W    0,0,0
00001614= 0002 0003 0002           930              DC.W    2,3,2                   
0000161A= FFD8 FFF3                931  .HEIV:      DC.W    -PADHEIGH/2,-PADHEIGH/6
0000161E= 000D 0028                932              DC.W    PADHEIGH/6,PADHEIGH/2
00001622= FFDB FFF4                933  .WIDV:      DC.W    -PADWIDTH/2,-PADWIDTH/6
00001626= 000C 0025                934              DC.W    PADWIDTH/6,PADWIDTH/2   
0000162A                           935  ; -----------------------------------------------------------------------------
0000162A                           936  BALPLOT
0000162A                           937  ; PLOT A BALL
0000162A                           938  ; INPUT    - NONE
0000162A                           939  ; OUTPUT   - NONE 
0000162A                           940  ; MODIFIES - NONE
0000162A                           941  ; -----------------------------------------------------------------------------
0000162A  48E7 F800                942              MOVEM.L D0-D4,-(A7)             ; STACK REGISTERS
0000162E  103C 0050                943              MOVE.B  #80,D0                  ; SET PEN COLOR TASK
00001632  223C 0000FF00            944              MOVE.L  #BALPCOL,D1             ; PEN COLOR
00001638  4E4F                     945              TRAP    #15                     ; SET PEN COLOR
0000163A  5200                     946              ADDQ.B  #1,D0                   ; SET FILL COLOR TASK
0000163C  223C 00007700            947              MOVE.L  #BALFCOL,D1             ; FILL COLOR
00001642  4E4F                     948              TRAP    #15                     ; SET FILL COLOR
00001644                           949              
00001644  3210                     950              MOVE.W  (A0),D1                 ; D1:=XCENTER
00001646  3428 0002                951              MOVE.W  2(A0),D2                ; D2:=YCENTER
0000164A  3601                     952              MOVE.W  D1,D3                   ; D3:=XCENTER
0000164C  3802                     953              MOVE.W  D2,D4                   ; D4:=YCENTER
0000164E                           954              
0000164E  9268 0008                955              SUB.W   8(A0),D1              ; D1:=XLEFT
00001652  9468 0008                956              SUB.W   8(A0),D2              ; D2:=YTOP
00001656  D668 0008                957              ADD.W   8(A0),D3              ; D3:=XRIGTH
0000165A  D868 0008                958              ADD.W   8(A0),D4              ; D4:=YBOTTOM
0000165E  103C 0058                959              MOVE.B  #88,D0                  ; DRAW ELLIPSE/CIRCLE TASK
00001662  4E4F                     960              TRAP    #15                     ; DO IT
00001664  4CDF 001F                961              MOVEM.L (A7)+,D0-D4
00001668  4E75                     962              RTS
0000166A                           963              
0000166A                           964  
0000166A                           965  
0000166A                           966            
0000166A                           967              
0000166A                           968  
0000166A                           969  
0000166A                           970  
0000166A                           971  
0000166A                           972  
0000166A                           973  
0000166A                           974  
0000166A                           975  
0000166A                           976  
0000166A                           977  -------------------- end include --------------------
0000166A                           978              INCLUDE "FONS.X68"              ; BACKGROUND 
0000166A  =00000006                979  SQUARESH    EQU     6                       ; NUMBER OF BITS TO SHIFT
0000166A  =00000040                980  SQUARESZ    EQU     1<<SQUARESH             ; SQUARE SIZE
0000166A                           981  
0000166A                           982  ; -----------------------------------------------------------------------------
0000166A                           983  FONSPLOT
0000166A                           984  ; Initializes the graphic output to windowed and SCRWIDTHxSCRHEIGH and installs
0000166A                           985  ; TRAP #0. Then, it draws a grid, each square being SQUARESZxSQUARESZ pixels
0000166A                           986  ; by drawing squares using DRSQUARE.
0000166A                           987  ; -----------------------------------------------------------------------------
0000166A  48E7 E0E0                988              MOVEM.L D0-D2/A0/A1/A2,-(A7)
0000166E  7201                     989              MOVE.L  #1,D1
00001670  103C 0021                990              MOVE.B  #33,D0
00001674  4E4F                     991              TRAP    #15                     ; ENSURE WINDOWED MODE
00001676  223C 028001E0            992              MOVE.L  #SCRWIDTH<<16|SCRHEIGH,D1
0000167C  4E4F                     993              TRAP    #15                     ; SET RESOLUTION TO 640X480
0000167E  21FC 000016AA 0080       994              MOVE.L  #DRSQUARE,($80)         ; INSTALL TRAP #0
00001686                           995  
00001686  4240                     996              CLR.W   D0                      ; INITIAL COORDINATES
00001688  343C 0006                997              MOVE.W  #SCRHEIGH/SQUARESZ-1,D2 ; ROW COUNTER
0000168C  323C 0009                998  .LOOP       MOVE.W  #SCRWIDTH/SQUARESZ-1,D1 ; COLUMN COUNTER
00001690  4E40                     999              TRAP    #0
00001692  5240                    1000              ADDQ.W  #1,D0                   ; NEXT X
00001694  51C9 FFF6               1001              DBRA.W  D1,.LOOP
00001698  C07C FF00               1002              AND.W   #$FF00,D0               ; RESET X
0000169C  0640 0100               1003              ADD.W   #$0100,D0               ; NEXT Y
000016A0  51CA FFEA               1004              DBRA.W  D2,.LOOP
000016A4  4CDF 0707               1005              MOVEM.L (A7)+,A2/A1/A0/D0-D2
000016A8  4E75                    1006              RTS
000016AA                          1007  
000016AA                          1008  ; -----------------------------------------------------------------------------
000016AA                          1009  DRSQUARE
000016AA                          1010  ; Draws a square of SQUARESZxSQUARESZ pixels, top-left coordinates being
000016AA                          1011  ; X*SQUARESZ,Y*SQUARESZ
000016AA                          1012  ; Input    - D0.W: 8-MSB X, 8-LSB Y (top-left coordinate is X*SQUARESZ,
000016AA                          1013  ;            Y*SQUARESZ)
000016AA                          1014  ; Output   - None
000016AA                          1015  ; Modifies - Nothing
000016AA                          1016  ; -----------------------------------------------------------------------------
000016AA  48E7 FC00               1017              MOVEM.L D0-D5,-(A7)             ; STORE REGISTERS
000016AE  3A00                    1018              MOVE.W  D0,D5                   ; COPY D0
000016B0  103C 0050               1019              MOVE.B  #80,D0                  ; TRAP CODE TO DEFINE PEN COLOR
000016B4  223C 00FFFFFF           1020              MOVE.L  #$00FFFFFF,D1           ; COLOR=WHITE
000016BA  4E4F                    1021              TRAP    #15                     ; SET PEN COLOR
000016BC  3205                    1022              MOVE.W  D5,D1
000016BE  C27C 00FF               1023              AND.W   #$00FF,D1               ; ISOLATE XINI (JUST MASK IT)
000016C2  ED49                    1024              LSL.W   #SQUARESH,D1            ; TIMES 32
000016C4  3405                    1025              MOVE.W  D5,D2
000016C6  E04A                    1026              LSR.W   #8,D2                   ; PREPARA YINI (SHIFT RIGHT)
000016C8  ED4A                    1027              LSL.W   #SQUARESH,D2            ; TIMES 32
000016CA  3601                    1028              MOVE.W  D1,D3                   ; COPY XINI TO XEND
000016CC  3802                    1029              MOVE.W  D2,D4                   ; COPY YINI TO YEND
000016CE  0643 0040               1030              ADD.W   #SQUARESZ,D3            ; ADD SQUARESZ TO BUILD XEND
000016D2  0644 0040               1031              ADD.W   #SQUARESZ,D4            ; ADD SQUARESZ TO BUILD YEND
000016D6  103C 0057               1032              MOVE.B  #87,D0                  ; TRAP CODE TO DRAW RECTANGLE
000016DA  4E4F                    1033              TRAP    #15                     ; DRAW IT
000016DC  4CDF 003F               1034              MOVEM.L (A7)+,D0-D5             ; RESTORE REGISTERS
000016E0  4E73                    1035              RTE
000016E2                          1036  
000016E2                          1037  -------------------- end include --------------------
000016E2                          1038              
000016E2                          1039  ; --- INITIALIZE --------------------------------------------------------------
000016E2                          1040  
000016E2  4EB8 1000               1041  START       JSR     SYSINIT                 ; INITIALIZE SYSTEM-RELATED STUFF
000016E6                          1042  
000016E6                          1043              ; TO DO : ADD YOUR GAME INITIALIZATION HERE
000016E6                          1044              
000016E6                          1045              ;JSR    FONSPLOT
000016E6                          1046              
000016E6  4EB8 11D6               1047              JSR     PADINIT
000016EA                          1048              
000016EA  303C 0001               1049              MOVE.W  #BALID,D0
000016EE  43F8 148A               1050              LEA     BALINIT,A1
000016F2  45F8 14D2               1051              LEA     BALUPD,A2
000016F6  47F8 162A               1052              LEA     BALPLOT,A3
000016FA  4EB8 1426               1053              JSR     AGLADD
000016FE                          1054  
000016FE                          1055  ; --- UPDATE ------------------------------------------------------------------
000016FE                          1056  
000016FE  4E40                    1057  .LOOP       TRAP    #KBDTRAP                ; READ KEYBOARD
00001700                          1058  
00001700                          1059              ; TO DO : ADD YOUR GAME UPDATE HERE
00001700                          1060              
00001700                          1061              ;JSR     PADUPDKB
00001700  4EB8 1272               1062              JSR     PADMOU
00001704                          1063              
00001704                          1064              ; ___Update_Ball___ 
00001704  0839 0007 0000174A      1065              BTST.B  #KBDBITPS,(KBDVAL)      ; "P" PAUSE KEY PRESSED?    
0000170C  6600 0012               1066              BNE     .ANOTHER                           ; 1=PAUSE, 0=NOPAUSE   
00001710  0839 0000 00002404      1067              BTST.B  #0,(PAUSE)
00001718  6700 000E               1068              BEQ     .YESUPD
0000171C  6000 000E               1069              BRA     .WINT                   
00001720                          1070  .ANOTHER    
00001720  13FC 0000 00002404      1071              MOVE.B #0,(PAUSE)                  
00001728                          1072  .YESUPD      
00001728  4EB8 1440               1073              JSR     AGLUPD      
0000172C                          1074              ; ___Finish_Update_Ball___
0000172C                          1075              
0000172C                          1076              ; --- WAIT SYNCH --------------------------------------------------------------
0000172C                          1077  
0000172C  4A39 0000174C           1078  .WINT       TST.B   (SCRINTCT)              ; WAIT FOR INTERRUPT
00001732  67F8                    1079              BEQ     .WINT
00001734  4239 0000174C           1080              CLR.B   (SCRINTCT)
0000173A                          1081  
0000173A                          1082  ; --- PLOT --------------------------------------------------------------------
0000173A                          1083  
0000173A                          1084              ; TO DO : ADD YOUR GAME PLOT HERE
0000173A                          1085              ;JSR    FONSPLOT
0000173A  4EB8 1294               1086              JSR     PADPLOT
0000173E  4EB8 1464               1087              JSR     AGLPLOT
00001742                          1088              
00001742  4E41                    1089              TRAP    #SCRTRAP                ; SHOW GRAPHICS
00001744  60B8                    1090              BRA     .LOOP                   ; MAIN LOOP
00001746  FFFF FFFF               1091              SIMHALT
0000174A                          1092  
0000174A                          1093  ; --- VARIABLES ---------------------------------------------------------------
0000174A                          1094  
0000174A                          1095              INCLUDE "SYSVAR.X68"
0000174A                          1096  ; =============================================================================
0000174A                          1097  ; TITLE    : SYSTEM VARIABLES
0000174A                          1098  ; AUTHOR   : ANTONI BURGUERA
0000174A                          1099  ; COMMENTS : NOTE THAT ALL THESE VARS ARE USED TO SHARE DATA FROM SYSTEM TO
0000174A                          1100  ;            USER. THUS THEY MUST NOT BE IN PROTECTED MEMORY.
0000174A                          1101  ;            NOTE THAT USING DMMDATA IN SUCH WAY IS A BAD IDEA, AS USER
0000174A                          1102  ;            APPLICATIONS CAN ALSO FREE OR CHANGE OWNERSHIP. NONETHELESS, FOR
0000174A                          1103  ;            THE SAKE OF THIS EXAMPLE THIS IS GOOD ENOUGH.
0000174A                          1104  ; HISTORY  : XX-XXX-201X - CREATION
0000174A                          1105  ;            11-OCT-2020 - MINOR CHANGES
0000174A                          1106  ; =============================================================================
0000174A                          1107  
0000174A                          1108  ; --- KEYBOARD RELATED VARIABLES ----------------------------------------------
0000174A                          1109  
0000174A                          1110  KBDVAL      DS.B    1                       ; KEY PRESSED=1
0000174B                          1111  KBDEDGE     DS.B    1                       ; KEY CHANGED=1
0000174C                          1112  
0000174C                          1113              DS.W    0
0000174C                          1114  
0000174C                          1115  ; --- SCREEN RELATED VARIABLES ------------------------------------------------
0000174C                          1116  
0000174C                          1117  SCRINTCT    DS.B    1                       ; INTERRUPT COUNTER/FLAG
0000174D                          1118  SCRCYCCT    DS.B    1                       ; CYCLE COUNTER
0000174E                          1119              DS.W    0
0000174E                          1120  
0000174E                          1121  ; --- DYNAMIC MEMORY VARIABLES ------------------------------------------------
0000174E                          1122  
00001780                          1123              ORG     (*+DMMBSIZE-1)&-DMMBSIZE ; ALIGN TO DMMBSIZE
00001780                          1124  DMMDATA     DS.B    DMMBSIZE*DMMBNUM        ; DYNAMIC MEMORY ALLOCATION SPACE
00002400                          1125              DS.W    0                       ; JUST IN CASE (SIZE IS POW OF TWO)
00002400                          1126  -------------------- end include --------------------
00002400                          1127              INCLUDE "VAR.X68"
00002400                          1128  ; =============================================================================
00002400                          1129  ; TITLE    : GAME VARIABLES
00002400                          1130  ; AUTHOR   : ANTONI BURGUERA
00002400                          1131  ; HISTORY  : 12-OCTOBER-2020 - CREATION
00002400                          1132  ; =============================================================================
00002400                          1133  
00002400                          1134  ; --- PAD RELATED VARIABLES ---------------------------------------------------
00002400                          1135  
00002400                          1136  PADX        DS.W    1                       ; PAD X COORDINATE (XCENTER)
00002402                          1137  PADY        DS.W    1                       ; PAD Y COORDINATE (YCENTER)
00002404                          1138  
00002404                          1139  ; --- GAME RELATED VARIABLES --------------------------------------------------
00002404                          1140  
00002404                          1141  PAUSE       DS.B    1                       ; X0/X1 PAUSE GAME
00002406                          1142              DS.W    0
00002406                          1143  
00002406                          1144  
00002406                          1145  -------------------- end include --------------------
00002406                          1146              END    START

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
AGLADD              1426
AGLADD:END          143C
AGLKILL             11C0
AGLPLOT             1464
AGLPLOT:END         1484
AGLPLOT:LOOP        146C
AGLUPD              1440
AGLUPD:END          145E
AGLUPD:LOOP         1448
BALFCOL             7700
BALID               1
BALINIT             148A
BALPCOL             FF00
BALPLOT             162A
BALRBND             153A
BALRBND:HEIV        161A
BALRBND:ILEGAL      15F2
BALRBND:LOOPRBN1    154E
BALRBND:LOOPRBN2    1558
BALRBND:NEXT1       15B2
BALRBND:NEXT32      15B0
BALRBND:NEXT4       15AE
BALRBND:NNEXT       15BE
BALRBND:VELX        15F6
BALRBND:VELY        1608
BALRBND:WIDV        1622
BALUPD              14D2
BALUPD:ENDU         1534
BALUPD:NOTIME       14EE
BALUPD:NREBOUND     1508
BALUPD:TIME         14F8
DMMALLOC            11A6
DMMALLOC:END        11BE
DMMBNUM             32
DMMBSIZE            40
DMMDATA             1780
DMMFCOM             1180
DMMFFND             118E
DMMFIRST            1136
DMMFLOOP            1174
DMMFRCOM            1148
DMMFREE             11C0
DMMFRFND            1156
DMMFRLOP            113C
DMMFRSTO            116E
DMMINIT             1114
DMMINIT:LOOP        1122
DMMNEXT             1158
DMMNEXTO            1190
DMMSYSID            0
DRSQUARE            16AA
FONSPLOT            166A
FONSPLOT:LOOP       168C
KBDBITDN            3
KBDBITF1            4
KBDBITF2            5
KBDBITF3            6
KBDBITLF            0
KBDBITPS            7
KBDBITRT            2
KBDBITUP            1
KBDCHRDN            28
KBDCHRLF            25
KBDCHRMK            4D
KBDCHRPK            50
KBDCHRRT            27
KBDCHRSH            10
KBDCHRSP            20
KBDCHRUP            26
KBDDOWN             28
KBDEDGE             174B
KBDFIRE1            20
KBDFIRE2            4D
KBDFIRE3            10
KBDINIT             10B4
KBDLEFT             25
KBDMSKDN            8
KBDMSKF1            10
KBDMSKF2            20
KBDMSKF3            40
KBDMSKLF            1
KBDMSKPS            80
KBDMSKRT            4
KBDMSKUP            2
KBDPAUSE            50
KBDREAD             10CA
KBDREAD:LOOP        110A
KBDREAD:STORE       1106
KBDRIGHT            27
KBDTRAP             0
KBDUP               26
KBDVAL              174A
PAD2FCO             3785D3
PAD2PCO             0
PAD3FCO             3888D7
PAD3PCO             3785D3
PAD4FCO             3C90E3
PAD4PCO             3A8CDE
PAD5FCO             0
PAD5PCO             0
PADFCOL             FF
PADHEIGH            50
PADINIT             11D6
PADMOU              1272
PADPCOL             FF
PADPLOT             1294
PADSPEED            8
PADUPD              11E8
PADUPD:DDN          126A
PADUPD:DOL          1228
PADUPD:DOR          123E
PADUPD:DOU          1254
PADUPD:MOVEDO       125C
PADUPD:MOVELEF      121A
PADUPD:MOVERIG      1230
PADUPD:MOVEUP       1246
PADWIDTH            4B
PADX                2400
PADY                2402
PAUSE               2404
SCRCYCCT            174D
SCRHEIGH            1E0
SCRINIT             101C
SCRINTCT            174C
SCRIRQ              1
SCRISR              108C
SCRTIM              14
SCRTRAP             1
SCRUPD              109A
SCRWIDTH            280
SQUARESH            6
SQUARESZ            40
START               16E2
START:ANOTHER       1720
START:LOOP          16FE
START:WINT          172C
START:YESUPD        1728
SYSINIT             1000
