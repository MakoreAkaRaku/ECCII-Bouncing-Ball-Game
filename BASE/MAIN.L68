00001E18 Starting Address
Assembler used: EASy68K Editor/Assembler v5.16.01
Created On: 10/01/2021 13:03:42

00000000                             1  ; =============================================================================
00000000                             2  ; TITLE    : EXAMPLE GAME (MAIN PROGRAM)
00000000                             3  ; AUTHOR   : ANTONI BURGUERA
00000000                             4  ; HISTORY  : 10-OCT-2020 - CREATION
00000000                             5  ;            11-OCT-2020 - MINOR CHANGES
00000000                             6  ; =============================================================================
00000000                             7  
00001000                             8              ORG     $1000
00001000                             9  
00001000                            10  ; --- CODE INCLUDES -----------------------------------------------------------
00001000                            11  
00001000                            12              INCLUDE "SYSCONST.X68"          ; SYSTEM CONSTANTS
00001000                            13  ; =============================================================================
00001000                            14  ; TITLE    : SYSTEM CONSTANTS
00001000                            15  ; AUTHOR   : ANTONI BURGUERA
00001000                            16  ; HISTORY  : XX-XXX-201X - CREATION
00001000                            17  ;            11-OCT-2020 - MINOR CHANGES
00001000                            18  ; =============================================================================
00001000                            19  
00001000                            20  ; --- TRAP RELATED CONSTANTS --------------------------------------------------
00001000                            21  
00001000  =00000000                 22  KBDTRAP     EQU     0                       ; KEYBOARD UPDATE TRAP
00001000  =00000001                 23  SCRTRAP     EQU     1                       ; SCREEN REFRESH TRAP
00001000                            24  
00001000                            25  ; --- KEY CODES (EASy68K)
00001000                            26  
00001000  =00000020                 27  KBDCHRSP    EQU     $20                     ; SPACE KEY
00001000  =0000004D                 28  KBDCHRMK    EQU     'M'                     ; M KEY
00001000  =00000010                 29  KBDCHRSH    EQU     $10                     ; SHIFT KEY
00001000  =00000050                 30  KBDCHRPK    EQU     'P'                     ; P KEY
00001000  =00000025                 31  KBDCHRLF    EQU     $25                     ; LEFT KEY
00001000  =00000026                 32  KBDCHRUP    EQU     $26                     ; UP KEY
00001000  =00000027                 33  KBDCHRRT    EQU     $27                     ; RIGHT KEY
00001000  =00000028                 34  KBDCHRDN    EQU     $28                     ; DOWN KEY
00001000                            35  
00001000                            36  ; --- KEYBOARD MAPPING --------------------------------------------------------
00001000                            37  
00001000  =00000025                 38  KBDLEFT     EQU     KBDCHRLF                ; LEFT BUTTON
00001000  =00000026                 39  KBDUP       EQU     KBDCHRUP                ; UP BUTTON
00001000  =00000027                 40  KBDRIGHT    EQU     KBDCHRRT                ; RIGHT BUTTON
00001000  =00000028                 41  KBDDOWN     EQU     KBDCHRDN                ; DOWN BUTTON
00001000  =00000020                 42  KBDFIRE1    EQU     KBDCHRSP                ; FIRE 1 BUTTON
00001000  =0000004D                 43  KBDFIRE2    EQU     KBDCHRMK                ; FIRE 2 BUTTON
00001000  =00000010                 44  KBDFIRE3    EQU     KBDCHRSH                ; FIRE 3 BUTTON
00001000  =00000050                 45  KBDPAUSE    EQU     KBDCHRPK                ; PAUSE BUTTON
00001000                            46  
00001000                            47  ; --- KEYBOARD BITFIELD MASKS -------------------------------------------------
00001000                            48  ; CONVENIENCE CONSTANTS TO ACCESS THE FOLLOWING BIT-FIELD.
00001000                            49  ; THIS BIT-FIELD IS USED BY SYSTEM VARS (KBDVAL) AND (KBDEDGE).
00001000                            50  ; +---+---+---+---+---+---+---+---+
00001000                            51  ; | 7 | 6 | 5 | 4 | 3 | 2 | 1 | 0 |
00001000                            52  ; +---+---+---+---+---+---+---+---+
00001000                            53  ;   |   |   |   |   |   |   |   |
00001000                            54  ;   |   |   |   |   |   |   |   +---------- LEFT BUTTON
00001000                            55  ;   |   |   |   |   |   |   +-------------- UP BUTTON
00001000                            56  ;   |   |   |   |   |   +------------------ RIGHT BUTTON
00001000                            57  ;   |   |   |   |   +---------------------- DOWN BUTTON
00001000                            58  ;   |   |   |   +-------------------------- FIRE 1 BUTTON
00001000                            59  ;   |   |   +------------------------------ FIRE 2 BUTTON
00001000                            60  ;   |   +---------------------------------- FIRE 3 BUTTON
00001000                            61  ;   +-------------------------------------- PAUSE BUTTON
00001000                            62  
00001000  =00000001                 63  KBDMSKLF    EQU     %00000001
00001000  =00000002                 64  KBDMSKUP    EQU     %00000010
00001000  =00000004                 65  KBDMSKRT    EQU     %00000100
00001000  =00000008                 66  KBDMSKDN    EQU     %00001000
00001000  =00000010                 67  KBDMSKF1    EQU     %00010000
00001000  =00000020                 68  KBDMSKF2    EQU     %00100000
00001000  =00000040                 69  KBDMSKF3    EQU     %01000000
00001000  =00000080                 70  KBDMSKPS    EQU     %10000000
00001000                            71  
00001000                            72  ; --- KEYBOARD BITFIELD POSITIONS ---------------------------------------------
00001000                            73  
00001000  =00000000                 74  KBDBITLF    EQU     0
00001000  =00000001                 75  KBDBITUP    EQU     1
00001000  =00000002                 76  KBDBITRT    EQU     2
00001000  =00000003                 77  KBDBITDN    EQU     3
00001000  =00000004                 78  KBDBITF1    EQU     4
00001000  =00000005                 79  KBDBITF2    EQU     5
00001000  =00000006                 80  KBDBITF3    EQU     6
00001000  =00000007                 81  KBDBITPS    EQU     7
00001000                            82  
00001000                            83  ; --- SCREEN RELATED CONSTANTS ------------------------------------------------
00001000                            84  
00001000  =000003E8                 85  SCRWIDTH    EQU     1000                    ; SCREEN WIDTH (PIXELS)
00001000  =000003E8                 86  SCRHEIGH    EQU     1000                    ; SCREEN HEIGHT (PIXELS)
00001000  =00000001                 87  SCRIRQ      EQU     1                       ; SCREEN INTERRUPT NUMBER
00001000  =00000014                 88  SCRTIM      EQU     20                      ; SCREEN TIMER (MS)
00001000                            89  
00001000                            90  ; --- DYNAMIC MEMORY CONSTANTS ------------------------------------------------
00001000                            91  
00001000  =00000040                 92  DMMBSIZE    EQU     64                      ; BLOCK SIZE (BYTES). POWER OF TWO
00001000  =00000040                 93  DMMBNUM     EQU     64                      ; NUMBER OF BLOCKS
00001000  =00000000                 94  DMMSYSID    EQU     0                       ; SYSTEM OWNER ID (MUST BE 0)
00001000                            95  
00001000                            96  
00001000                            97  
00001000                            98  
00001000                            99  
00001000                           100  -------------------- end include --------------------
00001000                           101              INCLUDE "SYSTEM.X68"            ; SYSTEM CODE
00001000                           102  ; =============================================================================
00001000                           103  ; TITLE    : SYSTEM MANAGEMENT (SYSTEM CODE)
00001000                           104  ; AUTHOR   : ANTONI BURGUERA
00001000                           105  ; COMMENTS : IT IS DIVIDED IN THREE BLOCKS:
00001000                           106  ;            - SYS : GENERIC.
00001000                           107  ;            - SCR : SCREEN MANAGEMENT.
00001000                           108  ;            - KBD : KEYBOARD MANAGEMENT.
00001000                           109  ; HISTORY  : XX-XXX-201X - CREATION
00001000                           110  ;            11-OCT-2020 - MINOR CHANGES
00001000                           111  ; =============================================================================
00001000                           112  
00001000                           113  ; -----------------------------------------------------------------------------
00001000                           114  SYSINIT
00001000                           115  ; INITIALIZES THE SYSTEM
00001000                           116  ; INPUT    - NONE
00001000                           117  ; OUTPUT   - NONE
00001000                           118  ; MODIFIES - NONE
00001000                           119  ; -----------------------------------------------------------------------------
00001000  205F                     120              MOVE.L  (A7)+,A0                ; GET RETURN ADDRESS
00001002  4EB9 000010B4            121              JSR     KBDINIT                 ; INIT KEYBOARD
00001008  4EB9 0000101C            122              JSR     SCRINIT                 ; INIT SCREEN
0000100E  4EB9 00001114            123              JSR     DMMINIT                 ; INIT DYNAMIC MEMORY
00001014  027C DFFF                124              ANDI.W  #$DFFF,SR               ; SWITCH TO USER
00001018  2F08                     125              MOVE.L  A0,-(A7)                ; PUT RETURN ADDRESS
0000101A  4E75                     126              RTS
0000101C                           127  
0000101C                           128  ; =============================================================================
0000101C                           129  ; SCREEN MANAGEMENT (SYSTEM CODE)
0000101C                           130  ; =============================================================================
0000101C                           131  
0000101C                           132  ; -----------------------------------------------------------------------------
0000101C                           133  SCRINIT
0000101C                           134  ; INITIALIZES THE SCREEN, SCREEN-RELATED INTERRUPT AND VARS.
0000101C                           135  ; INPUT    - NONE
0000101C                           136  ; OUTPUT   - NONE
0000101C                           137  ; MODIFIES - D0,D1,D2,D3
0000101C                           138  ; -----------------------------------------------------------------------------
0000101C  007C 0700                139              ORI.W   #$0700,SR               ; DISABLE ALL INT
00001020  21FC 0000109A 0084       140              MOVE.L  #SCRUPD,($80+SCRTRAP*4) ; INSTALL TRAP
00001028  223C 03E803E8            141              MOVE.L  #SCRWIDTH<<16|SCRHEIGH,D1 ; SET RESOLUTION
0000102E  103C 0021                142              MOVE.B  #33,D0
00001032  4E4F                     143              TRAP    #15
00001034  7201                     144              MOVE.L  #1,D1                   ; SET WINDOWED MODE
00001036  4E4F                     145              TRAP    #15
00001038  323C FF00                146              MOVE.W  #$FF00,D1               ; CLEAR VISIBLE BUFFER
0000103C  103C 000B                147              MOVE.B  #11,D0
00001040  4E4F                     148              TRAP    #15
00001042  123C 0011                149              MOVE.B  #17,D1                  ; ENABLE DOUBLE BUFFER
00001046  103C 005C                150              MOVE.B  #92,D0
0000104A  4E4F                     151              TRAP    #15
0000104C  323C FF00                152              MOVE.W  #$FF00,D1               ; CLEAR HIDDEN BUFFER
00001050  103C 000B                153              MOVE.B  #11,D0
00001054  4E4F                     154              TRAP    #15
00001056  21FC 0000108C 0064       155              MOVE.L  #SCRISR,($60+SCRIRQ*4)  ; SET EXCEPTION VECTOR
0000105E  123C 0005                156              MOVE.B  #5,D1                   ; ENABLE EXCEPTION PROCESSING
00001062  103C 0020                157              MOVE.B  #32,D0
00001066  4E4F                     158              TRAP    #15
00001068  143C 0081                159              MOVE.B  #%10000000|SCRIRQ,D2    ; ENABLE AUTO-IRQ
0000106C  163C 0014                160              MOVE.B  #SCRTIM,D3
00001070  123C 0006                161              MOVE.B  #6,D1
00001074  103C 0020                162              MOVE.B  #32,D0
00001078  4E4F                     163              TRAP    #15
0000107A  4239 00001E8E            164              CLR.B   (SCRINTCT)              ; PREPARE INTERRUPT FLAG
00001080  4239 00001E8F            165              CLR.B   (SCRCYCCT)              ; PREPARE CYCLE COUNTER
00001086  027C F8FF                166              ANDI.W  #$F8FF,SR               ; ENABLE INTS
0000108A  4E75                     167              RTS
0000108C                           168  
0000108C                           169  ; -----------------------------------------------------------------------------
0000108C                           170  SCRISR
0000108C                           171  ; SCREEN TIMER ISR. INCREASES THE INTERRUPT COUNTER AND UPDATES DOUBLE BUFFER.
0000108C                           172  ; INPUT    - NONE
0000108C                           173  ; OUTPUT   - NONE
0000108C                           174  ; MODIFIES - NONE
0000108C                           175  ; -----------------------------------------------------------------------------
0000108C  5239 00001E8E            176              ADDQ.B  #1,(SCRINTCT)           ; UPDATE INT FLAG/COUNTER
00001092  5239 00001E8F            177              ADDQ.B  #1,(SCRCYCCT)           ; UPDATE CYCLE COUNTER
00001098  4E73                     178              RTE
0000109A                           179  
0000109A                           180  ; -----------------------------------------------------------------------------
0000109A                           181  SCRUPD
0000109A                           182  ; TRAP SERVICE ROUTINE IN CHARGE OF VISUALIZING CURRENT FRAME AND CLEARING
0000109A                           183  ; BUFFER FOR THE NEXT ONE.
0000109A                           184  ; INPUT    - NONE
0000109A                           185  ; OUTPUT   - NONE
0000109A                           186  ; MODIFIES - NONE
0000109A                           187  ; -----------------------------------------------------------------------------
0000109A  48A7 C000                188              MOVEM.W D0-D1,-(A7)
0000109E  103C 005E                189              MOVE.B  #94,D0                  ; UPDATE DOUBLE BUFFER
000010A2  4E4F                     190              TRAP    #15
000010A4  323C FF00                191              MOVE.W  #$FF00,D1               ; CLEAR HIDDEN BUFFER
000010A8  103C 000B                192              MOVE.B  #11,D0
000010AC  4E4F                     193              TRAP    #15
000010AE  4C9F 0003                194              MOVEM.W (A7)+,D0-D1
000010B2  4E73                     195              RTE
000010B4                           196  
000010B4                           197  ; =============================================================================
000010B4                           198  ; KEYBOARD MANAGEMENT (SYSTEM CODE)
000010B4                           199  ; =============================================================================
000010B4                           200  
000010B4                           201  ; -----------------------------------------------------------------------------
000010B4                           202  KBDINIT
000010B4                           203  ; INITIALIZES THE SYSTEM VARIABLES KBDSYS AND KBDVAL
000010B4                           204  ; INPUT    - NONE
000010B4                           205  ; OUTPUT   - NONE
000010B4                           206  ; MODIFIES - NONE
000010B4                           207  ; -----------------------------------------------------------------------------
000010B4  4239 00001E8C            208              CLR.B   (KBDVAL)                ; INIT VARS
000010BA  4239 00001E8D            209              CLR.B   (KBDEDGE)
000010C0  21FC 000010CA 0080       210              MOVE.L  #KBDREAD,($80+KBDTRAP*4) ; INSTALL
000010C8  4E75                     211              RTS
000010CA                           212  
000010CA                           213  ; -----------------------------------------------------------------------------
000010CA                           214  KBDREAD
000010CA                           215  ; TRAP SERVICE ROUTINE.
000010CA                           216  ; UPDATES THE SYSTEM VARIABLES KBDEDGE AND KBDVAL ACCORDING TO THE BITFIELD
000010CA                           217  ; DESCRIBED IN SYSCONST. KBDVAL HOLDS THE CURRENT VALUES AND KBDEFGE HOLDS
000010CA                           218  ; RISING EDGES FROM PREVIOUS CALL TO THE CURRENT ONE.
000010CA                           219  ; INPUT    - NONE
000010CA                           220  ; OUTPUT   - (KBDVAL) AND (KBDEDGE)
000010CA                           221  ; MODIFIES - NONE
000010CA                           222  ; -----------------------------------------------------------------------------
000010CA  48E7 F000                223              MOVEM.L D0-D3,-(A7)
000010CE  103C 0013                224              MOVE.B  #19,D0
000010D2  223C 50104D20            225              MOVE.L  #KBDPAUSE<<24+KBDFIRE3<<16+KBDFIRE2<<8+KBDFIRE1,D1
000010D8  4E4F                     226              TRAP    #15
000010DA  6100 002A                227              BSR     .STORE                  ; STORE FIRE1,FIRE2,FIRE3 AND PAUSE
000010DE  223C 28272625            228              MOVE.L  #KBDDOWN<<24+KBDRIGHT<<16+KBDUP<<8+KBDLEFT,D1
000010E4  4E4F                     229              TRAP    #15
000010E6  6100 001E                230              BSR     .STORE                  ; STORE KEY UP,DOWN,LEFT AND RIGTH.
000010EA  1039 00001E8C            231              MOVE.B  (KBDVAL),D0             ; COMPUTE EDGE.
000010F0  4600                     232              NOT.B   D0                      ; EDGE=NOT(PREVIOUS) AND CURRENT.
000010F2  C002                     233              AND.B   D2,D0
000010F4  13C2 00001E8C            234              MOVE.B  D2,(KBDVAL)             ; STORE VALUES (PRESS AND EDGE)
000010FA  13C0 00001E8D            235              MOVE.B  D0,(KBDEDGE)
00001100  4CDF 000F                236              MOVEM.L (A7)+,D0-D3
00001104  4E73                     237              RTE
00001106                           238  
00001106  363C 0003                239  .STORE      MOVE.W  #3,D3                   ; TRANSLATES THE 8-BIT ENCODING
0000110A  E189                     240  .LOOP       LSL.L   #8,D1                   ; OF TRAP #15 TASK 19 INTO A 1-BIT
0000110C  E312                     241              ROXL.B  #1,D2                   ; PER KEYPRESS ENCODING
0000110E  51CB FFFA                242              DBRA.W  D3,.LOOP
00001112  4E75                     243              RTS
00001114                           244  
00001114                           245  ; =============================================================================
00001114                           246  ; DYNAMIC MEMORY MANAGEMENT (SYSTEM CODE)
00001114                           247  ; DYNAMIC MEMORY IS A SET OF DMMBNUM SLOTS OF DMMBSIZE BYTES EACH ONE.
00001114                           248  ; DMMBSIZE MUST BE POWER OF TWO. A SLOT HAS:
00001114                           249  ; - HEADER - 1 WORD. SPECIFIES THE OWNER (0 MEANS OWNED BY SYSTEM)
00001114                           250  ; - DATA   - DMMBSIZE - 2 BYTES. MAY CONTAIN VARS AND ANY KIND OF DATA RELATED
00001114                           251  ;            THE THE OWNER. IF OWNER==0, DATA IS MEANINGLESS.
00001114                           252  ; =============================================================================
00001114                           253  
00001114                           254  ; -----------------------------------------------------------------------------
00001114                           255  DMMINIT
00001114                           256  ; INITIALIZES THE DYNAMIC MEMORY TO ALL OWNED BY SYSTEM.
00001114                           257  ; INPUT    - NONE
00001114                           258  ; OUTPUT   - NONE
00001114                           259  ; MODIFIES - NONE
00001114                           260  ; -----------------------------------------------------------------------------
00001114  48E7 8080                261              MOVEM.L D0/A0,-(A7)
00001118  41F9 00001EC0            262              LEA     DMMDATA,A0
0000111E  303C 003F                263              MOVE.W  #DMMBNUM-1,D0
00001122  30BC 0000                264  .LOOP       MOVE.W  #DMMSYSID,(A0)
00001126  D1FC 00000040            265              ADD.L   #DMMBSIZE,A0
0000112C  51C8 FFF4                266              DBRA.W  D0,.LOOP
00001130  4CDF 0101                267              MOVEM.L (A7)+,D0/A0
00001134  4E75                     268              RTS
00001136                           269  
00001136                           270  ; -----------------------------------------------------------------------------
00001136                           271  DMMFIRST
00001136                           272  ; SEARCHES THE FIRST MEMORY SLOT NOT OWNED BY SYSTEM AND OUTPUTS A POINTER
00001136                           273  ; TO THE CORRESPONDING DATA (SLOT ADDRESS+2)
00001136                           274  ; INPUT    - NONE
00001136                           275  ; OUTPUT   - A0   : POINTER TO THE DATA OR 0 IF NOT FOUND
00001136                           276  ; MODIFIES - NONE (ASIDE OF OUTPUT)
00001136                           277  ; -----------------------------------------------------------------------------
00001136  41F9 00001EC0            278              LEA     DMMDATA,A0
0000113C  4A58                     279  DMMFRLOP    TST.W   (A0)+
0000113E  6600 0016                280              BNE     DMMFRFND
00001142  D1FC 0000003E            281              ADD.L   #DMMBSIZE-2,A0
00001148  B1FC 00002EBF            282  DMMFRCOM    CMP.L   #DMMDATA+DMMBSIZE*DMMBNUM-1,A0
0000114E  6DEC                     283              BLT     DMMFRLOP
00001150  207C 00000000            284              MOVE.L  #0,A0
00001156  4E75                     285  DMMFRFND    RTS
00001158                           286  
00001158                           287  ; -----------------------------------------------------------------------------
00001158                           288  DMMNEXT
00001158                           289  ; SEARCHES THE NEXT MEMORY SLOT NOT OWNED BY SYSTEM AND OUTPUTS A POINTER
00001158                           290  ; TO THE CORRESPONDING DATA (SLOT ADDRESS+2)
00001158                           291  ; INPUT    - A0   : POINTER WITHIN THE CURRENT SLOT
00001158                           292  ; OUTPUT   - A0   : POINTER TO THE DATA OR 0 IF NOT FOUND
00001158                           293  ; MODIFIES - NONE (ASIDE OF OUTPUT)
00001158                           294  ; -----------------------------------------------------------------------------
00001158  2F00                     295              MOVE.L  D0,-(A7)
0000115A  2008                     296              MOVE.L  A0,D0
0000115C  C0BC FFFFFFC0            297              AND.L   #-DMMBSIZE,D0           ; TAKE ADVANTAGE OF ALIGNMENT
00001162  0680 00000040            298              ADD.L   #DMMBSIZE,D0
00001168  2040                     299              MOVE.L  D0,A0
0000116A  201F                     300              MOVE.L  (A7)+,D0
0000116C  60DA                     301              BRA     DMMFRCOM
0000116E                           302  
0000116E                           303  ; -----------------------------------------------------------------------------
0000116E                           304  DMMFRSTO
0000116E                           305  ; SEARCHES THE FIRST MEMORY SLOT WITH THE SPECIFIED ID AND OUTPUTS A POINTER
0000116E                           306  ; TO THE CORRESPONDING DATA (SLOT ADDRESS+2)
0000116E                           307  ; INPUT    - D0.W : ID TO SEARCH
0000116E                           308  ; OUTPUT   - A0   : POINTER TO THE DATA OR 0 IF NOT FOUND
0000116E                           309  ; MODIFIES - NONE (ASIDE OF OUTPUT)
0000116E                           310  ; -----------------------------------------------------------------------------
0000116E  41F9 00001EC0            311              LEA     DMMDATA,A0
00001174  B058                     312  DMMFLOOP    CMP.W   (A0)+,D0
00001176  6700 0016                313              BEQ     DMMFFND
0000117A  D1FC 0000003E            314              ADD.L   #DMMBSIZE-2,A0
00001180  B1FC 00002EBF            315  DMMFCOM     CMP.L   #DMMDATA+DMMBSIZE*DMMBNUM-1,A0
00001186  6DEC                     316              BLT     DMMFLOOP
00001188  207C 00000000            317              MOVE.L  #0,A0
0000118E  4E75                     318  DMMFFND     RTS
00001190                           319  
00001190                           320  ; -----------------------------------------------------------------------------
00001190                           321  DMMNEXTO
00001190                           322  ; SEARCHES THE NEXT MEMORY SLOT WITH THE SPECIFIED ID AND OUTPUTS A POINTER
00001190                           323  ; TO THE CORRESPONDING DATA (SLOT ADDRESS+2)
00001190                           324  ; INPUT    - D0.W : ID TO SEARCH
00001190                           325  ;            A0   : POINTER WITHIN THE CURRENT SLOT
00001190                           326  ; OUTPUT   - A0   : POINTER TO THE DATA OR 0 IF NOT FOUND
00001190                           327  ; MODIFIES - NONE (ASIDE OF OUTPUT)
00001190                           328  ; -----------------------------------------------------------------------------
00001190  2F00                     329              MOVE.L  D0,-(A7)
00001192  2008                     330              MOVE.L  A0,D0
00001194  C0BC FFFFFFC0            331              AND.L   #-DMMBSIZE,D0           ; TAKE ADVANTAGE OF ALIGNMENT
0000119A  0680 00000040            332              ADD.L   #DMMBSIZE,D0
000011A0  2040                     333              MOVE.L  D0,A0
000011A2  201F                     334              MOVE.L  (A7)+,D0
000011A4  60DA                     335              BRA     DMMFCOM
000011A6                           336  
000011A6                           337  ; -----------------------------------------------------------------------------
000011A6                           338  DMMALLOC
000011A6                           339  ; SEARCHES THE FIRST FREE (SYS OWNED) SLOT, ASSIGNS TO THE SPECIFIED OWNER
000011A6                           340  ; AND RETURNS A POINTER TO THE CORRESPONDING DATA (SLOT ADDRESS + 2)
000011A6                           341  ; INPUT    - D0.W : ID TO ASSIGN
000011A6                           342  ; OUTPUT   - A0   : POINTER TO THE DATA OR 0 IF NOT FREE SPACE
000011A6                           343  ; MODIFIES - NONE (ASIDE OF OUTPUT)
000011A6                           344  ; -----------------------------------------------------------------------------
000011A6  3F00                     345              MOVE.W  D0,-(A7)
000011A8  4240                     346              CLR.W   D0
000011AA  4EB8 116E                347              JSR     DMMFRSTO
000011AE  301F                     348              MOVE.W  (A7)+,D0
000011B0  B1FC 00000000            349              CMP.L   #0,A0
000011B6  6700 0006                350              BEQ     .END
000011BA  3140 FFFE                351              MOVE.W  D0,-2(A0)
000011BE  4E75                     352  .END        RTS
000011C0                           353  
000011C0                           354  ; -----------------------------------------------------------------------------
000011C0                           355  DMMFREE
000011C0                           356  ; FREES THE SLOT TO WHICH THE PROVIDED POINTER BELONGS BY SETTING ITS OWNED TO
000011C0                           357  ; SYSTEM (0)
000011C0                           358  ; INPUT    - A0   : POINTER BELONGING TO THE SLOT TO FREE
000011C0                           359  ; OUTPUT   - NONE
000011C0                           360  ; MODIFIES - NONE
000011C0                           361  ; -----------------------------------------------------------------------------
000011C0  48E7 8080                362              MOVEM.L D0/A0,-(A7)
000011C4  2008                     363              MOVE.L  A0,D0
000011C6  C0BC FFFFFFC0            364              AND.L   #-DMMBSIZE,D0           ; TAKE ADVANTAGE OF ALIGNMENT
000011CC  2040                     365              MOVE.L  D0,A0
000011CE  4250                     366              CLR.W   (A0)
000011D0  4CDF 0101                367              MOVEM.L (A7)+,D0/A0
000011D4  4E75                     368              RTS
000011D4  4E75                     369  -------------------- end include --------------------
000011D6                           370              INCLUDE "CONST.X68"             ; GAME CONSTANTS
000011D6                           371  ; =============================================================================
000011D6                           372  ; TITLE    : PAD MANAGEMENT
000011D6                           373  ; AUTHOR   : FAUSTI RODRIGUEZ
000011D6                           374  ; COMMENTS :
000011D6                           375  ; HISTORY  :
000011D6                           376  ; =============================================================================
000011D6                           377  
000011D6                           378  ; --- PAD RELATED CONSTANTS ---------------------------------------------------
000011D6                           379  
000011D6  =00000040                380  PADWIDTH    EQU     64                      ; PAD WIDTH
000011D6  =00000030                381  PADHEIGH    EQU     48                      ; PAD HEIGHT
000011D6  =00FF0000                382  PADPCOL     EQU     $00FF0000               ; PEN COLOR
000011D6  =00770000                383  PADFCOL     EQU     $00770000               ; FILL COLOR
000011D6  =00000008                384  PADSPEED    EQU     8                       ; PAD SPEED
000011D6                           385  
000011D6                           386  ; --- BALL RELATED CONSTANTS --------------------------------------------------
000011D6                           387  
000011D6  =00000001                388  BALID       EQU     1                       ; BALL IDENTIFIER
000011D6  =0000000F                389  BALRAD      EQU     15                      ; BALL RADIUS
000011D6  =00000000                390  BASPCOL     EQU     $00000000               ; PEN SHADOW COLOR
000011D6  =00050C66                391  BASFCOL     EQU     $00050C66               ; FILL SHADOW COLOR
000011D6  =000000FF                392  BALMCOL     EQU     $000000FF               ; MAIN BALL COLOR
000011D6  =00B9B6FA                393  BALBCOL     EQU     $00B9B6FA               ; FILL & PEN BRIGHT COLOR
000011D6  =00000002                394  BALSPEED    EQU     2                       ; BALL REFERENCE SPEED
000011D6                           395  ; --- SFX RELATED CONSTANTS ---------------------------------------------------
000011D6= 6D 61 69 6E 2E 77 ...    396  SFXMAIN     DC.B    'main.wav',0
000011E0                           397              DS.W    0
000011E0                           398  ; --- MENU RELATED CONSTANTS --------------------------------------------------
000011E0  =00000118                399  MENWIDTH    EQU     280
000011E0  =00000118                400  MENHEIGH    EQU     280
000011E0  =00FFFFFF                401  MENPCOL     EQU     $00FFFFFF               ; PEN COLOR
000011E0  =00000000                402  MENFCOL     EQU     $00000000               ; FILL COLOR
000011E0                           403  ; --- TITLE RELATED CONSTANTS -------------------------------------------------
000011E0  =00263466                404  TITFCOL     EQU     $00263466               ; FILL COLOR
000011E0                           405  ; --- ARROW RELATED CONSTANTS -------------------------------------------------
000011E0  =00003724                406  ARINIPOS    EQU     $3724                   ; ARROW INITIAL POSITION
000011E0  =00003730                407  ARFINPOS    EQU     $3730                   ; ARROW FINAL POSITION
000011E0                           408  
000011E0                           409  
000011E0                           410  
000011E0                           411  
000011E0                           412  
000011E0                           413  
000011E0                           414  
000011E0                           415  
000011E0                           416  -------------------- end include --------------------
000011E0                           417              INCLUDE "PAD.X68"               ; PAD CODE
000011E0                           418  ; =============================================================================
000011E0                           419  ; TITLE    : PAD MANAGEMENT
000011E0                           420  ; AUTHOR   : FAUSTI RODRIGUEZ
000011E0                           421  ; COMMENTS :
000011E0                           422  ; HISTORY  : 
000011E0                           423  ; =============================================================================
000011E0                           424  
000011E0                           425  ; -----------------------------------------------------------------------------
000011E0                           426  PADINIT
000011E0                           427  ; INITIALIZE THE PAD
000011E0                           428  ; INPUT    - NONE
000011E0                           429  ; OUTPUT   - NONE
000011E0                           430  ; MODIFIES - NONE
000011E0                           431  ; -----------------------------------------------------------------------------
000011E0  33FC 01F4 00002EC0       432              MOVE.W  #SCRWIDTH/2,(PADX)
000011E8  33FC 01F4 00002EC2       433              MOVE.W  #SCRHEIGH/2,(PADY)
000011F0  4E75                     434              RTS
000011F2                           435  ; -----------------------------------------------------------------------------
000011F2                           436  PADUPDKB
000011F2                           437  ; UPDATE THE PAD WITH KEYBOARD
000011F2                           438  ; INPUT    - NONE
000011F2                           439  ; OUTPUT   - NONE
000011F2                           440  ; MODIFIES - NONE
000011F2                           441  ; -----------------------------------------------------------------------------
000011F2  0839 0000 00001E8C       442              BTST.B  #KBDBITLF,(KBDVAL)      ; LEFT KEY PRESSED?
000011FA  6600 0028                443              BNE     .MOVEL                  ; YES: MOVE LEFT
000011FE  0839 0002 00001E8C       444              BTST.B  #KBDBITRT,(KBDVAL)      ; RIGHT KEY PRESSED?
00001206  6600 0032                445              BNE     .MOVER                  ; YES: MOVE LEFT
0000120A  0839 0001 00001E8C       446              BTST.B  #KBDBITUP,(KBDVAL)      ; UP KEY PRESSED?
00001212  6600 003C                447              BNE     .MOVEU                  ; YES: MOVE UP
00001216  0839 0003 00001E8C       448              BTST.B  #KBDBITDN, (KBDVAL)     ; DOWN KEY PRESSED?
0000121E  6600 0046                449              BNE     .MOVED                  ; YES: MOVE DOWN 
00001222  4E75                     450              RTS     
00001224                           451              
00001224  0C79 0020 00002EC0       452  .MOVEL      CMP.W   #PADWIDTH/2,(PADX)      ; BELOW LEFT BOUNDARY?
0000122C  6E00 0004                453              BGT     .DOL                    ; NO: MOVE
00001230  4E75                     454              RTS                             ; YES: END
00001232  5179 00002EC0            455  .DOL        SUB.W   #PADSPEED,(PADX)        ; MOVE LEFT
00001238  4E75                     456              RTS
0000123A  0C79 03C7 00002EC0       457  .MOVER      CMP.W   #SCRWIDTH-1-PADWIDTH/2,(PADX) ; HIGHER THAN RIGHT BOUNDARY?
00001242  6D00 0004                458              BLT     .DOR                    ; NO: MOVE
00001246  4E75                     459              RTS                             ; YES: END
00001248  5079 00002EC0            460  .DOR        ADD.W   #PADSPEED,(PADX)        ; MOVE RIGHT
0000124E  4E75                     461              RTS
00001250  0C79 0018 00002EC2       462  .MOVEU      CMP.W   #PADHEIGH/2,(PADY)      ; BELOW UP BOUNDARY?
00001258  6E00 0004                463              BGT     .DOU                    ; NO: MOVE
0000125C  4E75                     464              RTS     ; YES: END
0000125E  5179 00002EC2            465  .DOU        SUB.W   #PADSPEED,(PADY)        ; MOVE UP
00001264  4E75                     466              RTS     
00001266  0C79 03CF 00002EC2       467  .MOVED      CMP.W   #SCRHEIGH-1-PADHEIGH/2,(PADY) ; HIGHER THAN DOWN BOUNDARY?                      
0000126E  6D00 0004                468              BLT     .DOD                    ; NO: MOVE
00001272  4E75                     469              RTS     ; YES: END
00001274  5079 00002EC2            470  .DOD        ADD.W   #PADSPEED,(PADY)        ; MOVE DOWN
0000127A  4E75                     471              RTS     
0000127C                           472  ; -----------------------------------------------------------------------------
0000127C                           473  PADUPDMS
0000127C                           474  ; UPDATE THE PAD WITH MOUSE
0000127C                           475  ; INPUT    - NONE
0000127C                           476  ; OUTPUT   - NONE
0000127C                           477  ; MODIFIES - NONE
0000127C                           478  ; -----------------------------------------------------------------------------
0000127C  48E7 E000                479              MOVEM.L D0-D2,-(A7)
00001280  4201                     480              CLR.B   D1
00001282  303C 003D                481              MOVE.W  #61,D0
00001286  4E4F                     482              TRAP    #15
00001288  33C1 00002EC0            483              MOVE.W  D1,(PADX)
0000128E  E089                     484              LSR.L   #8,D1
00001290  E089                     485              LSR.L   #8,D1
00001292  33C1 00002EC2            486              MOVE.W  D1,(PADY)               
00001298                           487  .END        
00001298  4CDF 0007                488              MOVEM.L (A7)+,D0-D2
0000129C  4E75                     489              RTS
0000129E                           490  ; -----------------------------------------------------------------------------
0000129E                           491  PADPLOT
0000129E                           492  ; PLOT THE PAD
0000129E                           493  ; INPUT    - NONE
0000129E                           494  ; OUTPUT   - NONE
0000129E                           495  ; MODIFIES - NONE
0000129E                           496  ; -----------------------------------------------------------------------------
0000129E  48E7 F800                497              MOVEM.L D0-D4,-(A7)             ; STACK REGISTER
000012A2  103C 0050                498              MOVE.B  #80,D0                  ; SET PEN COLOR TASK
000012A6  223C 00FF0000            499              MOVE.L  #PADPCOL,D1             ; PEN COLOR
000012AC  4E4F                     500              TRAP    #15                     ; SET PEN COLOR
000012AE  5200                     501              ADDQ.B  #1,D0                   ; SET FILL COLOR TASK
000012B0  223C 00770000            502              MOVE.L  #PADFCOL,D1             ; FILL COLOR
000012B6  4E4F                     503              TRAP    #15                     ; SET FILL COLOR
000012B8                           504              
000012B8  3239 00002EC0            505              MOVE.W  (PADX),D1               ; D1:=XCENTER
000012BE  3439 00002EC2            506              MOVE.W  (PADY),D2                ; D2:=YCENTER
000012C4  3601                     507              MOVE.W  D1,D3                   ; D3:=XCENTER
000012C6  3802                     508              MOVE.W  D2,D4                   ; D4:=YCENTER
000012C8  0441 0020                509              SUB.W   #PADWIDTH/2,D1          ; D1:=XLEFT
000012CC  0442 0018                510              SUB.W   #PADHEIGH/2,D2          ; D2:=YTOP
000012D0  0643 0020                511              ADD.W   #PADWIDTH/2,D3          ; D3:=XRIGHT
000012D4  0644 0018                512              ADD.W   #PADHEIGH/2,D4          ; D4:=YBOTTOM
000012D8  103C 0058                513              MOVE.B  #88,D0
000012DC  4E4F                     514              TRAP    #15                     ; DRAW RECTANGLE
000012DE  4CDF 001F                515              MOVEM.L (A7)+,D0-D4             ; RESTORE REGISTERS
000012E2  4E75                     516              RTS
000012E4                           517  
000012E4                           518  
000012E4                           519  
000012E4                           520  -------------------- end include --------------------
000012E4                           521              INCLUDE "AGENTLST.X68"          ; AGENT LIST MANAGEMENT
000012E4                           522  ; =============================================================================
000012E4                           523  ; TITLE    : AGENT LIST
000012E4                           524  ; AUTHOR   : ANTONI BURGUERA
000012E4                           525  ; COMMENTS : EACH AGENT HAS A DATA BLOCK FROM DMM AS FOLLOWS:
000012E4                           526  ;              +0 - LONG : UPDATE SUBROUTINE POINTER
000012E4                           527  ;              +4 - LONG : PLOT SUBROUTINE POINTER
000012E4                           528  ;              +8:END    : DATA (AGENT SPECIFIC)
000012E4                           529  ; HISTORY  : XX-XXX-201X - CREATION
000012E4                           530  ;            11-OCT-2020 - MINOR CHANGES
000012E4                           531  ; =============================================================================
000012E4                           532  
000012E4                           533  ; -----------------------------------------------------------------------------
000012E4                           534  AGLADD
000012E4                           535  ; CREATES A NEW AGENT
000012E4                           536  ; INPUT    - A1 - POINTER TO AGENT INIT FUNCTION
000012E4                           537  ;            A2 - POINTER TO AGENT UPDATE FUNCTION
000012E4                           538  ;            A3 - POINTER TO AGENT PLOT FUNCTION
000012E4                           539  ;            D0 - AGENT TYPE (USED AS OWNED BY DMM)
000012E4                           540  ;            D1 - AGENT INITIALIZATION PARAMETER 1
000012E4                           541  ;            D2 - AGENT INITIALIZATION PARAMETER 2
000012E4                           542  ;            D3 - AGENT INITIALIZATION PARAMETER 3
000012E4                           543  ; OUTPUT   - NONE
000012E4                           544  ; MODIFIES - NONE
000012E4                           545  ; -----------------------------------------------------------------------------
000012E4  2F08                     546              MOVE.L  A0,-(A7)
000012E6  4EB8 11A6                547              JSR     DMMALLOC
000012EA  B1FC 00000000            548              CMP.L   #0,A0
000012F0  6700 0008                549              BEQ     .END
000012F4  20CA                     550              MOVE.L  A2,(A0)+
000012F6  20CB                     551              MOVE.L  A3,(A0)+
000012F8  4E91                     552              JSR     (A1)
000012FA  205F                     553  .END        MOVE.L  (A7)+,A0
000012FC  4E75                     554              RTS
000012FE                           555  
000012FE                           556  ; -----------------------------------------------------------------------------
000012FE                           557  AGLUPD
000012FE                           558  ; UPDATES THE AGENT LIST. PRIOR TO CALLING THE UPDATE FUNCTIONS, A0 IS SET
000012FE                           559  ; TO THE DATA BLOCK OF THE CORRESPONDING SLOT.
000012FE                           560  ; INPUT    - NONE
000012FE                           561  ; OUTPUT   - NONE
000012FE                           562  ; MODIFIES - NONE
000012FE                           563  ; -----------------------------------------------------------------------------
000012FE  48E7 00C0                564              MOVEM.L A0-A1,-(A7)
00001302  4EB8 1136                565              JSR     DMMFIRST
00001306  B1FC 00000000            566  .LOOP       CMP.L   #0,A0
0000130C  6700 000E                567              BEQ     .END
00001310  2250                     568              MOVE.L  (A0),A1
00001312  5088                     569              ADD.L   #8,A0
00001314  4E91                     570              JSR     (A1)
00001316  4EB8 1158                571              JSR     DMMNEXT
0000131A  60EA                     572              BRA     .LOOP
0000131C  4CDF 0300                573  .END        MOVEM.L (A7)+,A0-A1
00001320  4E75                     574              RTS
00001322                           575  
00001322                           576  ; -----------------------------------------------------------------------------
00001322                           577  AGLPLOT
00001322                           578  ; PLOTS THE AGENT LIST. PRIOR TO CALLING THE UPDATE FUNCTIONS, A0 IS SET
00001322                           579  ; TO THE DATA BLOCK OF THE CORRESPONDING SLOT.
00001322                           580  ; INPUT    - NONE
00001322                           581  ; OUTPUT   - NONE
00001322                           582  ; MODIFIES - NONE
00001322                           583  ; -----------------------------------------------------------------------------
00001322  48E7 00C0                584              MOVEM.L A0-A1,-(A7)
00001326  4EB8 1136                585              JSR     DMMFIRST
0000132A  B1FC 00000000            586  .LOOP       CMP.L   #0,A0
00001330  6700 0010                587              BEQ     .END
00001334  2268 0004                588              MOVE.L  4(A0),A1
00001338  5088                     589              ADD.L   #8,A0
0000133A  4E91                     590              JSR     (A1)
0000133C  4EB8 1158                591              JSR     DMMNEXT
00001340  60E8                     592              BRA     .LOOP
00001342  4CDF 0300                593  .END        MOVEM.L (A7)+,A0-A1
00001346  4E75                     594              RTS
00001348                           595  
00001348                           596  ; -----------------------------------------------------------------------------
00001348  =000011C0                597  AGLKILL     EQU     DMMFREE
00001348                           598  ; KILLS THE AGENT BY RELEASING ITS MEMORY
00001348                           599  ; INPUT    - A0 POINTER WITHIN THE AGENT MEMORY
00001348                           600  ; OUTPUT   - NONE
00001348                           601  ; MODIFIES - NONE
00001348                           602  ; NOTE     - IT IS JUST A WRAPPER FOR DMMFREE
00001348                           603  ; -----------------------------------------------------------------------------
00001348                           604  -------------------- end include --------------------
00001348                           605              INCLUDE "BALL.X68"              ; BALL MANAGEMENT       
00001348                           606  ; =============================================================================
00001348                           607  ; TITLE    : BALL MANAGEMENT (AGENT)
00001348                           608  ; AUTHOR   : ANTONI BURGUERA
00001348                           609  ; COMMENTS : BALL AGENT LOCAL VARIABLES:
00001348                           610  ;            (A0) : XCENTER - WORD
00001348                           611  ;           2(A0) : YCENTER - WORD
00001348                           612  ;           4(A0) : ZCENTER - WORD
00001348                           613  ;           6(A0) : XSPEED  - WORD
00001348                           614  ;           8(A0) : YSPEED  - WORD
00001348                           615  ;           A(A0) : ZSPEED  - WORD
00001348                           616  ; HISTORY  : 12-10-2020 - CREATION
00001348                           617  ; =============================================================================
00001348                           618  
00001348                           619  ; -----------------------------------------------------------------------------
00001348                           620  BALINIT
00001348                           621  ; INITIALIZE A BALL
00001348                           622  ; INPUT    - D1.W = XCENTER'S BALL POSITION
00001348                           623  ;          - D2.W = YCENTER'S BALL POSITION
00001348                           624  ; OUTPUT   - NONE 
00001348                           625  ; MODIFIES - NONE
00001348                           626  ; -----------------------------------------------------------------------------
00001348  48E7 6040                627              MOVEM.L D1-D2/A1,-(A7)          ; STACK REGISTERS
0000134C  2F07                     628              MOVE.L  D7,-(A7)
0000134E  3081                     629              MOVE.W  D1,(A0)                 ; XBALL=D1
00001350  3142 0002                630              MOVE.W  D2,2(A0)                ; YBALL=D2
00001354  43F9 0000137E            631              LEA     .SPEEDS,A1
0000135A  4247                     632              CLR     D7
0000135C  DE43                     633              ADD.W   D3,D7
0000135E  DE46                     634              ADD.W   D6,D7
00001360  0807 0000                635              BTST    #0,D7
00001364  6700 000C                636              BEQ     .DOWN
00001368  2169 0004 0006           637              MOVE.L  4(A1),6(A0)
0000136E  6000 0006                638              BRA     .END
00001372  2151 0006                639  .DOWN       MOVE.L  (A1),6(A0)              ; INIT SPEEDS
00001376  2E1F                     640  .END        MOVE.L  (A7)+,D7
00001378  4CDF 0206                641              MOVEM.L (A7)+,D1-D2/A1
0000137C  4E75                     642              RTS
0000137E= FFFE 0002                643  .SPEEDS     DC.W    -BALSPEED,BALSPEED
00001382= 0002 FFFE                644              DC.W    BALSPEED,-BALSPEED
00001386= 0000 0000                645              DC.W    0,0
0000138A                           646  ; -----------------------------------------------------------------------------
0000138A                           647  BALUPD
0000138A                           648  ; UPDATE A BALL
0000138A                           649  ; INPUT    - NONE
0000138A                           650  ; OUTPUT   - NONE 
0000138A                           651  ; MODIFIES - NONE
0000138A                           652  ; -----------------------------------------------------------------------------
0000138A  3F00                     653              MOVE.W  D0,-(A7)                ; STACK REGISTERS
0000138C  3010                     654              MOVE.W  (A0),D0                 ;
0000138E  D068 0006                655              ADD.W   6(A0),D0                ;
00001392  3080                     656              MOVE.W  D0,(A0)                 ; X:=X+VX
00001394  3028 0002                657              MOVE.W  2(A0),D0                
00001398  D068 0008                658              ADD.W   8(A0),D0
0000139C  3140 0002                659              MOVE.W  D0,2(A0)                ; Y:=Y+VY
000013A0                           660              
000013A0  0C50 0000                661              CMP.W   #0,(A0)                 ;IF BALL EXITS SCREEN ON THE LEFT
000013A4  6B00 0032                662              BMI     .TPRIGHT                ;SIDE, TELEPORT BALL TO RIGHT SIDE.
000013A8  0C50 03E8                663              CMP.W   #SCRWIDTH,(A0)          ;IF BALL EXITS SCREEN ON THE RIGHT
000013AC  6E00 0030                664              BGT     .TPLEFT                 ;SIDE, TELEPORT BALL TO LEFT SIDE.
000013B0  0C68 03E8 0002           665  .ENDR       CMP.W   #SCRHEIGH,2(A0)         ;IF BALL EXITS SCREEN ON THE
000013B6  6E00 0010                666              BGT     .TPTOP                  ;BOT SIDE, TELEPORT BALL TO TOP SIDE.
000013BA  0C68 0000 0002           667              CMP.W   #0,2(A0)                ;IF BALL EXITS SCREEN ON THE BOTTOM
000013C0  6B00 000E                668              BMI     .TPBOT                  ;SIDE, TELEPORT BALL TO BOT SIDE.
000013C4  301F                     669  .ENDT       MOVE.W  (A7)+,D0
000013C6  4E75                     670              RTS
000013C8                           671              
000013C8  317C 0000 0002           672  .TPTOP      MOVE.W  #0,2(A0)
000013CE  60F4                     673              BRA     .ENDT
000013D0  317C 03E8 0002           674  .TPBOT      MOVE.   #SCRHEIGH,2(A0)
000013D6  60EC                     675              BRA     .ENDT
000013D8  30BC 03E8                676  .TPRIGHT    MOVE.W  #SCRWIDTH,(A0)
000013DC  60D2                     677              BRA     .ENDR
000013DE  30BC 0000                678  .TPLEFT     MOVE.W  #0,(A0)
000013E2  60CC                     679              BRA     .ENDR
000013E4                           680  ; -----------------------------------------------------------------------------
000013E4                           681  BALPLOT
000013E4                           682  ; PLOT A BALL
000013E4                           683  ; INPUT    - NONE
000013E4                           684  ; OUTPUT   - NONE 
000013E4                           685  ; MODIFIES - NONE
000013E4                           686  ; -----------------------------------------------------------------------------
000013E4  48E7 F800                687              MOVEM.L D0-D4,-(A7)             ; STACK REGISTERS
000013E8  103C 0050                688              MOVE.B  #80,D0                  ; SET PEN COLOR TASK
000013EC  7200                     689              MOVE.L  #BASPCOL,D1             ; PEN SHADOW COLOR
000013EE  4E4F                     690              TRAP    #15                     ; SET PEN COLOR
000013F0  5200                     691              ADDQ.B  #1,D0                   ; SET FILL COLOR TASK
000013F2  223C 00050C66            692              MOVE.L  #BASFCOL,D1             ; FILL SHADOW COLOR
000013F8  4E4F                     693              TRAP    #15                     ; SET FILL COLOR
000013FA                           694              
000013FA  3210                     695              MOVE.W  (A0),D1                 ; D1:=XCENTER
000013FC  3428 0002                696              MOVE.W  2(A0),D2                ; D2:=YCENTER
00001400  3601                     697              MOVE.W  D1,D3                   ; D3:=XCENTER
00001402  3802                     698              MOVE.W  D2,D4                   ; D4:=YCENTER
00001404                           699              
00001404  0441 000F                700              SUB.W   #BALRAD,D1              ; D1:=XLEFT
00001408  0442 000F                701              SUB.W   #BALRAD,D2              ; D2:=YTOP
0000140C  0643 000F                702              ADD.W   #BALRAD,D3              ; D3:=XRIGTH
00001410  0644 000F                703              ADD.W   #BALRAD,D4              ; D4:=YBOTTOM
00001414  103C 0058                704              MOVE.B  #88,D0                  ; DRAW ELLIPSE/CIRCLE TASK
00001418  4E4F                     705              TRAP    #15                     ; DO IT
0000141A                           706              
0000141A  223C 000000FF            707              MOVE.L  #BALMCOL,D1             ;SET BALL'S MAIN COLOR
00001420  103C 0050                708              MOVE.B  #80,D0
00001424  4E4F                     709              TRAP    #15
00001426  103C 0051                710              MOVE.B  #81,D0
0000142A  4E4F                     711              TRAP    #15
0000142C                           712  
0000142C  3210                     713              MOVE.W  (A0),D1                 ; D1:=XCENTER            
0000142E  0441 000E                714              SUB.W   #BALRAD-1,D1            ; D1:=XLEFT
00001432  5342                     715              SUB.W   #1,D2                   ; D2:=YTOP
00001434  5343                     716              SUB.W   #1,D3                   ; D3:=XRIGTH
00001436  5D44                     717              SUB.W   #6,D4                   ; D4:=YBOTTOM
00001438  103C 0058                718              MOVE.B  #88,D0                  ; DRAW ELLIPSE/CIRCLE TASK
0000143C  4E4F                     719              TRAP    #15                     ; DO IT
0000143E                           720              
0000143E  223C 00B9B6FA            721              MOVE.L  #BALBCOL,D1             ;SET BALL'S BRIGHT COLOR
00001444  103C 0050                722              MOVE.B  #80,D0
00001448  4E4F                     723              TRAP    #15
0000144A  103C 0051                724              MOVE.B  #81,D0
0000144E  4E4F                     725              TRAP    #15
00001450                           726              
00001450  3210                     727              MOVE.W  (A0),D1                 ; D1:=XCENTER            
00001452  0441 000A                728              SUB.W   #BALRAD-5,D1            ; D1:=XLEFT
00001456  5442                     729              ADD.W   #2,D2                   ; D2:=YTOP
00001458  5B43                     730              SUB.W   #5,D3                   ; D3:=XRIGTH
0000145A  0444 0011                731              SUB.W   #17,D4                   ; D4:=YBOTTOM
0000145E  103C 0058                732              MOVE.B  #88,D0                  ; DRAW ELLIPSE/CIRCLE TASK
00001462  4E4F                     733              TRAP    #15                     ; DO IT
00001464                           734  
00001464                           735  
00001464  4CDF 001F                736              MOVEM.L (A7)+,D0-D4
00001468  4E75                     737              RTS
0000146A                           738              
0000146A                           739  
0000146A                           740  
0000146A                           741            
0000146A                           742              
0000146A                           743  
0000146A                           744  
0000146A                           745  
0000146A                           746  
0000146A                           747  
0000146A                           748  
0000146A                           749  
0000146A                           750  
0000146A                           751  
0000146A                           752  
0000146A                           753  
0000146A                           754  
0000146A                           755  -------------------- end include --------------------
0000146A                           756              INCLUDE "SFX.X68"               ; SFX MANAGEMENT
0000146A                           757  ; =============================================================================
0000146A                           758  ; TITLE    : SFX SOUND MANAGEMENT
0000146A                           759  ; AUTHOR   : MARC ROMAN COLOM
0000146A                           760  ; HISTORY  :
0000146A                           761  ; =============================================================================
0000146A                           762  
0000146A                           763  SFXINIT     
0000146A  48E7 C040                764              MOVEM.L D0-D1/A1,-(A7)
0000146E  43F8 11D6                765              LEA     SFXMAIN,A1              ;PLACING FILENAME REFERENCE TO A1
00001472  123C 0000                766              MOVE.B  #0,D1                   ;PREPARING D1 FOR REFEER TO SOUND FILE
00001476  103C 0047                767              MOVE.B  #71,D0                  ;PREPARING D0 TO LOAD SOUND FILE
0000147A  4E4F                     768              TRAP    #15
0000147C  4CDF 0203                769              MOVEM.L (A7)+,D0-D1/A1
00001480  4E75                     770              RTS
00001482                           771  SFXPMAIN    
00001482  48E7 E000                772              MOVEM.L D0-D2,-(A7)
00001486  123C 0000                773              MOVE.B  #0,D1
0000148A  7401                     774              MOVE.L  #1,D2
0000148C  103C 004C                775              MOVE.B  #76,D0
00001490  4E4F                     776              TRAP    #15
00001492  4CDF 0007                777              MOVEM.L (A7)+,D0-D2
00001496  4E75                     778              RTS
00001498                           779  SFXSTOP     
00001498  48E7 E000                780              MOVEM.L D0-D2,-(A7)
0000149C  123C 0000                781              MOVE.B  #0,D1
000014A0  7401                     782              MOVE.L  #1,D2
000014A2  103C 004D                783              MOVE.B  #77,D0
000014A6  4E4F                     784              TRAP    #15
000014A8  4CDF 0007                785              MOVEM.L (A7)+,D0-D2
000014AC  4E75                     786              RTS
000014AC  4E75                     787  -------------------- end include --------------------
000014AE                           788              INCLUDE "TITLE.X68"
000014AE                           789  ; =============================================================================
000014AE                           790  ; TITLE    : TITLE MANAGEMENT
000014AE                           791  ; AUTHOR   : MARC ROMAN COLOM
000014AE                           792  ; HISTORY  :
000014AE                           793  ; =============================================================================
000014AE                           794  TITPLOT
000014AE  48E7 E0C0                795              MOVEM.L D0-D2/A0-A1,-(A7)
000014B2  223C 00263466            796              MOVE.L  #TITFCOL,D1
000014B8  103C 0051                797              MOVE.B  #81,D0
000014BC  4E4F                     798              TRAP    #15                    ;SET FILL COLOR OF TITLE
000014BE  323C 1304                799              MOVE.W  #$1304,D1
000014C2  41F9 000014EC            800              LEA     .STR0,A0
000014C8                           801  .LOOP
000014C8  103C 000B                802              MOVE.B  #11,D0
000014CC  4E4F                     803              TRAP    #15                     ;SET ROWS TO PRINT STRING
000014CE  2248                     804              MOVE.L  A0,A1                   ;POINTS TO STRING
000014D0  103C 000D                805              MOVE.B  #13,D0
000014D4  4E4F                     806              TRAP    #15
000014D6  D1FC 00000056            807              ADD.L   #86,A0                  ;TAKING CARE OF LENGTH PER LINE
000014DC  5241                     808              ADD.W   #1,D1
000014DE  B1FC 00001CA6            809              CMP.L   #.STRND,A0
000014E4  6FE2                     810              BLE     .LOOP
000014E6  4CDF 0307                811              MOVEM.L (A7)+,D0-D2/A0-A1
000014EA  4E75                     812              RTS     
000014EC= 20 20 5F 5F 5F 5F ...    813  .STR0       DC.B    '  ____    _   _   ____    _____   ____      ____       _      _       _       ____   ',0
00001542= 20 2F 20 5F 5F 5F ...    814              DC.B    ' / ___|  | | | | |  _ \  | ____| |  _ \    | __ )     / \    | |     | |     / ___|  ',0
00001598= 20 5C 5F 5F 5F 20 ...    815              DC.B    ' \___ \  | | | | | |_) | |  _|   | |_) |   |  _ \    / _ \   | |     | |     \___ \  ',0
000015EE= 20 20 5F 5F 5F 29 ...    816              DC.B    '  ___) | | |_| | |  __/  | |___  |  _ <    | |_) |  / ___ \  | |___  | |___   ___) | ',0
00001644= 20 7C 5F 5F 5F 5F ...    817              DC.B    ' |____/   \___/  |_|     |_____| |_| \_\   |____/  /_/   \_\ |_____| |_____| |____/  ',0
0000169A= 20 20 20 20 20 20 ...    818              DC.B    '                                                                                     ',0
000016F0= 20 20 20 20 20 20 ...    819              DC.B    '                                     ___    _____                                    ',0
00001746= 20 20 20 20 20 20 ...    820              DC.B    '                                    / _ \  |  ___|                                   ',0
0000179C= 20 20 20 20 20 20 ...    821              DC.B    '                                   | | | | | |_                                      ',0
000017F2= 20 20 20 20 20 20 ...    822              DC.B    '                                   | |_| | |  _|                                     ',0
00001848= 20 20 20 20 20 20 ...    823              DC.B    '                                    \___/  |_|                                       ',0
0000189E= 20 20 20 20 20 20 ...    824              DC.B    '                                                                                     ',0
000018F4= 20 20 20 20 20 20 ...    825              DC.B    '                 ____   _____   _   _   _____   ____    ___   ____                   ',0
0000194A= 20 20 20 20 20 20 ...    826              DC.B    '                / ___| | ____| | \ | | | ____| / ___|  |_ _| / ___|   _              ',0
000019A0= 20 20 20 20 20 20 ...    827              DC.B    '               | |  _  |  _|   |  \| | |  _|   \___ \   | |  \___ \  (_)             ',0
000019F6= 20 20 20 20 20 20 ...    828              DC.B    '               | |_| | | |___  | |\  | | |___   ___) |  | |   ___) |  _              ',0
00001A4C= 20 20 20 20 20 20 ...    829              DC.B    '                \____| |_____| |_| \_| |_____| |____/  |___| |____/  (_)             ',0
00001AA2= 20 20 20 20 20 20 ...    830              DC.B    '                                                                                     ',0
00001AF8= 20 20 5F 20 20 20 ...    831              DC.B    '  _          _      ____    _____     ____     ___    _   _   _   _    ____   _____  ',0
00001B4E= 20 7C 20 7C 20 20 ...    832              DC.B    ' | |        / \    / ___|  |_   _|   | __ )   / _ \  | | | | | \ | |  / ___| | ____| ',0
00001BA4= 20 7C 20 7C 20 20 ...    833              DC.B    ' | |       / _ \   \___ \    | |     |  _ \  | | | | | | | | |  \| | | |     |  _|   ',0
00001BFA= 20 7C 20 7C 5F 5F ...    834              DC.B    ' | |___   / ___ \   ___) |   | |     | |_) | | |_| | | |_| | | |\  | | |___  | |___  ',0
00001C50= 20 7C 5F 5F 5F 5F ...    835              DC.B    ' |_____| /_/   \_\ |____/    |_|     |____/   \___/   \___/  |_| \_|  \____| |_____| ',0
00001CA6= 20 20 20 20 20 20 ...    836  .STRND      DC.B    '                                                                                     ',0
00001CFC                           837              ;85 length per line: Font Standard / Width & Height type : FULL
00001CFC                           838  -------------------- end include --------------------
00001CFC                           839              INCLUDE "MENU.X68"
00001CFC                           840  MENPLOT     
00001CFC  48E7 F8C0                841              MOVEM.L D0-D4/A0-A1,-(A7)
00001D00  103C 0050                842              MOVE.B  #80,D0
00001D04  223C 00FFFFFF            843              MOVE.L  #MENPCOL,D1             ;SETTING RECTANGLE'S BORDER COLOR
00001D0A  4E4F                     844              TRAP    #15
00001D0C  103C 0051                845              MOVE.B  #81,D0
00001D10  7200                     846              MOVE.L  #MENFCOL,D1             ;SETTING RECTANGLE'S FILL COLOR
00001D12  4E4F                     847              TRAP    #15
00001D14  103C 0057                848              MOVE.B  #87,D0
00001D18  323C 01F4                849              MOVE.W  #SCRWIDTH/2,D1          ;
00001D1C  343C 01F4                850              MOVE.W  #SCRHEIGH/2,D2          ;
00001D20  3601                     851              MOVE.W  D1,D3                   ;
00001D22  3802                     852              MOVE.W  D2,D4                   ;
00001D24  0441 008C                853              SUB.W   #MENWIDTH/2,D1          ; FIXING WHERE TO PRINT THE RECTANGLE,
00001D28  0643 008C                854              ADD.W   #MENWIDTH/2,D3          ; RIGHT BELOW THE MIDDLE OF THE 
00001D2C  0644 0118                855              ADD.W   #MENHEIGH,D4            ; SCREEN
00001D30  4E4F                     856              TRAP    #15
00001D32  323C 3A00                857              MOVE.W  #$3A00,D1
00001D36  0641 0024                858              ADD.W   #128/4+4,D1
00001D3A  41F9 00001D62            859              LEA     .STAGAME,A0
00001D40  2248                     860  .PRINOPT    MOVE.L  A0,A1
00001D42  103C 000B                861              MOVE.B  #11,D0
00001D46  4E4F                     862              TRAP    #15
00001D48  5801                     863              ADD.B   #4,D1
00001D4A  103C 000D                864              MOVE.B  #13,D0
00001D4E  4E4F                     865              TRAP    #15
00001D50  D1FC 0000000C            866              ADD.L   #12,A0
00001D56  B2FC 1D86                867              CMP     #.EXTGAME,A1
00001D5A  6BE4                     868              BMI     .PRINOPT
00001D5C  4CDF 031F                869              MOVEM.L (A7)+,D0-D4/A0-A1
00001D60  4E75                     870              RTS
00001D62                           871              
00001D62= 53 54 41 52 54 20 ...    872  .STAGAME    DC.B    'START GAME ',0
00001D6E= 48 4F 57 20 54 4F ...    873  .HTPGAME    DC.B    'HOW TO PLAY',0
00001D7A= 20 20 53 43 4F 52 ...    874  .SCOGAME    DC.B    '  SCORE    ',0
00001D86= 20 20 20 45 58 49 ...    875  .EXTGAME    DC.B    '   EXIT    ',0
00001D92                           876              DS.W    0
00001D92                           877  
00001D92                           878  
00001D92                           879  -------------------- end include --------------------
00001D92                           880              INCLUDE "ARROW.X68"     
00001D92                           881  ; -----------------------------------------------------------------------------
00001D92                           882  ARINIT
00001D92                           883  ; INITIALIZE THE ARROW FROM MAIN MENU.
00001D92                           884  ; INPUT    - NONE
00001D92                           885  ; OUTPUT   - NONE
00001D92                           886  ; MODIFIES - NONE
00001D92                           887  ; -----------------------------------------------------------------------------
00001D92  33FC 3724 00002EC4       888              MOVE.W  #ARINIPOS,ARPOS
00001D9A  4E75                     889              RTS
00001D9C                           890  ; -----------------------------------------------------------------------------
00001D9C                           891  ARWUPD
00001D9C                           892  ; UPDATES THE ARROW FROM MAIN MENU.
00001D9C                           893  ; INPUT    - NONE
00001D9C                           894  ; OUTPUT   - NONE
00001D9C                           895  ; MODIFIES - NONE
00001D9C                           896  ; -----------------------------------------------------------------------------     
00001D9C  0839 0001 00001E8D       897              BTST.B  #KBDBITUP,(KBDEDGE)     ;UP KEY PRESSED?
00001DA4  6600 0010                898              BNE     .MOVEU
00001DA8  0839 0003 00001E8D       899              BTST.B  #KBDBITDN,(KBDEDGE)     ;DOWN KEY PRESSED?
00001DB0  6600 0018                900              BNE     .MOVED
00001DB4  4E75                     901  .RTN        RTS
00001DB6  0C79 3724 00002EC4       902  .MOVEU      CMP     #ARINIPOS,ARPOS
00001DBE  6700 001E                903              BEQ     .TOBOT
00001DC2  5979 00002EC4            904              SUB.W   #4,ARPOS                ; MOVING TO AN UPPER POSITION
00001DC8  60EA                     905              BRA     .RTN
00001DCA  0C79 3730 00002EC4       906  .MOVED      CMP     #ARFINPOS,ARPOS
00001DD2  6700 0014                907              BEQ     .TOTOP
00001DD6  5879 00002EC4            908              ADD.W   #4,ARPOS                ; MOVING TO A BOTTOM POSITION
00001DDC  60D6                     909              BRA     .RTN
00001DDE  33FC 3730 00002EC4       910  .TOBOT      MOVE.W  #ARFINPOS,ARPOS
00001DE6  60CC                     911              BRA     .RTN
00001DE8  33FC 3724 00002EC4       912  .TOTOP      MOVE.W  #ARINIPOS,ARPOS
00001DF0  60C2                     913              BRA     .RTN
00001DF2                           914  ; -----------------------------------------------------------------------------
00001DF2                           915  ARWPLOT
00001DF2                           916  ; PAINTS THE ARROW FROM MAIN MENU.
00001DF2                           917  ; INPUT    - NONE
00001DF2                           918  ; OUTPUT   - NONE
00001DF2                           919  ; MODIFIES - NONE
00001DF2                           920  ; -----------------------------------------------------------------------------  
00001DF2  48E7 C040                921              MOVEM.L D0-D1/A1,-(A7)
00001DF6  43F9 00001E14            922              LEA     .ARROW,A1
00001DFC  103C 000B                923              MOVE.B  #11,D0
00001E00  3239 00002EC4            924              MOVE.W  ARPOS,D1
00001E06  4E4F                     925              TRAP    #15
00001E08  103C 000D                926              MOVE.B  #13,D0
00001E0C  4E4F                     927              TRAP    #15
00001E0E  4CDF 0203                928              MOVEM.L (A7)+,D0-D1/A1
00001E12  4E75                     929              RTS
00001E14= 3D 3E 00                 930  .ARROW      DC.B    '=>',0
00001E18                           931              DS.W    0
00001E18                           932  
00001E18                           933  
00001E18                           934  
00001E18                           935  
00001E18                           936  
00001E18                           937  -------------------- end include --------------------
00001E18                           938  ; --- INITIALIZE --------------------------------------------------------------
00001E18                           939  *------
00001E18  4EB8 1000                940  START       JSR     SYSINIT                 ; INITIALIZE SYSTEM-RELATED STUFF
00001E1C  4EB8 146A                941              JSR     SFXINIT
00001E20  4EB8 1D92                942              JSR     ARINIT
00001E24                           943              ; TO DO : ADD YOUR GAME INITIALIZATION HERE
00001E24  383C 00A6                944              MOVE.W  #SCRWIDTH/6,D4
00001E28  3A3C 00A6                945              MOVE.W  #SCRHEIGH/6,D5
00001E2C  3C3C 0005                946              MOVE.W  #5,D6
00001E30  303C 0001                947              MOVE.W  #BALID,D0
00001E34  43F8 1348                948              LEA     BALINIT,A1
00001E38  45F8 138A                949              LEA     BALUPD,A2
00001E3C  47F8 13E4                950              LEA     BALPLOT,A3
00001E40  4241                     951              CLR     D1
00001E42  363C 0005                952  .CRTBALSY   MOVE.W  #5,D3
00001E46  4242                     953              CLR     D2
00001E48  4EB8 12E4                954  .CRTBALSX   JSR     AGLADD
00001E4C  D445                     955              ADD.W   D5,D2
00001E4E  51CB FFF8                956              DBRA    D3,.CRTBALSX
00001E52  D244                     957              ADD.W   D4,D1
00001E54  51CE FFEC                958              DBRA    D6,.CRTBALSY
00001E58  4EB8 1482                959              JSR     SFXPMAIN
00001E5C                           960  ; --- UPDATE ------------------------------------------------------------------
00001E5C                           961  
00001E5C  4E40                     962  .LOOP       TRAP    #KBDTRAP                ; READ KEYBOARD
00001E5E                           963  
00001E5E                           964              ; TO DO : ADD YOUR GAME UPDATE HERE
00001E5E  4EB8 12FE                965              JSR     AGLUPD
00001E62  4EB8 1D9C                966              JSR     ARWUPD
00001E66                           967              ; --- WAIT SYNCH --------------------------------------------------------------
00001E66                           968  
00001E66  4A39 00001E8E            969  .WINT       TST.B   (SCRINTCT)              ; WAIT FOR INTERRUPT
00001E6C  67F8                     970              BEQ     .WINT
00001E6E  4239 00001E8E            971              CLR.B   (SCRINTCT)
00001E74                           972  
00001E74                           973  ; --- PLOT --------------------------------------------------------------------
00001E74                           974  
00001E74                           975              ; TO DO : ADD YOUR GAME PLOT HERE
00001E74  4EB8 1322                976              JSR     AGLPLOT
00001E78  4EB8 14AE                977              JSR     TITPLOT
00001E7C  4EB8 1CFC                978              JSR     MENPLOT
00001E80  4EB8 1DF2                979              JSR     ARWPLOT
00001E84  4E41                     980              TRAP    #SCRTRAP                ; SHOW GRAPHICS
00001E86  60D4                     981              BRA     .LOOP                   ; MAIN LOOP
00001E88  FFFF FFFF                982              SIMHALT
00001E8C                           983  
00001E8C                           984  ; --- VARIABLES ---------------------------------------------------------------
00001E8C                           985  
00001E8C                           986              INCLUDE "SYSVAR.X68"
00001E8C                           987  ; =============================================================================
00001E8C                           988  ; TITLE    : SYSTEM VARIABLES
00001E8C                           989  ; AUTHOR   : ANTONI BURGUERA
00001E8C                           990  ; COMMENTS : NOTE THAT ALL THESE VARS ARE USED TO SHARE DATA FROM SYSTEM TO
00001E8C                           991  ;            USER. THUS THEY MUST NOT BE IN PROTECTED MEMORY.
00001E8C                           992  ;            NOTE THAT USING DMMDATA IN SUCH WAY IS A BAD IDEA, AS USER
00001E8C                           993  ;            APPLICATIONS CAN ALSO FREE OR CHANGE OWNERSHIP. NONETHELESS, FOR
00001E8C                           994  ;            THE SAKE OF THIS EXAMPLE THIS IS GOOD ENOUGH.
00001E8C                           995  ; HISTORY  : XX-XXX-201X - CREATION
00001E8C                           996  ;            11-OCT-2020 - MINOR CHANGES
00001E8C                           997  ; =============================================================================
00001E8C                           998  
00001E8C                           999  ; --- KEYBOARD RELATED VARIABLES ----------------------------------------------
00001E8C                          1000  
00001E8C                          1001  KBDVAL      DS.B    1                       ; KEY PRESSED=1
00001E8D                          1002  KBDEDGE     DS.B    1                       ; KEY CHANGED=1
00001E8E                          1003  
00001E8E                          1004              DS.W    0
00001E8E                          1005  
00001E8E                          1006  ; --- SCREEN RELATED VARIABLES ------------------------------------------------
00001E8E                          1007  
00001E8E                          1008  SCRINTCT    DS.B    1                       ; INTERRUPT COUNTER/FLAG
00001E8F                          1009  SCRCYCCT    DS.B    1                       ; CYCLE COUNTER
00001E90                          1010              DS.W    0
00001E90                          1011  
00001E90                          1012  ; --- DYNAMIC MEMORY VARIABLES ------------------------------------------------
00001E90                          1013  
00001EC0                          1014              ORG     (*+DMMBSIZE-1)&-DMMBSIZE ; ALIGN TO DMMBSIZE
00001EC0                          1015  DMMDATA     DS.B    DMMBSIZE*DMMBNUM        ; DYNAMIC MEMORY ALLOCATION SPACE
00002EC0                          1016              DS.W    0                       ; JUST IN CASE (SIZE IS POW OF TWO)
00002EC0                          1017  -------------------- end include --------------------
00002EC0                          1018              INCLUDE "VAR.X68"
00002EC0                          1019  ; =============================================================================
00002EC0                          1020  ; TITLE    : GAME VARIABLES
00002EC0                          1021  ; AUTHOR   : ANTONI BURGUERA
00002EC0                          1022  ; HISTORY  : 12-OCTOBER-2020 - CREATION
00002EC0                          1023  ; =============================================================================
00002EC0                          1024  
00002EC0                          1025  ; --- PAD RELATED VARIABLES ---------------------------------------------------
00002EC0                          1026  
00002EC0                          1027  PADX        DS.W    1                       ; PAD X COORDINATE (XCENTER)
00002EC2                          1028  PADY        DS.W    1                       ; PAD Y COORDINATE (YCENTER)
00002EC4                          1029  ; --- ARROW RELATED VARIABLES -------------------------------------------------
00002EC4                          1030  
00002EC4                          1031  ARPOS       DS.W    1                       ; HIGH BYTE INDICATES ROW, LOW BYTE INDICATES COLUMN
00002EC4                          1032  -------------------- end include --------------------
00002EC6                          1033              END    START

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
AGLADD              12E4
AGLADD:END          12FA
AGLKILL             11C0
AGLPLOT             1322
AGLPLOT:END         1342
AGLPLOT:LOOP        132A
AGLUPD              12FE
AGLUPD:END          131C
AGLUPD:LOOP         1306
ARFINPOS            3730
ARINIPOS            3724
ARINIT              1D92
ARPOS               2EC4
ARWPLOT             1DF2
ARWPLOT:ARROW       1E14
ARWUPD              1D9C
ARWUPD:MOVED        1DCA
ARWUPD:MOVEU        1DB6
ARWUPD:RTN          1DB4
ARWUPD:TOBOT        1DDE
ARWUPD:TOTOP        1DE8
BALBCOL             B9B6FA
BALID               1
BALINIT             1348
BALINIT:DOWN        1372
BALINIT:END         1376
BALINIT:SPEEDS      137E
BALMCOL             FF
BALPLOT             13E4
BALRAD              F
BALSPEED            2
BALUPD              138A
BALUPD:ENDR         13B0
BALUPD:ENDT         13C4
BALUPD:TPBOT        13D0
BALUPD:TPLEFT       13DE
BALUPD:TPRIGHT      13D8
BALUPD:TPTOP        13C8
BASFCOL             50C66
BASPCOL             0
DMMALLOC            11A6
DMMALLOC:END        11BE
DMMBNUM             40
DMMBSIZE            40
DMMDATA             1EC0
DMMFCOM             1180
DMMFFND             118E
DMMFIRST            1136
DMMFLOOP            1174
DMMFRCOM            1148
DMMFREE             11C0
DMMFRFND            1156
DMMFRLOP            113C
DMMFRSTO            116E
DMMINIT             1114
DMMINIT:LOOP        1122
DMMNEXT             1158
DMMNEXTO            1190
DMMSYSID            0
KBDBITDN            3
KBDBITF1            4
KBDBITF2            5
KBDBITF3            6
KBDBITLF            0
KBDBITPS            7
KBDBITRT            2
KBDBITUP            1
KBDCHRDN            28
KBDCHRLF            25
KBDCHRMK            4D
KBDCHRPK            50
KBDCHRRT            27
KBDCHRSH            10
KBDCHRSP            20
KBDCHRUP            26
KBDDOWN             28
KBDEDGE             1E8D
KBDFIRE1            20
KBDFIRE2            4D
KBDFIRE3            10
KBDINIT             10B4
KBDLEFT             25
KBDMSKDN            8
KBDMSKF1            10
KBDMSKF2            20
KBDMSKF3            40
KBDMSKLF            1
KBDMSKPS            80
KBDMSKRT            4
KBDMSKUP            2
KBDPAUSE            50
KBDREAD             10CA
KBDREAD:LOOP        110A
KBDREAD:STORE       1106
KBDRIGHT            27
KBDTRAP             0
KBDUP               26
KBDVAL              1E8C
MENFCOL             0
MENHEIGH            118
MENPCOL             FFFFFF
MENPLOT             1CFC
MENPLOT:EXTGAME     1D86
MENPLOT:HTPGAME     1D6E
MENPLOT:PRINOPT     1D40
MENPLOT:SCOGAME     1D7A
MENPLOT:STAGAME     1D62
MENWIDTH            118
PADFCOL             770000
PADHEIGH            30
PADINIT             11E0
PADPCOL             FF0000
PADPLOT             129E
PADSPEED            8
PADUPDKB            11F2
PADUPDKB:DOD        1274
PADUPDKB:DOL        1232
PADUPDKB:DOR        1248
PADUPDKB:DOU        125E
PADUPDKB:MOVED      1266
PADUPDKB:MOVEL      1224
PADUPDKB:MOVER      123A
PADUPDKB:MOVEU      1250
PADUPDMS            127C
PADUPDMS:END        1298
PADWIDTH            40
PADX                2EC0
PADY                2EC2
SCRCYCCT            1E8F
SCRHEIGH            3E8
SCRINIT             101C
SCRINTCT            1E8E
SCRIRQ              1
SCRISR              108C
SCRTIM              14
SCRTRAP             1
SCRUPD              109A
SCRWIDTH            3E8
SFXINIT             146A
SFXMAIN             11D6
SFXPMAIN            1482
SFXSTOP             1498
START               1E18
START:CRTBALSX      1E48
START:CRTBALSY      1E42
START:LOOP          1E5C
START:WINT          1E66
SYSINIT             1000
TITFCOL             263466
TITPLOT             14AE
TITPLOT:LOOP        14C8
TITPLOT:STR0        14EC
TITPLOT:STRND       1CA6
